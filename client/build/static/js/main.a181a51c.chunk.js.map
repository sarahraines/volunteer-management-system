{"version":3,"sources":["assets/register.svg","assets/login.svg","assets/undraw_hang_out.svg","assets/undraw_team_spirit.svg","assets/Recruit.svg","assets/landing.svg","assets/AboutImage.svg","assets/Onboard.svg","assets/Engage.svg","assets/Retain.svg","assets/Analyze.svg","assets/Automate.svg","assets/volunteersense.png","reducers.js","api/axiosApi.js","api/authenticationApi.js","actionCreators.js","utils/googleAnalytics.js","forms/AuthForm.jsx","pages/Auth.jsx","pages/Home/utils.js","pages/Home/Nav3.jsx","pages/Home/Banner5.jsx","pages/Home/Feature0.jsx","pages/Home/Footer2.jsx","pages/Home/Feature1.jsx","pages/Home/Home.jsx","pages/Home/data.source.js","components/Sidebar.jsx","components/AvatarUpload.jsx","forms/NewOrgForm.jsx","pages/NewOrg.jsx","forms/ProfileForm.jsx","pages/ProfileSettings.jsx","forms/ResetPasswordForm.jsx","pages/SecuritySettings.jsx","forms/UserNotificationsForm.jsx","pages/UserNotifications.jsx","pages/Settings.jsx","forms/NewEventForm.jsx","pages/NewEvent.jsx","components/QAndA.jsx","pages/QAndAPage.jsx","components/EventModal.jsx","components/JoinButton.jsx","components/EventCard.jsx","pages/OrgEvents.jsx","pages/AboutUs.jsx","pages/MemberPage.jsx","pages/OrgFeedback.jsx","components/NonprofitFunnel.jsx","components/VolunteerLeaderboard.jsx","components/EventLeaderboardPlots.jsx","components/EventLeaderboard.jsx","components/VolunteerBreakdown.jsx","pages/Analytics.jsx","pages/InvitePage.jsx","components/StatusTag.jsx","pages/UserFilesTable.jsx","components/ClearanceUpload.jsx","pages/OrgClearanceTable.jsx","pages/Clearances.jsx","pages/NewEmail.jsx","pages/Attendees.jsx","pages/OrgPage.jsx","pages/LoadingOrg.jsx","components/VolunteerEventLeaderboard.jsx","components/NonprofitBreakdown.jsx","components/VolunteerSummary.jsx","components/VolunteerCharts.jsx","pages/VolunteerAnalytics.jsx","pages/VolunteerCalendarCard.jsx","pages/VolunteerCalendar.jsx","forms/NewGoalForm.jsx","components/VolunteerGoals.jsx","pages/NewGoal.jsx","components/OrgModal.jsx","components/OrgJoinButton.jsx","components/OrgCard.jsx","pages/BrowseOrgs.jsx","forms/EventFeedbackForm.jsx","pages/EventFeedback.jsx","pages/Notifications.jsx","components/FeedContent.jsx","components/ReportModal.jsx","components/Tutorial.jsx","pages/Feed.jsx","forms/InviteAuthForm.jsx","pages/InviteAuth.jsx","pages/InviteNoAuth.jsx","pages/Activate.jsx","forms/ForgotPasswordForm.jsx","pages/ForgotPassword.jsx","pages/ResetPassword.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","rootReducer","combineReducers","alerts","state","action","type","concat","filter","alert","id","orgs","sidebar_item","baseURL","process","accessToken","localStorage","getItem","axiosInstance","axios","create","timeout","headers","interceptors","response","use","a","error","originalRequest","config","status","url","window","location","href","Promise","reject","data","code","refresh_token","post","refresh","setItem","access","defaults","setNewHeaders","user_id","axiosRetry","retries","retryDelay","Math","random","retryCondition","isRetryableError","register","email","firstName","lastName","password","axiosAPI","first_name","last_name","registerFromInvite","invite_id","login","reset_password","old_password","new_password","forgot_password","addAlert","message","alert_type","shortid","generate","removeAlert","setOrgs","setSidebarItem","makePageView","pageName","ReactGA","pageview","usePageView","useEffect","makeEvent","args","event","AuthForm","isRegister","history","useHistory","dispatch","useDispatch","onFinish","useCallback","values","category","push","submitButtonText","switchAuthPages","Fragment","to","name","className","initialValues","remember","Item","Group","compact","noStyle","rules","required","style","width","placeholder","hasFeedback","prefix","MailOutlined","min","LockOutlined","dependencies","getFieldValue","validator","rule","value","resolve","htmlType","Auth","title","logo","RegisterLogo","LoginLogo","useSelector","shallowEqual","onClose","setTimeout","alertList","map","key","banner","closable","height","Content","Title","level","src","alt","isImg","getChildrenToRender","item","i","tag","indexOf","children","match","React","createElement","Button","toString","Menu","SubMenu","Header3","props","phoneClick","phoneOpen","setState","undefined","this","dataSource","isMobile","navChildren","subItem","itemProps","trim","popupClassName","$item","ii","childItem","child","moment","component","animation","opacity","wrapper","page","x","ease","mobileMenu","onClick","duration","onComplete","e","target","reverse","mode","defaultSelectedKeys","theme","Component","Banner5","tagProps","animType","queue","one","y","leaveReverse","childWrapper","componentProps","md","xs","image","PureComponent","titleWrapper","overPackData","OverPack","Row","block","blockProps","Footer2","links","copyright","Content1","scaleY","resetStyle","imgWrapper","Col","img","textWrapper","content","Nav30DataSource","Banner50DataSource","LandingLogo","Feature10DataSource","playScale","AboutImage","Feature00DataSource","Recruit","Onboard","Engage","Retain","Analyze","Automate","Footer20DataSource","enquireScreen","b","Home","show","port","pathname","Nav3","Feature1","Feature0","ref","d","dom","Divider","Sidebar","member","sidebarItem","onSelect","latestSelectedKey","onLogout","removeItem","organizationsList","organization","selectedKeys","icon","BulbOutlined","UsergroupAddOutlined","PlusSquareOutlined","SearchOutlined","CheckSquareOutlined","CalendarOutlined","BarChartOutlined","OrderedListOutlined","SettingOutlined","LogoutOutlined","AvatarUpload","updateImageField","initialImageURL","useState","fileList","setFileList","onChange","newFileList","length","file","reader","FileReader","readAsDataURL","originFileObj","onload","thumbUrl","result","onPreview","Image","imgWindow","open","document","write","outerHTML","rotate","quality","listType","onRemove","_file","customRequest","options","onSuccess","TextArea","Input","NewOrgForm","form","org","closeModalWithUpdate","setLoading","isLoading","setIsLoading","selectedCauses","setSelectedCauses","causes","setCauses","imageFile","setImageFile","getCauses","get","console","setFieldsValue","filteredCauses","useMemo","o","includes","formdata","FormData","append","description","website","phone","address","is_public","newOrg","org_id","member_type","params","forEach","success","maxLength","Option","autoSize","row","loading","NewOrg","Text","Typography","ProfileForm","user","isEditable","setIsEditable","setFirstName","setLastName","setEmail","textPlaceholder","fieldName","fieldValue","marginBottom","span","requiredMark","labelCol","labelAlign","label","transition","hidden","ProfileSettings","setUser","getUser","userId","maxWidth","active","paragraph","rows","ResetPasswordForm","isAuthenticated","rt","URLSearchParams","search","paddingLeft","paddingRight","SecuritySettings","UserNotificationsForm","text","setText","phone_number","phoneNumber","setPhoneNumber","Form","useForm","checked","disabled","addonBefore","UserNotifications","TabPane","Tabs","Settings","defaultActiveKey","tab","RangePicker","DatePicker","NewEventForm","selectedOrgs","setSelectedOrgs","getOrgs","beginMoment","Date","begindate","endMoment","enddate","date","virtual","toISOString","attendee_cap","instructions","layout","valuePropName","initialValue","checkedChildren","unCheckedChildren","defaultChecked","showTime","format","NewEvent","Paragraph","QAndA","isAdmin","removeFaq","orgId","question","questionStr","setQuestionStr","answer","answerStr","setAnswerStr","isPublic","setIsPublic","updateQ","newQuestionStr","updateA","newAnswerStr","updatePublic","newIsPublic","onDelete","delete","marginTop","actions","DeleteOutlined","display","float","verticalAlign","fontWeight","marginLeft","flexGrow","editable","QAndAPage","qA","setQA","getQA","faq","addQAField","EventModal","isModalVisible","tags","cause","color","begindateOptions","year","month","day","hour","minute","enddateOptions","getDate","toLocaleString","attendee_count","extraContent","marginRight","flex","visible","footer","onCancel","preview","EventLogo","JoinButton","setRegister","event_id","errMsg","getRegisterStatus","buttonText","buttonIsDisabled","background","borderColor","EventCard","removeEvent","updateEvents","setIsModalVisible","isDeleteDialogVisible","setIsDeleteDialogVisible","isDeleteDialogOkLoading","setIsDeleteDialogOkLoading","isEditDialogOkLoading","setIsEditDialogOkLoading","isEditModalVisible","setIsEditModalVisible","getCausesByEvent","eventId","closeModal","loadingVal","bordered","EditOutlined","cover","ExpandOutlined","ghost","Meta","onOk","okText","okButtonProps","danger","submit","Select","OrgEvents","events","setEvents","filterDisplay","setFilterDisplay","getEventsByOrg","direction","oldList","newList","toLowerCase","handleChange","size","start_date","end_date","bdate","edate","getMonth","getFullYear","dateFilterChange","defaultValue","openFilterChange","virtualFilterChange","grid","gutter","sm","lg","xl","xxl","renderItem","AboutUs","getCausesByOrg","extra","rel","Search","MemberPage","members","setMembers","currentUser","getMembers","deleteMember","memberId","member_id","columns","dataIndex","render","_","record","parseInt","onConfirm","cancelText","OrgFeedback","info","setInfo","getFeedbackByOrg","feedback","event__name","sorter","localeCompare","username__email","filters","filterMultiple","onFilter","overall","satisfaction","likely","expectations","future","expandedRowRender","event__location","event__begindate","event__enddate","better","experience","NonprofitFunnel","funnel","breakdown","volunteers","labels","counts","hours","element","count","splice","eventCount","hourCount","total","ratings","satisfactions","floor","avg_rating","avg_satisfaction","hoverinfo","marker","margin","l","r","t","colors","textinfo","domain","column","showlegend","legend","nbinsx","bargap","xaxis","yaxis","orientation","VolunteerLeaderboard","volunteer","timeFilterChange","defaultSortOrder","pagination","pageSize","event_list","EventLeaderboard","ratings_arr","satisfactions_arr","likely_arr","expectations_arr","future_arr","setMonth","setHours","slice","valueOf","setYear","attendees","EventLeaderboardPlots","VolunteerBreakdown","ellipsis","rowExpandable","Analytics","setFunnel","setBreakdown","setVolunteers","allVolunteers","setAllVolunteers","view","setView","getFunnel","getBreakdown","getVolunteers","getEvents","InvitePage","invites","setInvites","showModal","setShowModal","modalButtonLoading","setModalButtonLoading","invitedMembers","setInvitedMembers","memberType","setMemberType","getInvites","invite","inviteMembers","emails","deleteInvite","inviteId","resendEmail","justify","PlusOutlined","tokenSeparators","allowClear","statusMap","Complete","Rejected","Pending","None","StatusTag","Dragger","Upload","UserFilesTable","userFileList","setUserFileList","getUserFiles","files","formattedFiles","uid","orgFormId","org_file","comment","fl","filled_form","split","_text","_record","formData","UploadOutlined","getUserFileForOrgFile","infoType","oFormId","ufile","ClearanceUpload","eId","getOrgFiles","eventName","orgProps","empty_form","OrgClearanceTable","setRows","acceptOrReject","addComment","user__email","index","buttonStyle","Clearances","numIncompleteEvents","setNumIncompleteEvents","numPending","setNumPending","events__id","events__name","events__begindate","events__enddate","getAlertInfo","showIcon","NewEmail","checkedList","setCheckedList","_selectedRowKeys","selectedRows","subject","body","membersList","rowSelection","Attendees","setAttendees","getAttendees","events__location","OrgPage","setOrg","activeKey","setActiveKey","textAlign","LoadingOrg","round","innerHeight","VolunteerEventLeaderboard","NonprofitBreakdown","VolunteerSummary","nonprofits_list","events_list","VolunteerCharts","monthlyHours","nonprofits","nonprofit_list","hours_list","events__organizations__name","VolunteerAnalytics","setMonthlyHours","summary","setSummary","setNonprofits","getMonthlyHours","getSummary","getNonprofits","VolunteerCalendarCard","isYearView","vis","setVisible","viewmore","setViewmore","attendeeCount","setAttendeeCount","toggleVisible","onClickViewmore","events__virtual","time","toLocaleTimeString","navigator","language","events__description","events__instructions","events__attendee_cap","trigger","overlayStyle","substring","VolunteerCalendar","goals","setGoals","titleDate","setTitleDate","getVolunteerEvents","getVolunteerGoals","align","dateCellRender","listData","getListData","goalsBeginData","gyear","gmonth","gday","getListGoalsBegin","goalsEndData","getListGoalsEnd","monthCellRender","monthData","getMonthData","getMonthGoalsBegin","getMonthGoalsEnd","NewGoalForm","VolunteerGoals","percent","progress","NewGoal","getGoals","OrgModal","OrgLogo","OrgJoinButton","some","OrgCard","causeIntersection","hideCard","BrowseOrgs","getPublicOrgs","minWidth","EventFeedbackForm","selectedEvent","setSelectedEvent","yn_options","optionType","EventFeedback","Notifications","log","FeedContent","context","isNaN","orgMember","m","ReportModal","isModalShowing","report","setReport","getUserDetails","getReport","new_clearances","old_location","new_location","old_begindate","new_begindate","old_enddate","new_enddate","Object","keys","k","j","changed_clearances","clearance","new_status","uploaded_clearances","org_name","event_name","Tutorial","contentStyle","padding","Layout","Sider","Feed","setIsModalShowing","getMember","minHeight","flexDirection","shape","QuestionOutlined","NotificationOutlined","InviteAuthForm","InviteAuth","acceptInvite","declineInvite","AuthState","InviteNoAuth","loadingState","setLoadingState","setInvite","validate","queryString","token","returning","antIcon","LoadingOutlined","fontSize","spin","subTitle","indicator","Activate","activate","ForgotPasswordForm","ForgotPassword","ResetPassword","Register","Login","ResetPasswordNoAuth","App","exact","path","Boolean","hostname","store","createStore","initialize","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a181a51c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/register.2c0812b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/login.303e4a67.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_hang_out.16968210.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_team_spirit.6a115251.svg\";","module.exports = __webpack_public_path__ + \"static/media/Recruit.7b478bae.svg\";","module.exports = __webpack_public_path__ + \"static/media/landing.260d8c04.svg\";","module.exports = __webpack_public_path__ + \"static/media/AboutImage.988d75bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/Onboard.73ac7aa3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Engage.8a1b15dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Retain.a1fd7184.svg\";","module.exports = __webpack_public_path__ + \"static/media/Analyze.914be106.svg\";","module.exports = __webpack_public_path__ + \"static/media/Automate.c1882f12.svg\";","module.exports = __webpack_public_path__ + \"static/media/volunteersense.98bf0bb3.png\";","import { combineReducers } from 'redux';\n\nconst alerts = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_ALERT':\n            return state.concat([action])\n        case 'REMOVE_ALERT':\n            return state.filter(alert => alert.id !== action.id)\n        default:\n            return state\n    }\n}\n\nconst orgs = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_ORGS':\n            return action?.orgs ?? state;\n        default:\n            return state\n    }\n}\n\nconst sidebar_item = (state = 'loading', action) => {\n    switch (action.type) {\n        case 'SET_SIDEBAR':\n            return action?.sidebar_item ?? state;\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    alerts,\n    orgs,\n    sidebar_item,\n});\n\nexport default rootReducer;","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\nconst baseURL = `${process.env.REACT_APP_BACKEND_HOST}/api/`;\nconst accessToken = localStorage.getItem(\"access_token\");\n\nconst axiosInstance = axios.create({\n    baseURL: baseURL,\n    timeout: 20000,\n    headers: {\n        'Authorization': \"Bearer \" + accessToken,\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n    }\n});\n\naxiosInstance.interceptors.response.use(\n    response => response,\n    async error => {\n      const originalRequest = error.config;\n    \n    if (error.response && error.response.status === 401 && originalRequest.url === axiosInstance.baseURL+'token/refresh/') {\n        window.location.href = '/login/';\n        return Promise.reject(error);\n    }\n      \n    if (error.response && error.response.status === 401 && error.response.data.code === \"token_not_valid\") {\n        const refresh_token = localStorage.getItem('refresh_token');\n\n        try {\n            const response = await axiosInstance\n                .post('/token/refresh/', { refresh: refresh_token });\n            localStorage.setItem('access_token', response.data.access);\n            localStorage.setItem('refresh_token', response.data.refresh);\n\n            axiosInstance.defaults.headers['Authorization'] = \"Bearer \" + response.data.access;\n            originalRequest.headers['Authorization'] = \"Bearer \" + response.data.access;\n            return axiosInstance(originalRequest);\n        } catch (_) {\n            window.location.href = '/login/';\n            return Promise.reject(error);\n        }\n      }\n      return Promise.reject(error);\n  }\n);\n\nconst retryDelay = () => {\n    const mSec = 1000;\n    const randomMSec = 1000 * Math.random();\n    return mSec + randomMSec;\n};\n\naxiosRetry(axiosInstance, {\n    retries: 0,\n    retryDelay,\n    retryCondition: axiosRetry.isRetryableError,\n});\n\nexport function setNewHeaders(response) {\n    axiosInstance.defaults.headers[\"Authorization\"] = \"Bearer \" + response.data.access;\n    localStorage.setItem(\"access_token\", response.data.access);\n    localStorage.setItem(\"refresh_token\", response.data.refresh);\n    localStorage.setItem(\"user_id\", response.data.user_id);\n}\n\nexport default axiosInstance;","import axiosAPI, { setNewHeaders } from \"./axiosApi\";\n\nexport async function register(email, firstName, lastName, password) {\n  const response = await axiosAPI.post(\"users/create/\", {\n    email,\n    first_name: firstName,\n    last_name: lastName,\n    password,\n  });\n  localStorage.setItem(\"user\", response.data);\n  return response;\n}\n\nexport async function registerFromInvite(email, firstName, lastName, password, invite_id) {\n  const response = await axiosAPI.post(\"users/create-from-invite/\", {\n    email,\n    first_name: firstName,\n    last_name: lastName,\n    password,\n    invite_id\n  });\n  localStorage.setItem(\"user\", response.data);\n  return response;\n}\n\nexport async function login(email, password) {\n  const response = await axiosAPI.post(\"token/obtain/\", {\n    email,\n    password,\n  });\n  localStorage.setItem(\"email\", email);\n  setNewHeaders(response);\n  return response;\n}\n\nexport async function reset_password(old_password, new_password) {\n  const user_id = localStorage.getItem(\"user_id\");\n  const response = await axiosAPI.post(\"users/change-password/\", {\n    user_id,\n    old_password,\n    new_password,\n  });\n  return response;\n}\n\nexport async function forgot_password(email) {\n  const response = await axiosAPI.post(\"users/forgot-password/\", {\n    email,\n  });\n  return response;\n}\n\nexport function logout() {\n  localStorage.removeItem(\"access_token\");\n  localStorage.removeItem(\"refresh_token\");\n  localStorage.removeItem(\"user_id\");\n  axiosAPI.defaults.headers['Authorization'] = null;\n}\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem(\"access_token\");\n  return !!token;\n};","import shortid from 'shortid';\n\nexport function addAlert(message, alert_type) {\n    return {\n      type: 'ADD_ALERT',\n      id: shortid.generate(),\n      message,\n      alert_type\n    }\n  }\n  \n  export function removeAlert(id) {\n    return {\n      type: 'REMOVE_ALERT',\n      id\n    }\n  }\n\n  export function setOrgs(orgs) {\n    return {\n      type: 'SET_ORGS',\n      orgs\n    }\n  }\n\n  export function setSidebarItem(sidebar_item) {\n    return {\n      type: 'SET_SIDEBAR',\n      sidebar_item\n    }\n  }","import { useEffect } from 'react';\nimport ReactGA from 'react-ga';\n\nexport const makePageView = (pageName) => \n ReactGA.pageview(pageName);\n\n export const usePageView = pageName =>\n    useEffect(() => {\n        makePageView(pageName);\n    }, [pageName]);\n\nexport const makeEvent = (args) => ReactGA.event(args);\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button, message } from 'antd';\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\nimport { register, login } from '../api/authenticationApi';\nimport { addAlert } from '../actionCreators.js';\nimport { makeEvent } from '../utils/googleAnalytics'\nimport \"antd/dist/antd.css\";\nimport \"./AuthForm.css\"\n\n\nconst AuthForm = ({isRegister}) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            if (isRegister) {\n                await register(values.email, values.first_name, values.last_name, values.password)\n                makeEvent({\n                    category: 'auth',\n                    action: 'registration_success'\n                })\n                dispatch(addAlert('Account created! Check your email to confirm your account.', 'success'));\n            } else {\n                await login(values.email, values.password);\n                history.push(\"/\");\n            }\n        } catch (error) {\n            if (isRegister) {\n                makeEvent({\n                    category: 'auth',\n                    action: 'registration_fail'\n                })\n                dispatch(addAlert('Account could not be created. Have you already created an account with this email?', 'error'));\n            } else {\n                message.error('Login failed. Email or password is incorrect.');\n            }\n        }\n    }, [isRegister, history, dispatch]);\n\n    const submitButtonText = isRegister ? \"Create account\" : \"Log in\";\n    const switchAuthPages = isRegister ? (\n        <React.Fragment>\n            Already have an account? <Link to=\"/login\">Log in</Link>\n        </React.Fragment>\n    ) : (\n        <React.Fragment>\n            New user? <Link to=\"/register\">Create account</Link>\n        </React.Fragment> \n    );\n\n  return (\n    <React.Fragment>\n        <Form\n            name=\"auth\"\n            className=\"auth-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >   {isRegister &&\n                <Form.Item>\n                    <Input.Group compact>\n                        <Form.Item\n                            name=\"first_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'First name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"First name\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"last_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'Last name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"Last name\" />\n                        </Form.Item>\n                    </Input.Group>\n                </Form.Item>\n            }\n            <Form.Item\n                name=\"email\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Email is a required field.' },\n                    { type: 'email', message: 'Not a valid email.' }\n                ]}\n            >\n                <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                hasFeedback={isRegister}\n                rules={[\n                    { required: true, message: 'Password is a required field.' },\n                    ...isRegister ? [{ min: 12, message: \"Password must be at least 12 characters long.\"}] : [],\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n            </Form.Item>\n            {isRegister &&\n                <Form.Item\n                    name=\"confirm\"\n                    dependencies={['password']}\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Please confirm your password.' },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                                }\n                                return Promise.reject('Passwords do not match.');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                    />\n                </Form.Item>\n            }\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\">\n                    {submitButtonText}\n                </Button>\n                {switchAuthPages}\n                {!isRegister && <Link className=\"auth-form-forgot\" to=\"/forgot-password\">Forgot password?</Link>}\n            </Form.Item>\n        </Form>\n    </React.Fragment>\n  );\n};\n\nexport default AuthForm;","import React, { useCallback } from 'react';\nimport { Layout, Typography, Alert } from 'antd';\nimport AuthForm from '../forms/AuthForm';\nimport LoginLogo from '../assets/login.svg';\nimport RegisterLogo from '../assets/register.svg';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { removeAlert } from '../actionCreators.js';\nimport { usePageView } from '../utils/googleAnalytics'\nimport './Auth.css';\n\nconst Auth = ({isRegister}) => {\n  const title = isRegister ? \"Create account\" : \"Log in\";\n  const logo = isRegister ? RegisterLogo: LoginLogo;\n  const alerts = useSelector(state => state.alerts, shallowEqual);\n  const dispatch = useDispatch();\n  usePageView(isRegister ? '/register' : '/login');\n\n  const onClose = useCallback((id) => {\n    setTimeout(() => dispatch(removeAlert(id)), 500);\n  }, [dispatch]);\n\n  const alertList = alerts.map(alert => \n    <Alert\n      key={alert.id}\n      type={alert.alert_type}\n      message={alert.message}\n      banner\n      closable\n      onClose={() => onClose(alert.id)}\n    />\n  );\n\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      {alertList}\n        <Layout.Content className=\"auth-content\">\n            <div className='auth-container'>\n                <Typography.Title level={2}>{title}</Typography.Title>\n                <img \n                    className=\"auth-logo\"\n                    src={logo} \n                    alt={title + \" logo\"}\n                />\n                <AuthForm isRegister={isRegister}/>\n            </div>\n        </Layout.Content>\n    </Layout>\n  );\n};\n\n\nexport default Auth;","\nimport React from 'react';\nimport { Button } from 'antd';\n\nexport const isImg = /\\.svg/;\nexport const getChildrenToRender = (item, i) => {\n  let tag = item.name.indexOf('title') === 0 ? 'h1' : 'div';\n  tag = item.href ? 'a' : tag;\n  let children = typeof item.children === 'string' && item.children.match(isImg)\n    ? <img src={item.children} height=\"150px\" alt=\"img\" /> \n    : item.children;\n  if (item.name.indexOf('button') === 0 && typeof item.children === 'object') {\n    children = React.createElement(Button, {\n      ...item.children\n    });\n  }\n  return React.createElement(tag, { key: i.toString(), ...item }, children);\n};\n","import React from 'react';\nimport TweenOne from 'rc-tween-one';\nimport { Menu } from 'antd';\nimport { getChildrenToRender } from './utils';\n\nconst { Item, SubMenu } = Menu;\n\nclass Header3 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phoneOpen: undefined,\n    };\n  }\n\n  phoneClick = () => {\n    const phoneOpen = !this.state.phoneOpen;\n    this.setState({\n      phoneOpen,\n    });\n  };\n\n  render() {\n    const { dataSource, isMobile, ...props } = this.props;\n    const { phoneOpen } = this.state;\n    const navData = dataSource.Menu.children;\n    const navChildren = navData.map((item) => {\n      const { children: a, subItem, ...itemProps } = item;\n      if (subItem) {\n        return (\n          <SubMenu\n            key={item.name}\n            {...itemProps}\n            title={\n              <div\n                {...a}\n                className={`header3-item-block ${a.className}`.trim()}\n              >\n                {a.children.map(getChildrenToRender)}\n              </div>\n            }\n            popupClassName=\"header3-item-child\"\n          >\n            {subItem.map(($item, ii) => {\n              const { children: childItem } = $item;\n              const child = childItem.href ? (\n                <a {...childItem}>\n                  {childItem.children.map(getChildrenToRender)}\n                </a>\n              ) : (\n                <div {...childItem}>\n                  {childItem.children.map(getChildrenToRender)}\n                </div>\n              );\n              return (\n                <Item key={$item.name || ii.toString()} {...$item}>\n                  {child}\n                </Item>\n              );\n            })}\n          </SubMenu>\n        );\n      }\n      return (\n        <Item key={item.name} {...itemProps}>\n          <a {...a} className={`header3-item-block ${a.className}`.trim()}>\n            {a.children.map(getChildrenToRender)}\n          </a>\n        </Item>\n      );\n    });\n    const moment = phoneOpen === undefined ? 300 : null;\n    return (\n      <TweenOne\n        component=\"header\"\n        animation={{ opacity: 0, type: 'from' }}\n        {...dataSource.wrapper}\n        {...props}\n      >\n        <div\n          {...dataSource.page}\n          className={`${dataSource.page.className}${phoneOpen ? ' open' : ''}`}\n        >\n          <TweenOne\n            animation={{ x: -30, type: 'from', ease: 'easeOutQuad' }}\n            {...dataSource.logo}\n          >\n            <img width=\"100%\" src={dataSource.logo.children} alt=\"img\" />\n          </TweenOne>\n          {isMobile && (\n            <div\n              {...dataSource.mobileMenu}\n              onClick={() => {\n                this.phoneClick();\n              }}\n            >\n              <em />\n              <em />\n              <em />\n            </div>\n          )}\n          <TweenOne\n            {...dataSource.Menu}\n            animation={\n              isMobile\n                ? {\n                    x: 0,\n                    height: 0,\n                    duration: 300,\n                    onComplete: (e) => {\n                      if (this.state.phoneOpen) {\n                        e.target.style.height = 'auto';\n                      }\n                    },\n                    ease: 'easeInOutQuad',\n                  }\n                : null\n            }\n            moment={moment}\n            reverse={!!phoneOpen}\n          >\n            <Menu\n              mode={isMobile ? 'inline' : 'horizontal'}\n              defaultSelectedKeys={['sub0']}\n              theme=\"light\"\n            >\n              {navChildren}\n            </Menu>\n          </TweenOne>\n        </div>\n      </TweenOne>\n    );\n  }\n}\n\nexport default Header3;\n","import React from 'react';\nimport QueueAnim from 'rc-queue-anim';\nimport TweenOne from 'rc-tween-one';\nimport { getChildrenToRender } from './utils';\n\nclass Banner5 extends React.PureComponent {\n  render() {\n    const { ...tagProps } = this.props;\n    const { dataSource } = tagProps;\n    delete tagProps.dataSource;\n    delete tagProps.isMobile;\n    const animType = {\n      queue: 'bottom',\n      one: {\n        y: '+=30',\n        opacity: 0,\n        type: 'from',\n        ease: 'easeOutQuad',\n      },\n    };\n    return (\n      <div {...tagProps} {...dataSource.wrapper}>\n        <div {...dataSource.page}>\n          <QueueAnim\n            key=\"text\"\n            type={animType.queue}\n            leaveReverse\n            ease={['easeOutQuad', 'easeInQuad']}\n            {...dataSource.childWrapper}\n            componentProps={{\n              md: dataSource.childWrapper.md,\n              xs: dataSource.childWrapper.xs,\n            }}\n          >\n            {dataSource.childWrapper.children.map(getChildrenToRender)}\n          </QueueAnim>\n          <TweenOne animation={animType.one} key=\"title\" {...dataSource.image}>\n            <img src={dataSource.image.children} width=\"100%\" alt=\"img\" />\n          </TweenOne>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Banner5;\n","import React from 'react';\nimport QueueAnim from 'rc-queue-anim';\nimport { Row, Col } from 'antd';\nimport OverPack from 'rc-scroll-anim/lib/ScrollOverPack';\nimport { getChildrenToRender } from './utils';\n\nclass Content extends React.PureComponent {\n  render() {\n    const { dataSource, isMobile, ...props } = this.props;\n    const {\n      wrapper,\n      titleWrapper,\n      page,\n      OverPack: overPackData,\n      childWrapper,\n    } = dataSource;\n    return (\n      <div {...props} {...wrapper}>\n        <div {...page}>\n          <div {...titleWrapper}>\n            {titleWrapper.children.map(getChildrenToRender)}\n          </div>\n          <OverPack {...overPackData}>\n            <QueueAnim\n              type=\"bottom\"\n              key=\"block\"\n              leaveReverse\n              component={Row}\n              componentProps={childWrapper}\n            >\n              {childWrapper.children.map((block, i) => {\n                const { children: item, ...blockProps } = block;\n                return (\n                  <Col key={i.toString()} {...blockProps}>\n                    <div {...item}>\n                      {item.children.map(getChildrenToRender)}\n                    </div>\n                  </Col>\n                );\n              })}\n            </QueueAnim>\n          </OverPack>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React from 'react';\nimport TweenOne from 'rc-tween-one';\nimport OverPack from 'rc-scroll-anim/lib/ScrollOverPack';\nimport { isImg } from './utils';\n\nclass Footer2 extends React.PureComponent {\n  render() {\n    const { ...props } = this.props;\n    const { dataSource } = props;\n    delete props.dataSource;\n    delete props.isMobile;\n    return (\n      <div {...props} {...dataSource.wrapper}>\n        <OverPack {...dataSource.OverPack}>\n          <TweenOne {...dataSource.links}>\n            {dataSource.links.children.map((item, i) => {\n              return (\n                <a key={i.toString()} {...item}>\n                  <img src={item.children} height=\"100%\" alt=\"img\" />\n                </a>\n              );\n            })}\n          </TweenOne>\n          <TweenOne\n            animation={{ x: '+=30', opacity: 0, type: 'from' }}\n            key=\"copyright\"\n            {...dataSource.copyright}\n          >\n            {dataSource.copyright.children.map((item, i) =>\n              React.createElement(\n                item.name.indexOf('title') === 0 ? 'h1' : 'div',\n                { key: i.toString(), ...item },\n                typeof item.children === 'string' && item.children.match(isImg)\n                  ? React.createElement('img', {\n                      src: item.children,\n                      alt: 'img',\n                    })\n                  : item.children\n              )\n            )}\n          </TweenOne>\n        </OverPack>\n      </div>\n    );\n  }\n}\n\nexport default Footer2;\n","import React from 'react';\nimport QueueAnim from 'rc-queue-anim';\nimport TweenOne from 'rc-tween-one';\nimport { Row, Col } from 'antd';\nimport OverPack from 'rc-scroll-anim/lib/ScrollOverPack';\n\nfunction Content1(props) {\n  const { ...tagProps } = props;\n  const { dataSource, isMobile } = tagProps;\n  delete tagProps.dataSource;\n  delete tagProps.isMobile;\n  const animType = {\n    queue: isMobile ? 'bottom' : 'right',\n    one: isMobile\n      ? {\n          scaleY: '+=0.3',\n          opacity: 0,\n          type: 'from',\n          ease: 'easeOutQuad',\n        }\n      : {\n          x: '-=30',\n          opacity: 0,\n          type: 'from',\n          ease: 'easeOutQuad',\n        },\n  };\n  return (\n    <div {...tagProps} {...dataSource.wrapper}>\n      <OverPack {...dataSource.OverPack} component={Row}>\n        <TweenOne\n          key=\"img\"\n          animation={animType.one}\n          resetStyle\n          {...dataSource.imgWrapper}\n          component={Col}\n          componentProps={{\n            md: dataSource.imgWrapper.md,\n            xs: dataSource.imgWrapper.xs,\n          }}\n        >\n          <span {...dataSource.img}>\n            <img src={dataSource.image.children} width=\"100%\" alt=\"img\" />\n          </span>\n        </TweenOne>\n        <QueueAnim\n          key=\"text\"\n          type={animType.queue}\n          leaveReverse\n          ease={['easeOutQuad', 'easeInQuad']}\n          {...dataSource.textWrapper}\n          component={Col}\n          componentProps={{\n            md: dataSource.textWrapper.md,\n            xs: dataSource.textWrapper.xs,\n          }}\n        >\n          <h1 key=\"h1\" {...dataSource.title}>\n            {dataSource.title.children}\n          </h1>\n          <div key=\"p\" {...dataSource.content}>\n            {dataSource.content.children}\n          </div>\n        </QueueAnim>\n      </OverPack>\n    </div>\n  );\n}\n\nexport default Content1;\n","/* eslint no-undef: 0 */\n/* eslint arrow-parens: 0 */\nimport React from 'react';\nimport ReactGA from 'react-ga';\nimport { enquireScreen } from 'enquire-js';\n\nimport Nav3 from './Nav3';\nimport Banner5 from './Banner5';\nimport Feature0 from './Feature0';\nimport Footer2 from './Footer2';\nimport Feature1 from './Feature1';\n\nimport {\n  Nav30DataSource,\n  Banner50DataSource,\n  Feature10DataSource,\n  Feature00DataSource,\n  Footer20DataSource,\n} from './data.source';\nimport './less/antMotionStyle.less';\n\nlet isMobile;\nenquireScreen((b) => {\n  isMobile = b;\n});\n\nconst { location = {} } = typeof window !== 'undefined' ? window : {};\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMobile,\n      show: !location.port, // 如果不是 dva 2.0 请删除\n    };\n  }\n\n  componentDidMount() {\n    ReactGA.pageview(window.location.pathname + \"home\");\n    enquireScreen((b) => {\n      this.setState({ isMobile: !!b });\n    });\n    // dva 2.0 样式在组件渲染之后动态加载，导致滚动组件不生效；线上不影响；\n    /* 如果不是 dva 2.0 请删除 start */\n    if (location.port) {\n      // 样式 build 时间在 200-300ms 之间;\n      setTimeout(() => {\n        this.setState({\n          show: true,\n        });\n      }, 500);\n    }\n    /* 如果不是 dva 2.0 请删除 end */\n  }\n\n  render() {\n    const children = [\n      <Nav3\n        id=\"Nav3_0\"\n        key=\"Nav3_0\"\n        dataSource={Nav30DataSource}\n        isMobile={this.state.isMobile}\n      />,\n      <Banner5\n        id=\"Banner5_0\"\n        key=\"Banner5_0\"\n        dataSource={Banner50DataSource}\n        isMobile={this.state.isMobile}\n      />,\n      <Feature1\n        id=\"Feature1_0\"\n        key=\"Feature1_0\"\n        dataSource={Feature10DataSource}\n        isMobile={this.state.isMobile}\n      />,\n      <Feature0\n        id=\"Feature0_0\"\n        key=\"Feature0_0\"\n        dataSource={Feature00DataSource}\n        isMobile={this.state.isMobile}\n      />,\n      <Footer2\n        id=\"Footer2_0\"\n        key=\"Footer2_0\"\n        dataSource={Footer20DataSource}\n        isMobile={this.state.isMobile}\n      />,\n    ];\n    return (\n      <div\n        className=\"templates-wrapper\"\n        ref={(d) => {\n          this.dom = d;\n        }}\n      >\n        {/* 如果不是 dva 2.0 替换成 {children} start */}\n        {this.state.show && children}\n        {/* 如果不是 dva 2.0 替换成 {children} end */}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport LandingLogo from '../../assets/landing.svg';\nimport AboutImage from '../../assets/AboutImage.svg';\nimport Recruit from '../../assets/Recruit.svg';\nimport Onboard from '../../assets/Onboard.svg';\nimport Engage from '../../assets/Engage.svg';\nimport Retain from '../../assets/Retain.svg';\nimport Analyze from '../../assets/Analyze.svg';\nimport Automate from '../../assets/Automate.svg';\nimport logo from '../../assets/volunteersense.png';\nexport const Nav30DataSource = {\n  wrapper: { className: 'header3 home-page-wrapper jzih1dpqqrg-editor_css' },\n  page: { className: 'home-page' },\n  logo: {\n    className: 'header3-logo jzjgnya1gmn-editor_css',\n    children: logo,\n  },\n  Menu: {\n    className: 'header3-menu',\n    children: [\n      {\n        name: 'item1',\n        className: 'header3-item',\n        children: {\n          href: '/login',\n          children: [{ children: <p>Log in</p>, name: 'text' }],\n        },\n      },\n      {\n        name: 'item2',\n        className: 'header3-item',\n        children: {\n          href: '/register',\n          children: [{ children: <p>Register</p>, name: 'text' }],\n        },\n      },\n    ],\n  },\n  mobileMenu: { className: 'header3-mobile-menu' },\n};\nexport const Banner50DataSource = {\n  wrapper: { className: 'home-page-wrapper banner5' },\n  page: { className: 'home-page banner5-page' },\n  childWrapper: {\n    className: 'banner5-title-wrapper',\n    children: [\n      { name: 'title', children: 'Connect with your volunteers', className: 'banner5-title' },\n      {\n        name: 'explain',\n        className: 'banner5-explain',\n        children: 'Build and engage your community with our volunteer management platform.',\n      },\n      {\n        name: 'button',\n        className: 'banner5-button-wrapper',\n        children: {\n          href: '#Feature0_0',\n          className: 'banner5-button',\n          type: 'primary',\n          children: 'Learn more',\n        },\n      },\n    ],\n  },\n  image: {\n    className: 'banner5-image',\n    children: LandingLogo,\n  },\n};\nexport const Feature10DataSource = {\n  wrapper: { className: 'home-page-wrapper content1-wrapper' },\n  OverPack: { className: 'home-page content1', playScale: 0.3 },\n  imgWrapper: { className: 'content1-img', md: 12, xs: 24 },\n  textWrapper: { className: 'content1-text', md: 10, xs: 24 },\n  title: {\n    className: 'content1-title',\n    children: (\n      <span>\n        <span>\n          <span>\n            <span>\n              <blockquote>About VolunteerSense</blockquote>\n            </span>\n          </span>\n        </span>\n      </span>\n    ),\n  },\n  content: {\n    className: 'content1-content',\n    children: (\n      <span>\n        <p>VolunteerSense is designed to help nonprofits onboard, engage, and retain volunteers by serving as a \n          single source of truth for nonprofits to interface with their volunteers. This volunteer management \n          platform allows nonprofits to automate key volunteer interactions, enabling them to move away from \n          inefficient methods of volunteer management, scale up their volunteer community, and refocus on \n          what's really important: <i>advancing their mission.</i> </p>\n      </span>\n    ),\n  },\n  image: {\n    className: 'banner5-image',\n    children: AboutImage,\n  },\n};\nexport const Feature00DataSource = {\n  wrapper: { className: 'home-page-wrapper content0-wrapper' },\n  page: { className: 'home-page content0' },\n  OverPack: { playScale: 0.3, className: '' },\n  titleWrapper: {\n    className: 'title-wrapper',\n    children: [\n      { name: 'title', children: 'Why Use VolunteerSense?' },\n      { name: 'explain', children: 'Are you a nonprofit that finds itself spending hours entering data into Excel or filing paperwork ' + \n      'in order to manage your volunteers? Are these time consuming tasks preventing your nonprofit from scaling up your volunteer base (and ' +\n      'your impact)? VolunteerSense will allow your nonprofit to manage volunteers in a fraction of the time, easily engage volunteers, and ' + \n      'expand your volunteer base. Still unsure if you should switch to VolunteerSense? Check out a few of our key features below.' }\n    ],\n  },\n  childWrapper: {\n    className: 'content0-block-wrapper',\n    children: [\n      {\n        name: 'block0',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children: Recruit,\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Recruit',\n            },\n            { name: 'content', children: 'Easily invite new volunteers and allow VolunteerSense to track volunteer event sign-ups for you automatically.' },\n          ],\n        },\n      },\n      {\n        name: 'block1',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children: Onboard,\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Onboard',\n            },\n            { name: 'content', children: 'Say goodbye to filing volunteer permission slips and waivers. Manage these \\'clearances\\' with just a few button clicks instead.'  },\n          ],\n        },\n      },\n      {\n        name: 'block2',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children: Engage,\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Engage',\n            },\n            {\n              name: 'content',\n              children: 'Alert your community about new opportunities to get involved with a single click.',\n            },\n          ],\n        },\n      },\n      {\n        name: 'block3',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children: Retain,\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Retain',\n            },\n            {\n              name: 'content',\n              children: 'Remind your volunteers about upcoming events and solicit their feedback.',\n            },\n          ],\n        },\n      },\n      {\n        name: 'block4',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children: Analyze,\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Analyze',\n            },\n            {\n              name: 'content',\n              children: 'Use VolunteerSense\\'s extensive analytics page to understand volunteer behavior and how best to engage with your community.',\n            },\n          ],\n        },\n      },\n      {\n        name: 'block5',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children: Automate,\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Automate',\n            },\n            {\n              name: 'content',\n              children: 'Automatically track volunteers\\' service hours and remind volunteers to attend events they\\'ve signed up for.',\n            },\n          ],\n        },\n      },\n    ],\n  },\n  image: {\n    className: 'banner5-image',\n    children: Recruit,\n  },\n};\nexport const Footer20DataSource = {\n  wrapper: { className: 'home-page-wrapper footer2-wrapper' },\n  OverPack: { className: 'home-page footer2', playScale: 0.05 },\n  copyright: {\n    className: 'copyright',\n    children: [\n      {\n        name: 'copyright',\n        children: 'Copyright © VolunteerSense',\n        className: 'copyright-text',\n      },\n    ],\n  },\n  links: {\n    className: 'links',\n    children: [],\n  },\n};\n","import React, { useCallback, useState } from 'react';\nimport { Menu } from 'antd';\nimport { BulbOutlined, LogoutOutlined, PlusSquareOutlined, CheckSquareOutlined, SettingOutlined, UsergroupAddOutlined, BarChartOutlined, CalendarOutlined, SearchOutlined, OrderedListOutlined, NotificationOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nimport axiosAPI from '../api/axiosApi';\nimport { logout } from '../api/authenticationApi';\nimport './Sidebar.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSidebarItem } from '../actionCreators';\n\nconst { Divider, Item, SubMenu } = Menu;\n\nconst Sidebar = ({member}) =>  {\n    const sidebarItem = useSelector(state => state.sidebar_item).toString();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const onSelect = (latestSelectedKey) => {\n        dispatch(setSidebarItem(latestSelectedKey.key));\n    }\n\n    const onLogout = useCallback(async () => {\n        await axiosAPI.post(\"token/blacklist/\", {\n            refresh_token: localStorage.getItem(\"refresh_token\")\n        });\n        logout();\n        history.push(\"/login\");\n    }, [history]);\n\n    const organizationsList = (\n\t\tmember.map(member => \n\t\t\t<Item key={member?.organization?.id}>\n                {member?.organization?.name}\n            </Item>\n\t\t)\n    );\n\n    return (\n        <div className=\"menu-container\">\n            <Menu\n                mode=\"inline\"\n                theme=\"dark\"\n                selectedKeys={[sidebarItem]}\n                onSelect={onSelect}\n            >\n                <SubMenu title=\"Take action\" icon={<BulbOutlined />}>\n                    <Item className=\"action-submenu-item\" key=\"create-org\" icon={<UsergroupAddOutlined />}>\n                        Create an organization\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"create-event\" icon={<PlusSquareOutlined />}>\n                        Create event\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"browse-orgs\" icon={<SearchOutlined />}>\n                        Browse organizations\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"set-goals\" icon={<CheckSquareOutlined />}>\n                        Set goals\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"calendar\" icon={<CalendarOutlined />}>\n                        View my events\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"view-analytics\" icon={<BarChartOutlined />}>\n                        View my analytics\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"give-feedback\" icon={<OrderedListOutlined  />}>\n                        Give feedback\n                    </Item>\n                </SubMenu>\n                <Divider/>\n            </Menu>\n            <Menu\n                mode=\"inline\"\n                theme=\"dark\"\n                selectedKeys={[sidebarItem]}\n                onSelect={onSelect}\n            >\n                {organizationsList}\n            </Menu>\n            <Menu\n                mode=\"inline\"\n                theme=\"dark\"\n                selectedKeys={[sidebarItem]}\n                onSelect={onSelect}\n            >\n                <Divider/>\n                {/* <Item key=\"notifications\" icon={<NotificationOutlined />} onClick={setIsModalShowing}>\n                    Notifications\n                </Item> */}\n                <Item key=\"settings\" icon={<SettingOutlined />}>\n                    Manage user settings\n                </Item>\n                <Item key=\"logout\" icon={<LogoutOutlined />} onClick={onLogout}>\n                    Logout\n                </Item>\n            </Menu>\n        </div>\n    );\n}\n\nexport default Sidebar;\n","import React, { useEffect, useState } from 'react';\nimport { Upload } from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport './AvatarUpload.css';\n\nconst AvatarUpload = ({updateImageField, initialImageURL}) => {\n  const [fileList, setFileList] = useState([]);\n\n  useEffect(() => {\n    if (initialImageURL) {\n      setFileList([{\n        name: '',\n        status: 'done',\n        url: initialImageURL,\n      }]);\n      updateImageField(-1);\n    }\n  }, [initialImageURL, updateImageField]);\n\n  const onChange = async({ fileList: newFileList }) => {\n    if (newFileList.length > 0) {\n      const file = newFileList[0];\n      const reader = new FileReader();\n      reader.readAsDataURL(file.originFileObj);\n      reader.onload = () => {\n        file.thumbUrl = reader.result;\n        setFileList(newFileList);\n      }\n    } else {\n      setFileList(newFileList);\n    }\n  };\n\n  const onPreview = async file => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n\n    const image = new Image();\n    image.src = src;\n    image.height = 500;\n    const imgWindow = window.open(src);\n    if (imgWindow) {\n        imgWindow.document.write(image.outerHTML);\n    }\n  };\n\n  return (\n    <ImgCrop rotate quality={1.0}>\n      <Upload\n        listType=\"picture-card\"\n        fileList={fileList}\n        onChange={onChange}\n        onPreview={onPreview}\n        onRemove={_file => {\n          updateImageField(null);\n        }}\n        customRequest={async (options) => {\n          options.onSuccess(null, options.file);\n          updateImageField(options.file);\n        }}\n      >\n        {fileList.length < 1 && '+ Upload'}\n      </Upload>\n    </ImgCrop>\n  );\n};\n\nexport default AvatarUpload; \n","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { Radio, Form, Input, Button, Select, message } from 'antd';\nimport { useDispatch } from 'react-redux'\nimport { setOrgs, setSidebarItem } from '../actionCreators.js';\nimport AvatarUpload from \"../components/AvatarUpload\"\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport \"./NewOrgForm.css\";\n\nconst { TextArea } = Input;\n\nconst NewOrgForm = ({form, org, closeModalWithUpdate, setLoading}) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedCauses, setSelectedCauses] = useState([]);\n    const [causes, setCauses] = useState([]);\n    const [imageFile, setImageFile] = useState(null);\n    const dispatch = useDispatch();\n\n    const getCauses = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"causes/get/\");\n            setCauses(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setCauses]);\n\n    useEffect(() => {\n        getCauses();\n    }, [getCauses]);\n\n    useEffect(() => {\n        if (org?.id) {\n            form.setFieldsValue(org);\n        }\n    }, [form, org])\n\n    const filteredCauses = useMemo(() => {\n        return causes.filter(o => !selectedCauses.includes(o));\n    }, [selectedCauses, causes]);\n\n    const onFinish = useCallback(async (values) => {\n        if (form) {\n            setLoading(true);\n        } else {\n            setIsLoading(true);\n        }\n        try {\n            const formdata = new FormData();\n            if (org?.id) {\n                formdata.append('id', org.id);\n            }\n            formdata.append('name', values.name);\n            formdata.append('causes', values.causes);\n            formdata.append('description', values.description);\n            formdata.append('website', values.website);\n            formdata.append('phone', values.phone);\n            formdata.append('address', values.address);\n            formdata.append('email', values.email);\n            formdata.append('is_public', values.is_public);\n            // -1 means retain existing image\n            if (imageFile !== -1) {\n                formdata.append('image', imageFile);\n            }\n           \n            const newOrg = await axiosAPI.post(\"organization/upsert/\", formdata);\n            if (!form) {\n                await axiosAPI.post(\"member/create/\", {\n                    user_id: localStorage.getItem(\"user_id\"),\n                    org_id: newOrg.data.id,\n                    member_type: 1,\n                    status: 0,\n                });\n            }\n            const response = await axiosAPI.get(\"user/get-member/\", {\n                params: {\n                    user_id: localStorage.getItem(\"user_id\"), \n                }\n            });\n            response.data.forEach(member => member.key = member.organization.id)\n            dispatch(setOrgs(response.data));\n            dispatch(setSidebarItem(newOrg.data.id));\n            message.success(`Organization ${form ? \"updated\" : \"created\"}`);\n            if (form) {\n                closeModalWithUpdate();\n                setLoading(false);\n            } else {\n                setIsLoading(false);\n            }\n        }\n        catch {\n            message.error(`Organization ${form ? \"update\" : \"creation\"} failed`);\n        }\n        if (form) {\n            setLoading(false);\n        } else {\n            setIsLoading(false);\n        }\n    }, [setIsLoading, form, imageFile, org, closeModalWithUpdate, dispatch, setLoading]);\n\n    return (\n        <Form\n            name=\"org\"\n            className=\"org-form\"\n            form={form}\n            onFinish={onFinish}\n            initialValues={{\n                is_public: true\n            }}\n        >   \n            <Form.Item\n                name=\"name\"\n                hasFeedback\n                rules={[{ required: true, message: 'Organization name is required.' }]}\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Organization name\" maxLength={128} />\n            </Form.Item>\n            <Form.Item\n                name=\"causes\"\n                hasFeedback\n                rules={[{ required: true, message: 'Charitable causes are required.' }]}\n            >\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Charitable cause(s)\"\n                    value={selectedCauses}\n                    onChange={setSelectedCauses}\n                >\n                    \n                {filteredCauses.map(item => (\n                    <Select.Option key={item.id} value={item.id}>\n                        {item.name}\n                    </Select.Option>\n                ))}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"image\"\n            >\n                <AvatarUpload updateImageField={setImageFile} initialImageURL={org?.image} />\n            </Form.Item>\n            <Form.Item\n                name=\"website\"\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Website\" />\n            </Form.Item>\n            <Form.Item\n                name=\"phone\"\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Telephone\" />\n            </Form.Item>\n            <Form.Item\n                name=\"email\"\n                hasFeedback\n                rules={[\n                    { type: 'email', message: 'Not a valid email.' }\n                ]}\n            >\n                <Input placeholder=\"Email\" />\n            </Form.Item>\n            <Form.Item\n                name=\"address\"\n            >\n                <TextArea style={{ width: '100%' }} placeholder=\"Street Address\" autoSize />\n            </Form.Item>\n            <Form.Item\n                name=\"description\"\n                hasFeedback\n                rules={[{ required: true, message: 'Organization description is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Describe your organization...\" />\n            </Form.Item>\n            <Form.Item name=\"is_public\">\n                <Radio.Group>\n                    <Radio value={true}>Public</Radio>\n                    <Radio value={false}>Invitation Only</Radio>\n                </Radio.Group>\n            </Form.Item>\n            {!form &&\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"org-form-button\" loading={isLoading}>\n                        Create\n                    </Button>\n                </Form.Item>\n             }\n        </Form>\n    );\n};\n\nexport default NewOrgForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport NewOrgForm from '../forms/NewOrgForm';\nimport { usePageView } from '../utils/googleAnalytics'\nimport './NewOrg.css';\n\nconst NewOrg = () => {\n    usePageView('/create-organization')\n    return (\n        <div className='org-container'>\n            <Typography.Title level={2}>Create organization</Typography.Title>\n            <NewOrgForm />\n        </div>\n    );\n};\n\n\nexport default NewOrg;","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button, Typography, Row, Col } from 'antd';\nimport { addAlert } from '../actionCreators.js';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport { useEffect } from 'react';\n\nconst { Text } = Typography\n\nconst ProfileForm = ({user}) => {\n    const dispatch = useDispatch();\n    const [isEditable, setIsEditable] = useState(false);\n    const [firstName, setFirstName] = useState(user?.first_name);\n    const [lastName, setLastName] = useState(user?.last_name);\n    const [email, setEmail] = useState(user?.email);\n\n    useEffect(() => {\n        setFirstName(user?.first_name);\n        setLastName(user?.last_name);\n        setEmail(user?.email);\n     }, [user])\n\n\n    const onFinish = useCallback(async (values) => {\n        if (isEditable) {\n            try {\n                await axiosAPI.post(\"users/update/\", {\n                    user_id: localStorage.getItem('user_id'),\n                    first_name: firstName,\n                    last_name: lastName,\n                    email,\n                });\n                setIsEditable(false);\n                dispatch(addAlert('Profile update success', 'success'));\n            } \n            catch {\n                dispatch(addAlert('Profile update failed', 'error'));\n            }\n        }\n        else {\n            setIsEditable(true);\n        }\n    }, [isEditable, setIsEditable, dispatch, email, firstName, lastName]);\n\n    const layout = {\n        labelCol: { span: 4 },\n        labelAlign: 'left'\n    }\n    \n    const textPlaceholder = (fieldName, fieldValue) => (\n        <Row style={{ marginBottom: '8px'}}>\n            <Col span={4}>\n                <Text>{fieldName}:</Text>\n            </Col>\n            <Col span={20}>\n                <Text>{fieldValue}</Text>\n            </Col>\n        </Row>\n    )\n\n    return (\n        <React.Fragment>\n            <Form\n                name=\"update-profile\"\n                onFinish={onFinish}\n                requiredMark={false}\n                initialValues={{\n                    first_name: firstName,\n                    last_name: lastName,\n                    email: email,\n                  }}\n                {...layout}\n            > \n                {isEditable ? (\n                <Form.Item \n                    label=\"Name\"\n                >  \n                    <Input.Group compact>\n                        <Form.Item\n                            name=\"first_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'First name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"First name\" value={firstName} onChange={(e) => {setFirstName(e.target.value)}}/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"last_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'Last name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"Last name\" value={lastName} onChange={(e) => {setLastName(e.target.value)}}/>\n                        </Form.Item>\n                    </Input.Group>\n                </Form.Item>) : (\n                    textPlaceholder(\"Name\", `${firstName} ${lastName}`)\n                )}\n                {isEditable ? (\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Email is a required field.' },\n                        { type: 'email', message: 'Not a valid email.' }\n                    ]}\n                >\n                    <Input placeholder=\"Email\" value={email} onChange={(e) => {setEmail(e.target.value)}} />\n                </Form.Item>) : (\n                    textPlaceholder(\"Email\", email)\n                )}\n                {/* {isEditable ? (\n                <Form.Item\n                    label=\"Birthdate\"\n                    name=\"birthdate\"\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Birthdate is a required field.' },\n                    ]}\n                >\n                    <DatePicker \n                        onChange={() => {}} \n                        style={{ width: '100%'}}\n                    />\n                </Form.Item>) : (\n                    textPlaceholder(\"Birthdate\", \"04/14/1999\")\n                )} */}\n                <Form.Item>\n                    <Button.Group style={{ width: '100%' }}>\n                        <Button style={{ width: isEditable ? '50%' : '100%', transition: 'none' }} type=\"primary\" htmlType=\"submit\">\n                            {isEditable ? \"Update\" : \"Edit\"}\n                        </Button>\n                        <Button style={{ width: '50%', transition: 'none' }} type=\"secondary\" onClick={() => {setIsEditable(false)}} hidden={!isEditable}>\n                            Cancel\n                        </Button>\n                    </Button.Group>\n                </Form.Item>\n            </Form>\n        </React.Fragment>\n    );\n};\n\nexport default ProfileForm;","import React, {useState, useEffect} from 'react';\nimport ProfileForm from '../forms/ProfileForm';\nimport { Divider, Typography, Skeleton } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nfunction ProfileSettings() {\n\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        getUser();\n     }, [])\n\n    const getUser = async () => {\n        const userId = localStorage.getItem(\"user_id\");\n        const url = `users/get/?user_id=${userId}`;\n        const response = await axiosAPI.get(url);\n        setUser(response.data);\n    }\n\n    return (\n        <React.Fragment>\n            <div style={{ maxWidth: '600px' }}>\n                <Typography.Title level={4}>Update Profile</Typography.Title>\n                <Skeleton active loading={!user} paragraph={{ rows: 3, width: 'auto' }} title={false}>\n                    <ProfileForm user={user}/>\n                </Skeleton>\n            </div>\n            <Divider/>\n        </React.Fragment>\n    );\n}\n\nexport default ProfileSettings;","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { LockOutlined } from '@ant-design/icons';\nimport { reset_password } from '../api/authenticationApi';\nimport { addAlert } from '../actionCreators.js';\nimport { Link } from 'react-router-dom';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport \"./AuthForm.css\"\n\nconst ResetPasswordForm = ({isAuthenticated}) => {\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        if (isAuthenticated) {\n            try {\n                await reset_password(values.old_password, values.new_password);\n                dispatch(addAlert('Password reset success', 'success'));\n            } catch (error) {\n                dispatch(addAlert('Cannot reset password', 'error'));\n            }\n        } else {\n            try {\n                await axiosAPI.post(\"/users/reset-password/\", {\n                    rt: new URLSearchParams(window.location.search).get('rt'),\n                    new_password: values.new_password\n                });\n                dispatch(addAlert('Password reset success', 'success'));\n            } catch (error) {\n                dispatch(addAlert('Cannot reset password', 'error'));\n            }\n        }\n    }, [isAuthenticated, dispatch]);\n\n  return (\n    <React.Fragment>\n        <Form\n            name=\"reset-password\"\n            className=\"reset-password-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        > \n            {isAuthenticated && <Form.Item\n                name=\"old_password\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Old password is a required field.' },\n                ]}\n                \n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Old password\"\n                />\n            </Form.Item>}\n            <Form.Item\n                name=\"new_password\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'New password is a required field.' },\n                    { min: 12, message: \"Password must be at least 12 characters long.\"}\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"New password\"\n                />\n            </Form.Item>\n            <Form.Item\n                    name=\"confirm\"\n                    dependencies={['new_password']}\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Please confirm your new password.' },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('new_password') === value) {\n                                return Promise.resolve();\n                                }\n                                return Promise.reject('Passwords do not match.');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                    />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\">\n                    Submit\n                </Button>\n                {isAuthenticated && <Link style={{ paddingLeft: 4, paddingRight: 4}} to=\"/forgot-password\">Forgot password?</Link>}\n            </Form.Item>\n        </Form>\n    </React.Fragment>\n  );\n};\n\nexport default ResetPasswordForm;","import React from 'react';\nimport { Divider, Typography } from 'antd';\nimport ResetPasswordForm from '../forms/ResetPasswordForm';\n\nfunction SecuritySettings() {\n    return (\n        <React.Fragment>\n            <div style={{ maxWidth: '600px' }}>\n                <Typography.Title level={4}>Reset password</Typography.Title>\n                <ResetPasswordForm isAuthenticated={true}/>\n            </div>\n            <Divider/>\n        </React.Fragment>\n    );\n}\n\nexport default SecuritySettings;","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { addAlert } from '../actionCreators.js';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport { useEffect } from 'react';\n\nconst UserNotificationsForm = ({user}) => {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState(user?.email);\n    const [text, setText] = useState(user?.text);\n    const [phoneNumber, setPhoneNumber] = useState(user?.phone_number);\n\n    useEffect(() => {\n        setEmail(user?.email);\n        setText(user?.text);\n        setPhoneNumber(user?.phone_number);\n     }, [phoneNumber, user])\n\n\n    const onFinish = useCallback(async (values) => {\n            try {\n                await axiosAPI.post(\"user/submit-notification-settings/\", {\n                    user_id: localStorage.getItem('user_id'),\n                    email,\n                    text,\n                    phone_number: values.phone_number,\n                });\n                dispatch(addAlert('Settings update success', 'success'));\n            } \n            catch {\n                dispatch(addAlert('Settings update failed', 'error'));\n            }\n    }, [email, text, dispatch]);\n\n    const layout = {\n        labelCol: { span: 4 },\n        labelAlign: 'left'\n    }\n\n    const [form] = Form.useForm()\n\n    useEffect(() => {\n        form.setFieldsValue({\n            email: email,\n            text: text,\n            phone_number: phoneNumber,\n          })\n       }, [form, email, text, phoneNumber])\n\n    return (\n        <React.Fragment>\n            <Form\n                form={form}\n                name=\"update-profile\"\n                onFinish={onFinish}\n                initialValues={{\n                    email: email,\n                    text: text,\n                    phone_number: phoneNumber,\n                  }}\n                {...layout}\n            > \n                <Form.Item\n                    name=\"email\"\n                >\n                    <Checkbox checked={email} onChange={(e) => {setEmail(e.target.checked)}}>Send email notifications</Checkbox>\n                </Form.Item>\n                <Form.Item\n                    name=\"text\"\n                >\n                    <Checkbox checked={text} onChange={(e) => {setText(e.target.checked)}} disabled = {true}>Send text notifications</Checkbox>\n                </Form.Item>\n                <Form.Item\n                    name=\"phone_number\"\n                    hasFeedback = {text}\n                    rules={[\n                        { required: text, message: 'Phone is a required field.' },\n                    ]}\n                >\n                    <Input addonBefore=\"Phone Number\" placeholder=\"Phone Number\" disabled={true}/>\n                    {/* <Input addonBefore=\"Phone Number\" placeholder=\"Phone Number\" disabled={!text}/> */}\n                </Form.Item>\n                <Form.Item>\n                        <Button style={{ width: '100%'}} type=\"primary\" htmlType=\"submit\">\n                            Update\n                        </Button>\n                </Form.Item>\n            </Form>\n        </React.Fragment>\n    );\n};\n\nexport default UserNotificationsForm;","import React, {useEffect, useState} from 'react';\nimport UserNotificationsForm from '../forms/UserNotificationsForm';\nimport { Divider, Typography, Skeleton } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nfunction UserNotifications() {\n\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        getUser();\n     }, [])\n\n    const getUser = async () => {\n        const userId = localStorage.getItem(\"user_id\");\n        const url = `user/get-notification-settings/?user_id=${userId}`;\n        const response = await axiosAPI.get(url);\n        setUser(response.data);\n    }\n\n\n    return (\n        <React.Fragment>\n            <div style={{ maxWidth: '600px' }}>\n                <Typography.Title level={4}>Update Notifications</Typography.Title>\n                <Skeleton active loading={false} paragraph={{ rows: 3, width: 'auto' }} title={false}>\n                    <UserNotificationsForm user={user}/>\n                </Skeleton>\n            </div>\n            <Divider/>\n        </React.Fragment>\n    );\n}\n\nexport default UserNotifications;","import React from \"react\";\nimport ProfileSettings from \"../pages/ProfileSettings\";\nimport SecuritySettings from \"../pages/SecuritySettings\";\nimport UserNotifications from \"../pages/UserNotifications\";\nimport { usePageView } from '../utils/googleAnalytics'\nimport { Tabs, Typography } from 'antd';\n\nconst { TabPane } = Tabs;\n\nconst Settings = () => {\n    usePageView('/settings')\n    return (\n        <React.Fragment>\n            <Typography.Title level={3}>Manage user settings</Typography.Title>\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"Profile\" key=\"1\">\n                    <ProfileSettings />\n                </TabPane>\n                <TabPane tab=\"Security\" key=\"2\">\n                    <SecuritySettings />\n                </TabPane>\n                <TabPane tab=\"Notifications\" key=\"3\">\n                    <UserNotifications />\n                </TabPane>\n            </Tabs>\n        </React.Fragment>\n    );\n}\n\nexport default Settings;","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { Form, Input, Button, Select, Switch, DatePicker, InputNumber, message } from 'antd';\nimport moment from 'moment'\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport \"./NewEventForm.css\"\nimport AvatarUpload from \"../components/AvatarUpload\"\n\nconst { TextArea } = Input;\nconst { RangePicker } = DatePicker;\n\nconst NewEventForm = ({form, event, closeModalWithUpdate, setLoading}) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedCauses, setSelectedCauses] = useState([]);\n    const [causes, setCauses] = useState([]);\n    const [selectedOrgs, setSelectedOrgs] = useState([]);\n    const [imageFile, setImageFile] = useState(null);\n    const [orgs, setOrgs] = useState([]);\n\n    const getCauses = useCallback(async () => {\n        try{\n            const response = await axiosAPI.get(\"causes/get/\");\n            setCauses(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setCauses]);\n\n    const getOrgs = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"admin/get-orgs/\", {\n                 params: {\n                     user_id: localStorage.getItem(\"user_id\"),  \n                 }\n             });\n            setOrgs(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setOrgs]);\n\n    useEffect(() => {\n        getCauses();\n        getOrgs();\n    }, [getCauses, getOrgs]);\n\n    useEffect(() => {\n        if (event?.id) {\n            form.setFieldsValue(event)\n            const beginMoment = moment(new Date(event?.begindate));\n            const endMoment = moment(new Date(event?.enddate));\n            form.setFieldsValue({date: [beginMoment, endMoment]});\n        }\n    }, [event, form])\n    \n    const filteredCauses = useMemo(() => {\n        return causes.filter(o => !selectedCauses.includes(o));\n    }, [selectedCauses, causes]);\n\n\n    const onFinish = useCallback(async (values) => {\n        if (form) {\n            setLoading(false);\n        } else {\n            setIsLoading(false);\n        }\n        try {\n            const formdata = new FormData();\n            if (event?.id) {\n                formdata.append('id', event.id);\n            }\n            formdata.append('name', values.name);\n            formdata.append('virtual', values.virtual);\n            formdata.append('location', values.location);\n            formdata.append('causes', values.causes);\n            formdata.append('organization', values.organization);\n            formdata.append('begindate', values.date[0].toISOString());\n            formdata.append('enddate', values.date[1].toISOString());\n            formdata.append('attendee_cap', values.attendee_cap);\n            formdata.append('description', values.description);\n            formdata.append('instructions', values.instructions);\n            // -1 means retain existing image\n            if (imageFile !== -1) {\n                formdata.append('image', imageFile);\n            }\n\n            await axiosAPI.post(\"event/upsert/\", formdata);\n            if (form) {\n                setLoading(false);\n                closeModalWithUpdate();\n            } else {\n                setIsLoading(false);\n            }\n            message.success(`Event ${form ? \"updated\" : \"created\"}`);\n        }\n        catch {\n            message.error(`Event ${form ? \"update\" : \"creation\"} failed`);\n            if (form) {\n                setLoading(false);\n            } else {\n                setIsLoading(false);\n            }\n        }\n    }, [setIsLoading, form, imageFile, event, setLoading, closeModalWithUpdate]);\n\n    return (\n        <Form\n            name=\"event\"\n            className=\"event-form\"\n            form={form}\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            layout=\"vertical\"\n        >   \n            <Form.Item\n                name=\"organization\"\n                hasFeedback\n                rules={[{ required: true, message: 'Organization name is required.' }]}\n            >\n                <Select\n                    placeholder=\"Organization\"\n                    value={selectedOrgs}\n                    onChange={setSelectedOrgs}\n                    style={{ width: '100%' }}\n                >\n                    \n                {orgs.map(item => (\n                    <Select.Option key={item.id} value={item.id}>\n                        {item.name}\n                    </Select.Option>\n                ))}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"name\"\n                hasFeedback\n                rules={[{ required: true, message: 'Event name is required.' }]}\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Event name\" />\n            </Form.Item>\n            <Form.Item\n                name=\"image\"\n            >\n                <AvatarUpload updateImageField={setImageFile} initialImageURL={event?.image} />\n            </Form.Item>\n            <Form.Item\n                name=\"virtual\"\n                hasFeedback\n                valuePropName=\"checked\"\n                initialValue={true}\n            >\n                <Switch checkedChildren=\"Virtual\" unCheckedChildren=\"Non-virtual\" defaultChecked />\n            </Form.Item>\n            <Form.Item\n                name=\"location\"\n                hasFeedback\n                rules={[{ required: true, message: 'Location is required.' }]}\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Location\" />\n            </Form.Item>\n            <Form.Item\n                name=\"date\"\n                hasFeedback\n                rules={[{ required: true, message: 'Date is required.' }]}\n            >\n                <RangePicker style={{ width: '100%' }}  showTime={{ format: 'HH:mm' }} format=\"YYYY-MM-DD HH:mm\" />\n            </Form.Item>\n            <Form.Item\n                name=\"causes\"\n                hasFeedback\n                rules={[{ required: true, message: 'Causes are required.' }]}\n            >\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Charitable cause(s)\"\n                    value={selectedCauses}\n                    onChange={setSelectedCauses}\n                    style={{ width: '100%' }}\n                >\n                    \n                {filteredCauses.map(item => (\n                    <Select.Option key={item.id} value={item.id}>\n                        {item.name}\n                    </Select.Option>\n                ))}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"attendee_cap\"\n                hasFeedback\n                rules={[{ required: true, message: 'Max number of attendees is required and must be a number.'}]}\n            >\n                \n                <InputNumber style={{ width: '100%' }} placeholder=\"Maximum number of attendees\"/>\n            </Form.Item>\n            <Form.Item\n                name=\"description\"\n                hasFeedback\n                rules={[{ required: true, message: 'Description is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Event description\" />\n            </Form.Item>\n            <Form.Item\n                name=\"instructions\"\n                hasFeedback\n                rules={[{ required: true, message: 'Instructions is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Provide volunteers with instructions (i.e. how to get there, what to bring, etc.)\" />\n            </Form.Item>\n            {!form && <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" loading={isLoading}>\n                    Create\n                </Button>\n            </Form.Item>}\n        </Form>\n    );\n};\n\n\nexport default NewEventForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport NewEventForm from '../forms/NewEventForm';\nimport { usePageView } from '../utils/googleAnalytics'\nimport './NewEvent.css';\n\nconst NewEvent = () => {\n    usePageView('/new-event')\n\n    return (\n      <div className='event-container'>\n            <Typography.Title level={2}>Create an event</Typography.Title>\n            <NewEventForm />\n        </div>\n    );\n};\n\n\nexport default NewEvent;  \n\n","import React, {useState} from 'react';\nimport { Typography, Card, Switch, message } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport axiosAPI from '../api/axiosApi';\nimport './QAndA.css';\nconst { Paragraph } = Typography;\n\n\nfunction QAndA ({isAdmin, item, removeFaq, orgId}) {\n    const [questionStr, setQuestionStr] = useState(item?.question || \"\");\n    const [answerStr, setAnswerStr] = useState(item?.answer || \"\");\n    const [isPublic, setIsPublic] = useState(!!item?.is_public);\n\n    const updateQ = async (newQuestionStr) => {\n        setQuestionStr(newQuestionStr)\n        try {\n            await axiosAPI.post(\"faq/upsert/\", {\n                id: item?.id, question: newQuestionStr, answer: answerStr, org_id: orgId\n            });\n            message.success('Question updated');\n        }\n        catch {\n            message.error('Question failed to update');\n        }\n    }\n    const updateA = async (newAnswerStr) => {\n        setAnswerStr(newAnswerStr)\n        try {\n            await axiosAPI.post(\"faq/upsert/\", {\n                id: item?.id, question: questionStr, answer: newAnswerStr, is_public: isPublic, org_id: orgId\n            });\n            message.success('Answer updated');\n        }\n        catch {\n            message.error('Answer failed to update');\n        }\n    }\n    const updatePublic = async (newIsPublic) => {\n        setIsPublic(newIsPublic)\n        try {\n            await axiosAPI.post(\"faq/upsert/\", {\n                id: item?.id, question: questionStr, answer: answerStr, is_public: newIsPublic, org_id: orgId\n            });\n            message.success('FAQ updated');\n        }\n        catch {\n            message.error('FAQ failed to update');\n        }\n    }\n    const onDelete = async () => {\n        try {\n            await axiosAPI.delete(\"faq/delete/\", {\n                params: {\n                    id: item?.id,\n                }\n            });\n            removeFaq(item?.id)\n            message.success('FAQ deleted');\n        }\n        catch {\n            message.error('FAQ failed to delete');\n        }\n    }\n\n    return (\n\n        <Card style={{ marginTop: 8, marginBottom: 8 }} loading={!item} actions={isAdmin && [<DeleteOutlined onClick={onDelete} key=\"delete\" />]}>\n            <div style={{ display: \"flex\" }}>\n                <Paragraph style={{ float: \"left\", verticalAlign: \"top\", fontWeight: 700 }}>Question: </Paragraph>\n                {'  '}\n                <div style={{ marginLeft: 4, flexGrow: 100 }}>\n                    <Paragraph style={{ width: \"100%\" }} editable={{ onChange: (newQuestionStr) => updateQ(newQuestionStr) }}>{questionStr}</Paragraph>\n                </div>\n            </div>\n            <div style={{ display: \"flex\" }}>\n                <Paragraph style={{ float: \"left\", verticalAlign: \"top\", fontWeight: 700 }}>Answer: </Paragraph>\n                {'  '}\n\n                <div style={{ marginLeft: 4, flexGrow: 100 }}>\n                    <Paragraph style={{ width: \"100%\" }} editable={isAdmin ? { onChange: (newAnswerStr) => updateA(newAnswerStr) }: false}>{answerStr}</Paragraph>\n                </div>\n            </div>\n            {isAdmin &&\n                <Switch checkedChildren=\"Public\" unCheckedChildren=\"Hidden\" onChange={(newIsPublic) => updatePublic(newIsPublic)} defaultChecked={item?.is_public}/>\n            }\n        </Card>\n    )\n\n}\nexport default QAndA;","import React, {useState, useEffect} from 'react';\nimport { Button, Typography } from 'antd';\nimport QAndA from '../components/QAndA';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\n\nfunction QAndAPage({isAdmin, orgId}) {\n    const [qA, setQA] = useState([]);\n    const getQA = async (orgId) => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-faq/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setQA(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }\n\n    const removeFaq = (id) => {\n        setQA(qA.filter(faq => faq.id !== id));\n    }\n\n    useEffect(() => {\n        if (orgId) {\n            getQA(orgId);\n        }\n    }, [orgId]);\n\n    const addQAField = async () => {\n        const response = await axiosAPI.post(\"faq/upsert/\", {\n            org_id: orgId, question: \"question\", answer: \"Not yet answered\"\n        });\n        setQA([...qA, {id: response.data.id, question: \"question\", answer: \"Not yet answered\"}]);\n    }\n\n\n    return (\n        <div>\n            <Title level={4}>Frequently asked questions</Title>\n            {qA.map(item => \n                <QAndA isAdmin={isAdmin} key={item.id} item={item} removeFaq={removeFaq} orgId={orgId}/>\n            )}\n            <Button style={{ width: '100%' }} type=\"primary\" onClick={() => {addQAField()}}>Add New FAQ</Button>\n        </div>\n    );\n};\n\n\nexport default QAndAPage;","import React from 'react';\nimport {Typography, PageHeader, Tag, Row, Image} from 'antd';\nimport EventLogo from '../assets/undraw_hang_out.svg';\nimport './EventCard.css';\nimport Modal from 'antd/lib/modal/Modal';\nimport \"./EventModal.css\";\n\nconst { Paragraph } = Typography;\n\nfunction EventModal ({event, causes, onClose, isModalVisible}){\n\n    const tags = (\n        <React.Fragment>\n            {causes.map(cause => \n                <Tag \n                    key={cause.id} \n                    color=\"blue\" \n                >\n                    {cause.name}\n                </Tag>\n            )}\n        </React.Fragment>\n    );\n\n    const begindate = new Date(event.begindate)\n\tconst enddate = new Date(event.enddate)\n\tconst begindateOptions = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\tconst enddateOptions = begindate.getDate() === enddate.getDate() ?  { hour: '2-digit', minute: '2-digit' } : begindateOptions;\n    const date = begindate.toLocaleString('en-US', begindateOptions) + \" - \" + enddate.toLocaleString('en-US', enddateOptions)\n    const virtual = event.virtual ? \"Yes.\" : \"No.\";\n\n    const content = (\n        <>\n            <Paragraph><b>Date: </b>{date}</Paragraph>\n            <Paragraph><b>Location: </b>{event.location}</Paragraph>\n            <Paragraph><b>No. of Attendees: </b>{event.attendee_count}/{event.attendee_cap}</Paragraph>\n            <Paragraph><b>Virtual? </b>{virtual}</Paragraph>\n            <Paragraph><b>Description: </b>{event.description}</Paragraph>\n            <Paragraph><b>Instructions: </b>{event.instructions}</Paragraph>\n        </>\n      );\n\n    const Content = ({ children, extraContent }) => (\n        <Row>\n            <div style={{ marginRight: 24}}>{extraContent}</div>\n            <div style={{ flex: 1 }}>{children}</div>\n        </Row>\n    );\n\n\treturn (\n        <Modal\n            visible={isModalVisible}\n            footer={null}\n            onCancel={onClose}\n            width={800}\n        >\n            <PageHeader\n                title={`${event?.name}`}\n                tags={tags}\n            >\n                <Content\n                    extraContent={<Image preview={false} alt=\"img\" src={event?.image ?? EventLogo} height={300} width={300}/>}\n                >\n                    {content}\n                </Content>\n            </PageHeader>\n        </Modal>\n\t);\n\n} export default EventModal; \n\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {Button, message} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nfunction JoinButton ({item}){\n\tconst [register, setRegister] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\t\n\tconst onClick = useCallback(async (event_id, register) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tif (register) {\n\t\t\t\tawait axiosAPI.post(\"attendees/delete/\", {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\tevent: event_id,\n\t\t\t\t});\n\t\t\t\titem.attendee_count -= 1;\n\t\t\t\tmessage.success(\"Unjoined event\")\n\t\t\t} else {\n\t\t\t\tawait axiosAPI.post(\"attendees/create/\", {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\tevent: event_id,\n\t\t\t\t});\n\t\t\t\titem.attendee_count += 1;\n\t\t\t\tmessage.success(\"Joined event\");\n\t\t\t}\n\t\t\tsetRegister(!register)\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = !register ? \"Join failed\" : \"Unjoin failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, [item.attendee_count]);\n\n\tconst getRegisterStatus = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get-register-status/\", {\n                params: {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\tevent: item.id\n                }\n            });\n\t\t\tsetRegister(false);\n\t\t\tif (response.data === 1) {\n\t\t\t\tsetRegister(true);\n\t\t\t}\n        } catch (error) {\n            console.error(error);\n        }\n    }, [item.id]);\n\t\n\tuseEffect(() => {\n        getRegisterStatus();\n\t}, [getRegisterStatus]);\n\t\n\tconst buttonText = register ? \"Unjoin\" : \"Join\";\n\tconst buttonIsDisabled = item.attendee_count >= item.attendee_cap && !register;\n\n\treturn (\n\t\t<div>\n\t\t\t{register ?\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.id, register)} loading={isLoading} disabled={buttonIsDisabled} style={{ background: \"#a4a4a4\", borderColor: \"#a4a4a4\"}}>\n\t\t\t\t\t{buttonText}\n\t\t\t\t</Button>\n\t\t\t\t:\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.id, register)} loading={isLoading} disabled={buttonIsDisabled}>\n\t\t\t\t\t{buttonText}\n\t\t\t\t</Button>\n\t\t\t}\n\t\t</div>\n\t);\n\n} export default JoinButton; \n\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {Card, Button, Typography, Image, message, Modal, Form} from 'antd';\nimport {EditOutlined, DeleteOutlined, ExpandOutlined} from '@ant-design/icons';\nimport EventLogo from '../assets/undraw_hang_out.svg';\nimport axiosAPI from \"../api/axiosApi\";\nimport EventModal from './EventModal';\nimport JoinButton from './JoinButton'\nimport './EventCard.css';\nimport NewEventForm from '../forms/NewEventForm';\n\nconst { Paragraph } = Typography;\n\nfunction EventCard ({item, isAdmin, removeEvent, updateEvents}){\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\n\tconst [isDeleteDialogVisible, setIsDeleteDialogVisible] = useState(false);\n\tconst [isDeleteDialogOkLoading, setIsDeleteDialogOkLoading] = useState(false);\n\tconst [isEditDialogOkLoading, setIsEditDialogOkLoading] = useState(false);\n\tconst [isEditModalVisible, setIsEditModalVisible] = useState(false);\n\tconst [causes, setCauses] = useState([]);\n\tconst [form] = Form.useForm();\n\n\tconst getCausesByEvent = useCallback(async () => {\n\t\ttry {\n\t\t\tconst response = await axiosAPI.get(\"event/get-causes/\", {\n\t\t\t\tparams: {\n\t\t\t\t\teventId: item.id\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetCauses(response.data);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n    }, [setCauses, item.id]);\n\t\n\tuseEffect(() => {\n\t\tgetCausesByEvent();\n\t}, [getCausesByEvent]);\n\n\tconst closeModal = useCallback(() => {\n        setIsEditModalVisible(false);\n    }, []);\n\n    const closeModalWithUpdate = useCallback(() => {\n        setIsEditModalVisible(false);\n        updateEvents();\n\t\tgetCausesByEvent();\n    }, [updateEvents, getCausesByEvent]);\n\n\tconst setLoading = useCallback((loadingVal) => {\n        setIsEditDialogOkLoading(loadingVal);\n    }, []);\n\t\n\tconst begindate = new Date(item.begindate)\n\tconst enddate = new Date(item.enddate)\n\tconst begindateOptions = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\tconst enddateOptions = begindate.getDate() === enddate.getDate() ?  { hour: '2-digit', minute: '2-digit' } : begindateOptions;\n\n\tconst onClose = useCallback(() => {\n\t\tsetIsModalVisible(false);\n\t}, [setIsModalVisible])\n\n\tconst date = begindate.toLocaleString('en-US', begindateOptions) + \" - \" + enddate.toLocaleString('en-US', enddateOptions)\n\n\tconst onDelete = async (eventId) => {\n        try {\n            await axiosAPI.delete(\"event/delete/\", {\n                params: {\n                    id: eventId,\n                }\n            });\n\t\t\tremoveEvent(eventId);\n            message.success('Event deleted');\n        }\n        catch {\n            message.error('Event failed to delete');\n        }\n    }\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Card \n\t\t\t\tclassName=\"event-card\" \n\t\t\t\tbordered={true}\n\t\t\t\tactions={isAdmin ? [\n\t\t\t\t\t<EditOutlined key=\"edit\" onClick={() => {setIsEditModalVisible(true)}}/>,\n\t\t\t\t\t<DeleteOutlined key=\"delete\" onClick={() => {setIsDeleteDialogVisible(true)}}/>,\n\t\t\t\t\t] : []}\n\t\t\t\tstyle={{ height: 'auto' }}\n\t\t\t\tcover={\n\t\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t\t<Image preview={false} alt=\"img\" src={item?.image ?? EventLogo}/>\n\t\t\t\t\t\t<Button className=\"expand-button\" icon={<ExpandOutlined />} ghost onClick={setIsModalVisible}/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<Card.Meta title={item.name} description={\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Paragraph><i>{date}</i></Paragraph>\n\t\t\t\t\t\t{item.attendee_count === item.attendee_cap ?\n\t\t\t\t\t\t\t<Paragraph><i>No. of Attendees: {item.attendee_count}/{item.attendee_cap} [Closed]</i></Paragraph>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<Paragraph><i>No. of Attendees: {item.attendee_count}/{item.attendee_cap} </i></Paragraph>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t{<JoinButton item={item}/>}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t} />\n\t\t\t</Card>\n\t\t\t<EventModal event={item} causes={causes} isModalVisible={isModalVisible} onClose={onClose}/>\n\t\t\t<Modal\n\t\t\t\ttitle=\"Delete Event\"\n\t\t\t\tvisible={isDeleteDialogVisible}\n\t\t\t\tonOk={() => {\n\t\t\t\t\t\tsetIsDeleteDialogOkLoading(true);\n\t\t\t\t\t\tonDelete(item.id);\n\t\t\t\t\t\tsetIsDeleteDialogOkLoading(false);\n\t\t\t\t\t\tsetIsDeleteDialogVisible(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tonCancel={() => setIsDeleteDialogVisible(false)}\n\t\t\t\tokText=\"Delete\"\n\t\t\t\tokButtonProps={{\n\t\t\t\t\tloading: isDeleteDialogOkLoading,\n\t\t\t\t\tdanger: true,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<p>{`Are you sure that you want to delete ${item.name}?`}</p>\n\t\t\t</Modal>\n\t\t\t<Modal \n                title=\"Edit event\" \n                visible={isEditModalVisible}\n                onCancel={closeModal}\n\t\t\t\twidth={448}\n                footer={[\n                    <Button key=\"cancel\" onClick={closeModal}>\n                      Cancel\n                    </Button>,\n                    <Button key=\"submit\" type=\"primary\" loading={isEditDialogOkLoading} onClick={form.submit} >\n                      Update\n                    </Button>,\n                  ]}\n            >\n                <NewEventForm form={form} event={item} closeModalWithUpdate={closeModalWithUpdate} setLoading={setLoading}/>\n            </Modal>\n\t\t</React.Fragment>\n\t);\n\n} export default EventCard; \n\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Typography, DatePicker, Select, Space, List, Input } from 'antd';\nimport \"antd/dist/antd.css\";\nimport './Event.css';\nimport EventCard from '../components/EventCard';\nimport axiosAPI from \"../api/axiosApi\";\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nconst OrgEvents = ({orgId, isAdmin}) => {\n    const [events, setEvents] = useState([]); \n    const [filterDisplay, setFilterDisplay] = useState([]);\n    \n    const getEventsByOrg = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get-by-org/\", {\n                params: {\n                    orgId: orgId,\n                }\n            });\n            setEvents(response.data);\n            setFilterDisplay(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setEvents, orgId]);\n\n    useEffect(() => {\n        getEventsByOrg();\n    }, [orgId, getEventsByOrg]);\n\n    const updateEvents = () => {\n        getEventsByOrg();\n    }\n\n    const removeEvent = useCallback(id => {\n        setEvents(events.filter(event => event.id !== id));\n        setFilterDisplay(events.filter(event => event.id !== id));\n    }, [events]);\n\n    const handleChange = e => {\n        let oldList = events;\n        if (e !== \"\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                event.name.toLowerCase().includes(e.toLowerCase())\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const virtualFilterChange = value => {\n        let oldList = events;\n        if (value === \"virtual\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                event.virtual\n            );\n            setFilterDisplay(newList);\n        } else if (value === \"inperson\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                !event.virtual\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const openFilterChange = value => {\n        let oldList = events;\n        if (value === \"open\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                (event.attendee_count < event.attendee_cap)\n            );\n            setFilterDisplay(newList);\n        } else if (value === \"closed\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                !(event.attendee_count < event.attendee_cap)\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const dateFilterChange = value => {\n        let oldList = events;\n        if (value != null) {\n            let start_date = new Date(value[0]);\n            let end_date = new Date(value[1]);\n            \n            let newList = events.filter(e => {\n                const bdate = new Date(e.begindate);\n                const edate = new Date(e.enddate);\n                return ((start_date.getMonth() <= edate.getMonth() && end_date.getMonth() >= bdate.getMonth())\n                    && (start_date.getDate() <= edate.getDate() && end_date.getDate() >= bdate.getDate())\n                    && (start_date.getFullYear() <= edate.getFullYear() && end_date.getFullYear() >= bdate.getFullYear()));\n            })\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={4}>Upcoming events</Typography.Title>\n            <Space direction=\"vertical\">\n                <div style={{  width: \"100%\" }}>Search by name: <Input onChange={e => handleChange(e.target.value)} placeholder=\"Event name\" size=\"medium\" className=\"search\" style={{height: 33.825, width: \"40%\", marginLeft: 4 }}/></div>\n                <Space>\n                    Filter by date:<Space direction=\"vertical\" size={12}>\n                        <RangePicker onChange={value => dateFilterChange(value)}/>\n                    </Space>\n                    Filter by open:<Select defaultValue=\"none\" style={{ width: 120 }} onChange={value => openFilterChange(value)} size=\"medium\">\n                        <Option value=\"none\">Select All</Option>\n                        <Option value=\"open\">Open</Option>\n                        <Option value=\"closed\">Closed</Option>\n                    </Select>\n                    Filter by virtual:<Select defaultValue=\"none\" style={{ width: 120 }} onChange={value => virtualFilterChange(value)} size=\"medium\">\n                        <Option value=\"none\">Select All</Option>\n                        <Option value=\"virtual\">Virtual</Option>\n                        <Option value=\"inperson\">Not Virtual</Option>\n                    </Select>\n                </Space> \n            </Space> \n            <List\n                grid={{\n                    gutter: 16,\n                    xs: 1,\n                    sm: 1,\n                    md: 2,\n                    lg: 2,\n                    xl: 3,\n                    xxl: 3,\n                }}\n                dataSource={filterDisplay}\n                renderItem={item => (\n                    <List.Item>\n                        <EventCard key={item.id} item={item} isAdmin={isAdmin} removeEvent={removeEvent} updateEvents={updateEvents} />\n                    </List.Item>\n                )}\n            />\n        </React.Fragment>\n    );\n}; export default OrgEvents;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { Typography, Skeleton, Tag, Descriptions, PageHeader, Button, Modal, Form } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport NewOrgForm from '../forms/NewOrgForm';\n\nconst { Paragraph } = Typography;\n\nconst AboutUs = ({org, isAdmin}) => {\n    const [causes, setCauses] = useState([]);\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [form] = Form.useForm();\n\n    const getCausesByOrg = useCallback(async () => {\n        if (org?.id) {\n            try {\n                const response = await axiosAPI.get(\"organization/get-causes/\", {\n                    params: {\n                        orgId: org?.id\n                    }\n                });\n                setCauses(response.data);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    }, [setCauses, org]);\n\n    const closeModal = useCallback(() => {\n        setIsModalVisible(false);\n    }, []);\n\n    const closeModalWithUpdate = useCallback(() => {\n        setIsModalVisible(false);\n        getCausesByOrg();\n    }, [getCausesByOrg]);\n\n    const setLoading = useCallback((loadingVal) => {\n        setIsLoading(loadingVal);\n    }, []);\n\n    useEffect(() => {\n        getCausesByOrg();\n    }, [getCausesByOrg]);\n\n    const tags = (\n        <React.Fragment>\n            {causes.map(cause => \n                <Tag \n                    key={cause.id} \n                    color=\"blue\" \n                >\n                    {cause.name}\n                </Tag>\n            )}\n        </React.Fragment>\n    );\n\n    return (\n        <Skeleton loading={!org} active>\n            <PageHeader\n                title={`About ${org?.name}`}\n                className=\"site-page-header\"\n                tags={tags}\n                extra={isAdmin && [\n                    <Button key=\"1\" type=\"primary\" icon={<EditOutlined />} onClick={setIsModalVisible}>\n                      Edit organization\n                    </Button>,\n                  ]}\n            >\n                  <Descriptions>\n                    {org?.website && <Descriptions.Item label=\"Website\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={org.website}>{org.website}</a></Descriptions.Item>}\n                    {org?.phone && <Descriptions.Item label=\"Telephone\">{org.phone}</Descriptions.Item>}\n                    {org?.email && <Descriptions.Item label=\"Email\"><a href={`mailto:${org.email}`}>{org.email}</a></Descriptions.Item>}\n                    {org?.address && <Descriptions.Item label=\"Street Address\">{org.address}</Descriptions.Item>}\n                </Descriptions>\n                <Paragraph>{org?.description}</Paragraph>\n            </PageHeader>\n            <Modal \n                title=\"Edit organization\" \n                visible={isModalVisible}\n                onCancel={closeModal}\n                width={448}\n                footer={[\n                    <Button key=\"cancel\" onClick={closeModal}>\n                      Cancel\n                    </Button>,\n                    <Button key=\"submit\" type=\"primary\" loading={isLoading} onClick={form.submit} >\n                      Update\n                    </Button>,\n                  ]}\n            >\n                <NewOrgForm form={form} org={org} closeModalWithUpdate={closeModalWithUpdate} setLoading={setLoading}/>\n            </Modal>\n        </Skeleton>\n    );\n}; \n\nexport default AboutUs;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Button, Popconfirm, Tooltip, message, Input } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\nconst { Search } = Input;\n\nfunction MemberPage({orgId}) {\n    const [members, setMembers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [filterDisplay, setFilterDisplay] = useState([]);\n\n    const currentUser = localStorage.getItem(\"user_id\");\n    \n    const getMembers = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"organization/get-members/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            response.data.forEach(member => member.key = member.id);\n            setFilterDisplay(response.data); \n            setMembers(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n\n    const deleteMember = useCallback(async (memberId) => {\n        try {\n            await axiosAPI.delete(\"member/delete/\", {\n                params: {\n                    member_id: memberId,\n                }\n            });\n            setMembers(members.filter(member => member.key !== memberId));\n            message.success(\"Member deleted\");\n        } catch(error) {\n            console.error(error);\n            message.error(\"Member could not be deleted.\");\n        }\n    }, [members]);\n\n    useEffect(() => {\n        if (orgId) {\n            getMembers(orgId);\n        }\n    }, [getMembers, orgId]);\n\n    const handleChange = e => {\n        let oldList = members;\n        if (e !== \"\") {\n            let newList = [];\n            newList = oldList.filter(member =>\n                member.user.name.toLowerCase().includes(e.toLowerCase())\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: ['user', 'name'],\n            key: 'name',\n        },\n        {\n            title: 'Email',\n            dataIndex: ['user', 'email'],\n            key: 'email',\n        },\n        {\n            title: 'Role',\n            dataIndex: 'role',\n            key: 'role',\n            render: (_, record) => (\n                record.member_type === 1 ? \"Admin\" : \"Member\"\n            ),\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: (_, record) => (\n                \"Active\"\n            ),\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (_, record) => (\n                parseInt(currentUser) === record.user.id ?\n                (\n                    <Tooltip title=\"Cannot delete your own user.\">\n                        <Button type=\"primary\" danger disabled>\n                            Delete\n                        </Button>\n                    </Tooltip>\n                ) : (\n                    <Popconfirm title=\"Are you sure you want to delete this member?\" onConfirm={() => deleteMember(record.key)} okText=\"Yes\" cancelText=\"No\" disabled={parseInt(currentUser) === record.user.id}>\n                        <Button type=\"primary\" danger>\n                            Delete\n                        </Button>\n                    </Popconfirm>\n                )\n            )\n        }\n    ];\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Members</Title>\n            <Search placeholder=\"search by member name\" onChange={e => handleChange(e.target.value)} style={{ width: 300, marginBottom: 16 }}  />\n            <Table columns={columns} dataSource={filterDisplay} loading={loading}/>\n        </React.Fragment>\n    );\n};\n\n\nexport default MemberPage;","import React, {useState, useEffect, useCallback} from 'react';\nimport {Typography, Table, Input} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\n\nconst { Search } = Input;\n\nconst OrgFeedback = ({isAdmin, orgId}) => {\n\n    const [info, setInfo] = useState([]); \n    const [filterDisplay, setFilterDisplay] = useState([]);\n\n    const getFeedbackByOrg = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"eventFeedback/get-by-org/\", {\n                params: {\n                    orgId: orgId,\n                    isAdmin: isAdmin,\n                    userId: localStorage.getItem(\"user_id\"), \n                }\n            });\n            setInfo(response.data);\n            setFilterDisplay(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [orgId, isAdmin]);\n\n    useEffect(() => {\n        getFeedbackByOrg();\n    }, [getFeedbackByOrg]);\n\n    const handleChange = e => {\n        let oldList = info;\n        if (e !== \"\") {\n            let newList = [];\n            newList = oldList.filter(feedback =>\n                feedback.event__name.toLowerCase().includes(e.toLowerCase()) || \n                feedback.name.toLowerCase().includes(e.toLowerCase())\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const columns = [\n    {\n    title: 'Event Name',\n    dataIndex: 'event__name',\n    key: 'event__name',\n    sorter: (a, b) => a.event__name.localeCompare(b.event__name),\n    },\n    {\n    title: 'Volunteer Name',\n    dataIndex: 'name',\n    key: 'name',\n    sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n    title: 'Volunteer Email',\n    dataIndex: 'username__email',\n    key: 'username__email',\n    sorter: (a, b) => a.username__email.localeCompare(b.username__email),\n    },\n    {\n    title: 'Overall Experience',\n    dataIndex: 'overall',\n    key: 'overall',\n    filters: [\n        {\n            text: 'Poor',\n            value: 'Poor',\n        },\n        {\n            text: 'Fair',\n            value: 'Fair',\n        },\n        {\n            text: 'Average',\n            value: 'Average',\n        },\n        {\n            text: 'Good',\n            value: 'Good',\n        },\n        {\n            text: 'Excellent',\n            value: 'Excellent',\n        },\n        ],\n            filterMultiple: true,\n            onFilter: (value, record) => record.overall === value,\n    },\n    {\n    title: 'Satisfaction',\n    dataIndex: 'satisfaction',\n    key: 'satisfaction',\n    filters: [\n        {\n            text: 'Very Dissatisfed',\n            value: 'Very Dissatisfied',\n        },\n        {\n            text: 'Dissatisfied',\n            value: 'Dissatisfied',\n        },\n        {\n            text: 'Neutral',\n            value: 'Neutral',\n        },\n        {\n            text: 'Satisfied',\n            value: 'Satisfied',\n        },\n        {\n            text: 'Very Satisfied',\n            value: 'Very Satisfied',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.satisfaction === value,\n    },\n    {\n    title: 'Recommend Likelihood',\n    dataIndex: 'likely',\n    key: 'likely',\n    filters: [\n        {\n            text: 'Very Unlikely',\n            value: 'Very Unlikely',\n        },\n        {\n            text: 'Somewhat Unlikely',\n            value: 'Somewhat Unlikely',\n        },\n        {\n            text: 'Neutral',\n            value: 'Neutral',\n        },\n        {\n            text: 'Somewhat Likely',\n            value: 'Somewhat Likely',\n        },\n        {\n            text: 'Very Likely',\n            value: 'Very Likely',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.likely === value,\n    },\n    {\n    title: 'Met Expectations',\n    dataIndex: 'expectations',\n    key: 'expectations',\n    filters: [\n        {\n            text: 'Yes',\n            value: 'Yes',\n        },\n        {\n            text: 'No',\n            value: 'No',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.expectations === value,\n    },\n    {\n    title: 'Future Volunteer',\n    dataIndex: 'future',\n    key: 'future',\n    filters: [\n        {\n            text: 'Yes',\n            value: 'Yes',\n        },\n        {\n            text: 'No',\n            value: 'No',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.future === value,\n    },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={4}>Event feedback</Typography.Title>\n            <Search placeholder=\"search by event or volunteer\" onChange={e => handleChange(e.target.value)} style={{ width: 300, marginBottom: 16 }}  />\n            <Table \n            dataSource={filterDisplay} \n            columns={columns}\n            expandedRowRender= {record =>\n                <p>\n                    <b>Event Details</b><br/>\n                    Name: {record.event__name}<br/>\n                    Location: {record.event__location}<br/>\n                    Date: {(new Date(record.event__begindate)).toLocaleString('en-US', options)} - {(new Date(record.event__enddate)).toLocaleString('en-US', options)}<br/><br/>\n                    <b>Additional Feedback</b><br/>\n                    What could we have done better?<br/>\n                    {record.better}<br/><br/>\n                    Is there anything else we should know about your volunteer experience?<br/>\n                    {record.experience}<br/>\n                </p>\n            }        \n            />\n        </React.Fragment>\n    );\n}; export default OrgFeedback;\n","import React from 'react';\nimport { Typography} from 'antd';\nimport Plotly from 'react-plotly.js';\nimport \"./NonprofitFunnel.css\"\n\nfunction NonprofitFunnel({funnel, breakdown, volunteers, events}) {\n\n    var labels = [];\n    var counts = [];\n    var hours = [];\n\n    breakdown.forEach(element => labels.push(element.label));\n    breakdown.forEach(element => counts.push(element.count));\n    breakdown.forEach(element => hours.push(element.hours));\n\n    labels.splice(-1,1);\n    counts.splice(-1,1);\n    hours.splice(-1,1);\n\n    var eventCount = []\n    var hourCount = []\n\n    volunteers.forEach(element => eventCount.push(element.count));\n    volunteers.forEach(element => hourCount.push(element.total));\n\n    var ratings = [0, 0, 0, 0, 0];\n    var satisfactions = [0, 0, 0, 0, 0]; \n\n    events.forEach(element => ratings[Math.floor(element.avg_rating) - 1] += 1); \n    events.forEach(element => satisfactions[Math.floor(element.avg_satisfaction) - 1] += 1); \n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Summary</Typography.Title>\n            <div className='rowC'>\n                <Plotly data={[{\n                    type: 'funnel', \n                    y: [\"Members\", \"Event Attendees\", \"Feedback Providers\"], \n                    hoverinfo: 'Members+percent total+x', \n                    opacity: 0.65, \n                    marker: {color: [\"003F5C\", \"58508D\", \"BC5090\"]},\n                    x: funnel,\n                    }]} layout={{margin: {l: 125, r:20, b:20, t:75}, title: 'Volunteer Engagement', width:600, height: 350}}/>\n\n                <Plotly\n                    data={[{\n                        type: 'pie', \n                        marker: {colors: [\"003F5C\", \"58508D\", \"BC5090\"]},\n                        labels: ['Returning', 'One-Time', 'Inactive'],\n                        values: counts,\n                        name: 'Count',\n                        textinfo: 'percent+value',\n                        opacity: 0.65,\n                        domain: {\n                        row: 0,\n                        column: 0\n                        }},\n                        {type: 'pie', \n                        marker: {colors: [\"003F5C\", \"58508D\", \"BC5090\"]},\n                        labels: ['Returning', 'One-Time', 'Inactive'],\n                        values: hours,\n                        name: 'Hours',\n                        textinfo: 'percent+value',\n                        opacity: 0.65,\n                        domain: {\n                        row: 0,\n                        column: 1\n                        }}\n                        ]}\n                    layout={{\n                        grid: {rows: 1, \n                                columns: 2},\n                        showlegend: true,\n                        legend: {\"orientation\": \"h\"},\n                        margin: {l: 125, r:20, b:20, t:75}, width: 600, height: 350,\n                        title: 'Volunteer Counts and Hours'}}/>\n            </div>\n            <div className='rowC'>\n                <Plotly data={[{\n                    type: 'histogram', \n                    x: eventCount,\n                    nbinsx: 5,\n                    marker: {\n                        color: [\"003F5C\", \"374C80\", \"7A5195\", \"DD5182\", \"FF6E54\", \"FFA600\"],\n                        },\n                        opacity: 0.65, \n                    }]} \n                    layout={{margin: {l: 125, r:20, b:50, t:75}, \n                    title: 'Events per Volunteer', \n                    width:600, \n                    height: 350,\n                    bargap: 0.2,\n                    xaxis: {\n                        title: {\n                          text: 'Events Attended',\n                        },\n                      },\n                    yaxis: {\n                        title: {\n                          text: 'Number of Volunteers',\n                        },\n                      },\n                      }}/>\n                <Plotly data={[{\n                    type: 'histogram', \n                    x: hourCount,\n                    nbinsx: 5,\n                    marker: {\n                        color: [\"003F5C\", \"374C80\", \"7A5195\", \"DD5182\", \"FF6E54\", \"FFA600\"],\n                        },\n                        opacity: 0.65, \n                    }]} \n                    layout={{margin: {l: 125, r:20, b:50, t:75}, \n                    title: 'Hours per Volunteer', \n                    width:600, \n                    height: 350,\n                    bargap: 0.2,\n                    xaxis: {\n                        title: {\n                          text: 'Hours Volunteered',\n                        },\n                      },\n                    yaxis: {\n                        title: {\n                          text: 'Number of Volunteers',\n                        },\n                      },\n                      }}/>\n            </div>\n            <div className='rowC'>\n                <Plotly data={[{\n                    type: 'bar', \n                    x: ratings,\n                    y: ['Poor', 'Fair', 'Average', 'Good', 'Excellent'],\n                    orientation: 'h',\n                    nbinsx: 5,\n                    marker: {\n                        color: [\"003F5C\", \"58508D\", \"BC5090\", \"FF6361\", \"FFA600\"],\n                        },\n                        opacity: 0.65, \n                    }]} \n                    layout={{margin: {l: 125, r:20, b:50, t:75}, \n                    title: 'Average Event Ratings', \n                    width:600, \n                    height: 350,\n                    bargap: 0.2,\n                    xaxis: {\n                        title: {\n                          text: 'Number of Events',\n                        },\n                      },\n                      }}/>\n                <Plotly data={[{\n                    type: 'bar', \n                    x: satisfactions,\n                    y: ['Very Dissatisfied', 'Dissatisfied', 'Neutral', 'Satisfied', 'Very Satisfied'],\n                    orientation: 'h',\n                    nbinsx: 5,\n                    marker: {\n                        color: [\"003F5C\", \"58508D\", \"BC5090\", \"FF6361\", \"FFA600\"],\n                        },\n                        opacity: 0.65, \n                    }]} \n                    layout={{margin: {l: 125, r:20, b:50, t:75}, \n                    title: 'Average Event Satisfaction', \n                    width:600, \n                    height: 350,\n                    bargap: 0.2,\n                    xaxis: {\n                        title: {\n                          text: 'Number of Events',\n                        },\n                      },\n                      }}/>\n            </div>\n        </React.Fragment>\n    )\n\n} export default NonprofitFunnel;\n\n","import React,  {useState} from 'react';\nimport { Typography, Table, Input, Select} from 'antd';\n\nconst { Search } = Input;\nconst { Option } = Select;\n\nfunction VolunteerLeaderboard({data}) {\n\n    const [filterDisplay, setFilterDisplay] = useState(data[2]);\n\n    const handleChange = e => {\n        let oldList = data[2];\n        if (e !== \"\") {\n            let newList = [];\n            newList = oldList.filter(volunteer =>\n                volunteer.name.toLowerCase().includes(e.toLowerCase())\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const timeFilterChange = value => {\n        if(value === \"month\"){\n            setFilterDisplay(data[0]);\n        }\n        else if(value === \"year\"){\n            setFilterDisplay(data[1]);\n        }\n        else {\n            setFilterDisplay(data[2]); \n        }\n    };\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        },\n        {\n            title: 'Events Attended',\n            dataIndex: 'count',\n            key: 'count',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.count - b.count,\n        },\n        {\n            title: 'Volunteer Hours',\n            dataIndex: 'total',\n            key: 'total',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.total - b.total,\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Volunteer Leaderboard</Typography.Title>\n            <Search placeholder=\"search by volunteer\" onChange={e => handleChange(e.target.value)} style={{ width: 300, marginBottom: 16 }}  />\n\n            <Select defaultValue=\"none\" style={{ width: 120, marginBottom : 16, float: 'right'}} onChange={value => timeFilterChange(value)} size=\"medium\">\n                <Option value=\"none\">All Events</Option>\n                <Option value=\"month\">Past Month</Option>\n                <Option value=\"year\">Past Year</Option>\n            </Select>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                expandedRowRender = {record => <p style={{ margin: 0 }}><b>Events Attended: </b>{record.event_list}</p>}\n                dataSource={filterDisplay} />\n        </React.Fragment>\n    )\n\n\n} export default VolunteerLeaderboard;","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nfunction EventLeaderboard({data}) {\n    return (\n        <React.Fragment>      \n            <Plot\n                data={[\n                {type: 'pie', \n                labels: data.ratings_arr[0], \n                values: data.ratings_arr[1],\n                marker: {\n                    colors: [\"003F5C\", \"58508D\", \"BC5090\", \"FF6361\", \"FFA600\"],\n                    },\n                    opacity: 0.65, \n                }]}\n                layout={ {width: 360, height: 270, title: 'Rating'} }\n            />\n\n            <Plot\n                data={[\n                {type: 'pie', \n                labels: data.satisfactions_arr[0], \n                values: data.satisfactions_arr[1],\n                marker: {\n                    colors: [\"003F5C\", \"58508D\", \"BC5090\", \"FF6361\", \"FFA600\"],\n                    },\n                    opacity: 0.65, \n                }]}\n                layout={ {width: 360, height: 270, title: 'Satisfaction'} }\n            />\n            <Plot\n                data={[\n                {type: 'pie', \n                labels: data.likely_arr[0], \n                values: data.likely_arr[1],\n                marker: {\n                    colors: [\"003F5C\", \"58508D\", \"BC5090\", \"FF6361\", \"FFA600\"],\n                    },\n                    opacity: 0.65, \n                }]}\n                layout={ {width: 360, height: 270, title: 'Recommend Likelihood'} }\n            />\n            <Plot\n                data={[\n                {type: 'pie', \n                labels: data.expectations_arr[0], \n                values: data.expectations_arr[1],\n                marker: {\n                    colors: [\"003F5C\", \"58508D\"],\n                    },\n                    opacity: 0.65, \n                }]}\n                layout={ {width: 360, height: 270, title: 'Met Expectations'} }\n            />\n            <Plot\n                data={[\n                {type: 'pie', \n                labels: data.future_arr[0], \n                values: data.future_arr[1],\n                marker: {\n                    colors: [\"003F5C\", \"58508D\"],\n                    },\n                    opacity: 0.65, \n                }]}\n                layout={ {width: 360, height: 270, title: 'Future Volunteer'} }\n            />\n        </React.Fragment>\n    )\n\n\n} export default EventLeaderboard;\n\n","import React,  {useState} from 'react';\nimport { Typography, Table, Input, Select} from 'antd';\nimport EventLeaderboardPlots from '../components/EventLeaderboardPlots';\n\nconst { Search } = Input;\nconst { Option } = Select;\n\nfunction EventLeaderboard({data}) {\n\n    const [filterDisplay, setFilterDisplay] = useState(data);\n\n    const handleChange = e => {\n        let oldList = data;\n        if (e !== \"\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                event.event__name.toLowerCase().includes(e.toLowerCase())\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const timeFilterChange = value => {\n        let oldList = data;\n        if(value === \"month\"){\n\n            let d = new Date(); \n            let newList = []\n\n            d.setMonth(d.getMonth() - 1);\n            d.setHours(0, 0, 0, 0);\n\n            newList = oldList.filter(event => parseInt(new Date(event.event__begindate.slice(0, 10)).valueOf(), 10) - parseInt(d.valueOf(), 10) > 0); \n            setFilterDisplay(newList);\n        }\n        else if(value === \"year\"){\n            let d = new Date(); \n            let newList = []\n\n            d.setYear(d.getFullYear() - 1);\n\n            newList = oldList.filter(event => parseInt(new Date(event.event__begindate.slice(0, 10)).valueOf(), 10) - parseInt(d.valueOf(), 10) > 0); \n            setFilterDisplay(newList);\n        }\n        else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const columns = [\n        {\n            title: 'Event',\n            dataIndex: 'event__name',\n            key: 'event__name',\n        },\n        {\n            title: 'Volunteers',\n            dataIndex: 'count',\n            key: 'count',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.count - b.count,\n        },\n        {\n            title: 'Average Rating',\n            dataIndex: 'avg_rating',\n            key: 'avg_rating',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.avg_rating - b.avg_rating,\n        },\n        {\n            title: 'Average Satisfaction',\n            dataIndex: 'avg_satisfaction',\n            key: 'avg_satisfaction',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.avg_satisfaction - b.avg_satisfaction,\n        },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Event Leaderboard</Typography.Title>\n                <Search placeholder=\"search by event\" onChange={e => handleChange(e.target.value)} style={{ width: 300, marginBottom: 16 }}  />\n                \n                <Select defaultValue=\"none\" style={{ width: 120, marginBottom : 16, float: 'right'}} onChange={value => timeFilterChange(value)} size=\"medium\">\n                    <Option value=\"none\">All Events</Option>\n                    <Option value=\"month\">Past Month</Option>\n                    <Option value=\"year\">Past Year</Option>\n                </Select>\n\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                expandedRowRender= {record => \n                    <p>\n                        <b>Event Details</b><br/>\n                        Name: {record.event__name}<br/>\n                        Location: {record.event__location}<br/>\n                        Date: {(new Date(record.event__begindate)).toLocaleString('en-US', options)} - {(new Date(record.event__enddate)).toLocaleString('en-US', options)}<br/><br/>\n\n                        <b>Attendes: </b>\n                        {record.attendees}<br/><br/>\n\n                        <EventLeaderboardPlots data={record}/>\n                    </p>\n                }\n                dataSource={filterDisplay} />\n        </React.Fragment>\n    )\n\n\n} export default EventLeaderboard;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerBreakdown({data}) {\n    const columns = [\n        { \n            title: '',\n            dataIndex: 'label',\n            key: 'label',\n            ellipsis: true,\n            render: (text) => <b>{text}</b>,\n        },\n        {\n          title: 'Count',\n          dataIndex: 'count',\n          key: 'count',\n          ellipsis: true,\n        },\n        {\n          title: 'Hours',\n          dataIndex: 'hours',\n          key: 'hours',\n          ellipsis: true,\n        },\n      ];\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Volunteer Breakdown</Typography.Title>\n\n            <Table \n                dataSource={data} \n                columns={columns}\n                expandedRowRender = {record => <p style={{ margin: 0 }}><b>Volunteer Names: </b>{record.name}</p>}\n                rowExpandable = {record => record.label !== 'Total'}\n                pagination={false}\n            />\n            <br/>\n            <br/>\n        </React.Fragment>\n    )\n\n\n} export default VolunteerBreakdown;","import React, {useState, useEffect, useCallback} from 'react';\nimport {Typography, Radio} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\nimport NonprofitFunnel from '../components/NonprofitFunnel.jsx';\nimport VolunteerLeaderboard from '../components/VolunteerLeaderboard';\nimport EventLeaderboard from '../components/EventLeaderboard';\nimport VolunteerBreakdown from '../components/VolunteerBreakdown';\n\n\nconst Analytics = ({orgId}) => {\n\n    const [funnel, setFunnel] = useState([0, 0, 0, 0])\n    const [breakdown, setBreakdown] = useState([]);\n    const [volunteers, setVolunteers] = useState([]);\n    const [allVolunteers, setAllVolunteers] = useState([]);\n    const [events, setEvents] = useState([]);\n\n    const [view, setView] = useState('chart'); \n\n    const handleChange = e => {\n        setView(e); \n    };\n\n    const getFunnel = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-funnel/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setFunnel(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]); \n    \n    const getBreakdown = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-breakdown/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setBreakdown(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n    \n    const getVolunteers = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-leaderboard/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setVolunteers(response.data);\n            setAllVolunteers(response.data[2]);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    const getEvents = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/event-leaderboard/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setEvents(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n    \n    useEffect(() => {\n        if (orgId) {\n            getFunnel(orgId);\n            getBreakdown(orgId);\n            getVolunteers(orgId);\n            getEvents(orgId);\n        }\n    }, [getFunnel, getBreakdown, getVolunteers, getEvents, orgId]);\n\n    return (\n        <React.Fragment>\n            <Radio.Group style={{ marginBottom: 16, float: 'right'}} onChange={e => handleChange(e.target.value)} defaultValue=\"chart\">\n                <Radio.Button value=\"chart\">Chart View</Radio.Button>\n                <Radio.Button value=\"table\">Table View</Radio.Button>\n            </Radio.Group>\n            <Typography.Title level={4}>Analytics</Typography.Title>\n            {view === 'chart' ? (\n                <NonprofitFunnel funnel = {funnel} breakdown = {breakdown} volunteers = {allVolunteers} events = {events}/>\n            ) : (\n                <React.Fragment>\n                    <VolunteerBreakdown data={breakdown}/>\n                    <VolunteerLeaderboard data={volunteers}/>\n                    <EventLeaderboard data={events}/>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    )\n\n};\n\nexport default Analytics;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Button, Popconfirm, message, Row, Modal, Select } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nfunction InvitePage({orgId}) {\n    const [invites, setInvites] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [showModal, setShowModal] = useState(false);\n    const [modalButtonLoading, setModalButtonLoading] = useState(false);\n    const [invitedMembers, setInvitedMembers] = useState([]);\n    const [memberType, setMemberType] = useState(0);\n    \n\n    const getInvites = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-invites/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            response.data.forEach(invite => invite.key = invite.id);\n            setInvites(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    const inviteMembers = useCallback(async () => {\n        try {\n            setModalButtonLoading(true);\n            await axiosAPI.post(\"member/invite/\", {\n                emails: invitedMembers,\n                member_type: memberType,\n                org_id: orgId,\n            });\n            setInvitedMembers([]);\n            getInvites();\n            message.success(\"Invitation sent\");\n        } catch(error) {\n            console.error(error);\n            message.error(\"Invitations could not be sent.\");\n        }\n        setModalButtonLoading(false);\n    }, [invitedMembers, getInvites, setInvitedMembers, memberType, orgId, setModalButtonLoading]);\n\n    const deleteInvite = useCallback(async (inviteId) => {\n        try {\n            await axiosAPI.delete(\"invite/delete/\", {\n                params: {\n                    invite_id: inviteId,\n                }\n            });\n            setInvites(invites.filter(invite => invite.key !== inviteId));\n            message.success(\"Invitation deleted\");\n        } catch(error) {\n            console.error(error);\n            message.error(\"Invitation could not be deleted\");\n        }\n    }, [invites]);\n    \n    const resendEmail = useCallback(async (inviteId) => {\n        try {\n            await axiosAPI.get(\"invite/resend/\", {\n                params: {\n                    invite_id: inviteId,\n                }\n            });\n            message.success(\"Invitation successfully resent\");\n        } catch(error) {\n            console.error(error);\n            message.error(\"Invitation could not be resent\");\n        }\n    }, []);\n\n    useEffect(() => {\n        if (orgId) {\n            getInvites(orgId);\n        }\n    }, [getInvites, orgId]);\n\n    const columns = [\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        },\n        {\n            title: 'Role',\n            dataIndex: 'role',\n            key: 'role',\n            render: (_, record) => (\n                record.member_type === 1 ? \"Admin\" : \"Member\"\n            ),\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: (_, record) => (\n                \"Active\"\n            ),\n        },\n        {\n            title: 'Resend',\n            key: 'resend',\n            render: (_, record) => (\n                <Popconfirm title=\"Are you sure you want to resend an invitation to this member?\" onConfirm={() => resendEmail(record.key)} okText=\"Yes\" cancelText=\"No\">\n                    <Button type=\"primary\">\n                        Resend\n                    </Button>\n                </Popconfirm>\n            )\n        },\n        {\n            title: 'Delete',\n            key: 'delete',\n            render: (_, record) => (\n                <Popconfirm title=\"Are you sure you want to delete this invitation?\" onConfirm={() => deleteInvite(record.key)} okText=\"Yes\" cancelText=\"No\">\n                    <Button type=\"primary\" danger>\n                        Delete\n                    </Button>\n                </Popconfirm>\n            )\n        }\n    ];\n\n    return (\n        <React.Fragment>\n            <div>\n                <Row justify=\"space-between\">\n                    <Title level={4}>Outstanding invites</Title>\n                    <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => setShowModal(true)}>\n                        Invite new members\n                    </Button>\n                </Row>\n                <Table columns={columns} dataSource={invites} loading={loading}/>\n            </div>\n            <Modal\n                visible={showModal}\n                title=\"Invite new members\"\n                onOk={() => {}}\n                onCancel={() => setShowModal(false)}\n                footer={[\n                    <Button key=\"back\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>,\n                    <Button key=\"submit\" type=\"primary\" loading={modalButtonLoading} onClick={inviteMembers}>\n                        Send\n                    </Button>,\n                ]}\n            >\n                <Select title=\"hello:\" defaultValue={0} style={{ width: '100%', marginBottom: 8 }} onChange={setMemberType} placeholder=\"Member Type\">\n                    <Option value={0}>Member</Option>\n                    <Option value={1}>Admin</Option>\n                </Select>\n                <Select mode=\"tags\" style={{ width: '100%' }} onChange={value => setInvitedMembers(value)} tokenSeparators={[',']} placeholder=\"Emails\" allowClear>\n                    {[]}\n                </Select>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\n\nexport default InvitePage;","import React from \"react\";\nimport Tag from \"antd/lib/tag\";\nimport \"antd/lib/tag/style/css\";\n\nconst statusMap = {\n  Complete: <Tag color=\"green\">Complete</Tag>,\n  Rejected: <Tag color=\"red\">Rejected</Tag>,\n  Pending: <Tag color=\"orange\">Pending Approval</Tag>,\n  None: <p></p>\n};\n\nexport const StatusTag = ({ status }) => statusMap[status];","import React, {useState, useCallback, useEffect} from 'react';\nimport { Upload, Table, message, Typography } from 'antd';\nimport {StatusTag} from '../components/StatusTag';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nimport { UploadOutlined } from '@ant-design/icons';\nconst { Dragger } = Upload;\nconst { Text } = Typography;\n\nfunction UserFilesTable({orgId, fileList}) {\n    const [userFileList, setUserFileList] = useState([]);\n    const getUserFiles = useCallback(async (orgId) => {\n        try {\n             const response = await axiosAPI.get(\"clearances/get-user-files/\", {\n                 params: {\n                     userId: localStorage.getItem(\"user_id\"), \n                     orgId: orgId\n                 }\n             });\n            const files = response.data;\n            const formattedFiles = files.map(file => ({\n                uid: file.id, \n                orgFormId: file.org_file,\n                status: file.status,\n                url: file.url,\n                comment: file.comment\n            }));\n            setUserFileList(formattedFiles);\n        } catch(error) {\n            console.error(error);\n        }\n    }, []);\n\n    useEffect(() => {\n        getUserFiles(orgId)\n    }, [getUserFiles, orgId]);\n\n    const props = {\n        listType: 'text',\n        fileList: [],\n        onChange(info) {\n            let fl = [...info.fileList];\n            fl = fl.map(file => {\n                if (file.response) {\n                    // Component will show file.url as link\n                    file.url = file.response.data.filled_form;\n                }\n                return file;\n            });\n                \n            setUserFileList(fl);\n        },\n    };\n    \n    const columns = [\n        {\n            title: 'Incomplete File',\n            dataIndex: 'incomplete_file',\n            key: 'incomplete_file',\n            render: url => !!url ? <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{url.split('/').slice(-1)[0].split('?')[0]}</a> : null,\n        },\n        {\n            title: 'Your Uploaded File',\n            dataIndex: 'uploaded_file',\n            key: 'uploaded_file',\n            render: url => !!url ? <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{url.split('/').slice(-1)[0].split('?')[0]}</a> : null,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: (_text, record) => <StatusTag status={record.status} />\n        },\n        {\n            title: 'Comment',\n            dataIndex: 'comment',\n            key: 'comment',\n            render: (text, _record) => <p>{text}</p> \n        },\n        {\n            title: 'Upload New File',\n            key: 'upload',\n            render: (record) => (\n                <Dragger {...props} \n                    customRequest={async (options) => {\n                            const formData = new FormData();\n                            formData.append('org_file_id', record.key);\n                            formData.append('user_id', localStorage.getItem(\"user_id\"))\n                            formData.append('filled_form', options.file, options.file.name);\n                            formData.append('status', 'Pending');\n                            formData.append('comment', 'N/A');\n                            try {\n                                let data = await axiosAPI.post('clearances/upload-user-file', formData, {\n                                    headers: {\n                                    'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW'\n                                    }\n                                });\n                                options.onSuccess(data, options.file);\n                                getUserFiles(orgId);\n                                message.success('File uploaded');\n                            } catch (error) {\n                                message.success('File failed to upload');\n                                console.error(error)\n                            }\n                        }\n                    }\n                >\n                    <UploadOutlined/>\n                    <p></p>\n                    <Text>Click or drag file to this area to upload</Text>\n                </Dragger>\n            ),\n        },\n    ];\n\n    function getUserFileForOrgFile(infoType, oFormId) {\n        if ((userFileList.filter(ufile => ufile.orgFormId === oFormId)).length > 0) {\n            const userFile = userFileList.filter(ufile => ufile.orgFormId === oFormId)[0]\n            return userFile[infoType]\n        }\n\n        if (infoType === \"status\") {\n            return \"None\";\n        }\n\n        return null\n    }\n    \n    const data = fileList.map((file,i) => ({\n        \"key\": file.uid, \n        \"incomplete_file\": file.url,\n        \"uploaded_file\": getUserFileForOrgFile(\"url\", file.uid),\n        \"status\": getUserFileForOrgFile(\"status\", file.uid),\n        \"comment\": getUserFileForOrgFile(\"comment\", file.uid),\n    }))\n\n    return (\n        <div>\n           <Table columns={columns} dataSource={data}/>\n        </div>\n    );\n};\nexport default UserFilesTable;","import React, {useState, useCallback, useEffect} from 'react';\nimport { Upload, message } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport UserFilesTable from '../pages/UserFilesTable';\nimport { UploadOutlined } from '@ant-design/icons';\nconst { Dragger } = Upload;\n\nfunction ClearanceUpload({isAdmin, orgId, eId}) {\n    const [fileList, setFileList] = useState([]);\n\n    const getOrgFiles = useCallback(async (orgId) => {\n        try {\n            const response = await axiosAPI.get(\"clearances/get-org-files-for-event/\", {\n                params: {\n                    orgId: orgId, \n                    eventId: eId\n                }\n            });\n            const files = response.data;\n            const formattedFiles = files.map(file => ({\n                key: file.id, \n                uid: file.id, \n                name: file.url.split('/').slice(-1)[0].split('?')[0], \n                status: \"done\", \n                url: file.url,\n                event: file.event,\n                eventName: file.event__name\n            }));\n            setFileList(formattedFiles);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [eId]);\n\n    useEffect(() => {\n        getOrgFiles(orgId)\n    }, [getOrgFiles, orgId]);\n\n    const orgProps = {\n        listType: 'picture',\n        fileList: fileList,\n        onChange(info) {\n            let fl = [...info.fileList];\n            fl = fl.map(file => {\n                if (file.response) {\n                    // Component will show file.url as link\n                    file.url = file.response.data.empty_form;\n                }\n                return file;\n            });\n                \n            setFileList(fl);\n        },\n        customRequest: async function(options) {\n            const formData = new FormData();\n            formData.append('empty_form', options.file, options.file.name);\n            formData.append('orgId', orgId);\n            formData.append('eventId', eId);\n            try {\n                let data = await axiosAPI.post('clearances/upload-org-file', formData, {\n                    headers: {\n                    'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW'\n                    }\n                });\n                options.onSuccess(data, options.file);\n                message.success('File uploaded');\n            } catch (error) {\n                message.success('File failed to upload');\n                console.error(error)\n            }\n        },\n    };\n\n    return (\n        <div>\n            {isAdmin ? \n                <>\n                    <Dragger {...orgProps}>\n                        <p className=\"ant-upload-drag-icon\">\n                        <UploadOutlined />\n                        </p>\n                        <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                    </Dragger>\n                </> :\n                <UserFilesTable orgId={orgId} fileList={fileList} />\n            }\n           \n        </div>\n    );\n};\nexport default ClearanceUpload;\n\n    ","import React, {useState, useCallback, useEffect} from 'react';\nimport { Table, Radio, Typography } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nconst { Paragraph } = Typography;\n\nfunction OrgClearanceTable({orgId, eId}) {\n    const [rows, setRows] = useState([]);\n\n    const acceptOrReject = async (value, record) => {\n        const status = value.target.value\n\n        try {\n            await axiosAPI.post(\"clearances/set-status-user-file/\", \n                {\n                    id: record.key, \n                    status: status,\n                }\n            );\n        } catch(error){\n            console.error(error)\n        }\n    };\n\n    const addComment = async (value, record) => {\n        try {\n            await axiosAPI.post(\"clearances/set-status-user-file/\", \n                {\n                    id: record.key, \n                    comment: value,\n                }\n            );\n            getUserFiles(orgId)\n        } catch(error) {\n            console.error(error)\n        }\n    };\n\n    const getUserFiles = useCallback(async (orgId) => {\n        try {\n            const response = await axiosAPI.get(\"clearances/get-user-files-for-org/\", {\n                params: {\n                    orgId: orgId, \n                    eventId: eId\n                }\n            });\n            const files = response.data;\n            const result = files.map(file => ({\n                key: file.id, \n                user: file.user__email, \n                url: file.url, \n                status: file.status,\n                comment: file.comment\n            }))\n            setRows(result)\n        } catch(error) {\n            console.error(error);\n        }\n    }, [eId]);\n\n    useEffect(() => {\n        getUserFiles(orgId)\n    }, [orgId, getUserFiles]);\n   \n    const columns = [\n        {\n            title: 'User',\n            dataIndex: 'user',\n            key: 'user',\n            render: text => <p>{text}</p>,\n        },\n        {\n            title: 'File',\n            dataIndex: 'url',\n            key: 'url',\n            render: url => !!url ? <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{url.split('/').slice(-1)[0].split('?')[0]}</a> : null,\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record, index) => (\n                <Radio.Group defaultValue={record.status} onChange={(value) => acceptOrReject(value, record)} buttonStyle=\"solid\">\n                <Radio.Button value=\"Complete\">Accept</Radio.Button>\n                <Radio.Button value=\"Rejected\">Reject</Radio.Button>\n                </Radio.Group>\n            ),\n        },\n        {\n            title: 'Comment',\n            dataIndex: 'comment',\n            key: 'comment',\n            render: (text, record, index) => ( \n            (<div style={{ marginLeft: 4, flexGrow: 100 }}>\n                <Paragraph style={{ width: \"100%\" }} editable={{ onChange: (value) => addComment(value, record) }}>{record.comment}</Paragraph>\n            </div>))\n           \n        },\n    ];\n    \n    return (\n        <div>\n           <Table columns={columns} dataSource={rows} />\n        </div>\n    );\n};\nexport default OrgClearanceTable;","import React, {useState, useCallback, useEffect} from 'react';\nimport { Typography, Table, Alert, Input } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nimport ClearanceUpload from '../components/ClearanceUpload';\nimport OrgClearanceTable from './OrgClearanceTable';\nconst { Title, Text } = Typography;\n\nfunction Clearances({isAdmin, orgId}) {\n    const [loading, setLoading] = useState(true);\n    const [events, setEvents] = useState([]); \n    const [numIncompleteEvents, setNumIncompleteEvents] = useState(0);\n    const [numPending, setNumPending] = useState(0); \n    const [filterDisplay, setFilterDisplay] = useState([]);\n    \n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    const getEventsByOrg = useCallback(async () => {\n        try {\n            let data = {};\n            if(isAdmin) {\n                const response = await axiosAPI.get(\"events/get-by-org/\", {\n                    params: {\n                        orgId: orgId,\n                    }\n                });\n\n                data = response.data;\n                data.map(e => {\n                    e.bdate = (new Date(e.begindate)).toLocaleString('en-US', options);\n                    e.edate = (new Date(e.enddate)).toLocaleString('en-US', options);\n                    return e;\n                });\n            } else {\n                const response = await axiosAPI.get(\"attendees/get-volunteer-events-for-org/\", {\n                    params: {\n                        orgId: orgId,\n                        user_id: localStorage.getItem(\"user_id\"),\n                    }\n                });\n\n                data = response.data;\n                data.map(e => {\n                    e.id = e.events__id;\n                    e.name = e.events__name;\n                    e.bdate = (new Date(e.events__begindate)).toLocaleString('en-US', options);\n                    e.edate = (new Date(e.events__enddate)).toLocaleString('en-US', options);\n                    return e;\n                })\n                \n            }\n\n            setEvents(data);\n            setFilterDisplay(data);\n            setLoading(false);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setEvents, orgId, isAdmin]);\n\n    const getAlertInfo = useCallback(async () => {\n        try {\n            let data = {};\n            if(isAdmin) {\n                const response = await axiosAPI.get(\"events/get-num-pending-clearances-for-org/\", {\n                    params: {\n                        orgId: orgId,\n                    }\n                });\n                data = response.data;\n                setNumPending(data);\n            } else {\n                const response = await axiosAPI.get(\"attendees/get-num-incomplete-clearances/\", {\n                    params: {\n                        orgId: orgId,\n                        user_id: localStorage.getItem(\"user_id\"),\n                    }\n                });\n\n                data = response.data;\n                setNumIncompleteEvents(data);\n            }\n            setLoading(false);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [orgId, isAdmin]);\n\n    useEffect(() => {\n        getEventsByOrg();\n        getAlertInfo();\n    }, [getEventsByOrg, getAlertInfo]);\n\n    const columns = [\n        {\n            title: 'Event',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Start Date',\n            dataIndex: 'bdate',\n            key: 'bdate',\n        },\n        {\n            title: 'End Date',\n            dataIndex: 'edate',\n            key: 'edate',\n        }\n    ];\n\n    const handleChange = e => {\n        let oldList = events;\n        if (e !== \"\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                event.name.toLowerCase().includes(e.toLowerCase())\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    return (\n        <div>\n            <Title level={4}>Manage clearances for upcoming events</Title>\n            {isAdmin ? \n                <>\n                    <Text>Use the \"+\" button to upload clearances or manage attendee clearances for an \n                        upcoming event in the table below.</Text>\n                    <p></p>\n                    <Alert\n                        message=\"Pending Clearances to Approve/Reject\"\n                        description={\"You have \" + numPending + \" pending clearances that require approval/rejection.\"}\n                        type=\"warning\"\n                        showIcon\n                    />\n                </>\n                :\n                <>\n                    <Text>Use the \"+\" button to view/download blank clearances, upload your completed \n                        clearances, and view the status of your completed clearance for an upcoming event in the \n                        table below. Only upcoming events you've joined will appear here.</Text>\n                    <p></p>\n                    <Alert\n                        message=\"Incomplete Clearances Notice\"\n                        description={\"You have \"  + numIncompleteEvents + \" incomplete clearances for upcoming events.\"}\n                        type=\"warning\"\n                        showIcon\n                    />\n                </>\n            }\n            \n            <p></p>\n            <Input onChange={e => handleChange(e.target.value)} placeholder=\"Search for events\" className=\"search\" style={{ width: 200, float: 'right', marginBottom: 4}}/>\n            <Table \n                columns={columns}\n                dataSource={filterDisplay} \n                loading={loading}\n                expandedRowRender= {record => \n                    <>\n                    <ClearanceUpload isAdmin={isAdmin} orgId={orgId} eId={record.id} />\n                    {isAdmin ? \n                        <>\n                            <p></p>\n                            <Title level={5}>Manage attendees' uploaded clearances</Title>\n                            <OrgClearanceTable orgId={orgId} eId={record.id}/>\n                        </>\n                        :<></>\n                    }\n                    </>\n                }\n            />\n           \n        </div>\n    );\n};\n\nexport default Clearances;","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Form, Input, Button } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport { addAlert } from '../actionCreators.js';\nimport { useDispatch } from 'react-redux';\nimport './NewEmail.css';\n\nconst { TextArea } = Input;\nconst { Search } = Input;\n\nconst { Title } = Typography;\n\nfunction NewEmail({orgId}) {\n    const [members, setMembers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [checkedList, setCheckedList] = useState([]); \n    const [filterDisplay, setFilterDisplay] = useState([]);\n    const dispatch = useDispatch();\n\n    const getMembers = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-members/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            response.data.forEach(member => member.key = member.id);\n            setFilterDisplay(response.data); \n            setMembers(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        if (orgId) {\n            getMembers(orgId);\n        }\n    }, [getMembers, orgId]);\n\n    const onChange = useCallback((_selectedRowKeys, selectedRows) => {\n        setCheckedList(selectedRows);\n    }, []);\n\n    const handleChange = e => {\n        let oldList = members;\n        if (e !== \"\") {\n            let newList = [];\n            newList = oldList.filter(member =>\n                member.user.name.toLowerCase().includes(e.toLowerCase())\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: ['user', 'name'],\n            key: 'name',\n        },\n        {\n            title: 'Email',\n            dataIndex: ['user', 'email'],\n            key: 'email',\n        },\n        {\n            title: 'Role',\n            dataIndex: 'role',\n            key: 'role',\n            render: (_, record) => (\n                record.member_type === 1 ? \"Admin\" : \"Member\"\n            ),\n        },\n    ];\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await axiosAPI.post(\"member/email/\", {\n                subject: values.subject,\n                body: values.body,\n                membersList: checkedList,\n            });\n            dispatch(addAlert('Email sent', 'success'));\n        }\n        catch {\n            dispatch(addAlert('Email not sent', 'error'));\n        }\n    }, [dispatch, checkedList]);\n\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Email members</Title>\n            <Search placeholder=\"search by volunteer name\" onChange={e => handleChange(e.target.value)} style={{ width: 300, marginBottom: 16 }}  />\n            <Table \n                className = \"member-table\"\n                rowSelection={{ onChange }}\n                columns={columns} \n                dataSource={filterDisplay} \n                loading={loading}\n                pagination={{ pageSize: 5 }}/>  \n\n            <Form\n                name=\"org\"\n                className=\"org-form\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}> \n\n                <Form.Item\n                    name=\"subject\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Email subject is required.' }]}\n                >\n                    <Input placeholder=\"Email subject\" />\n                </Form.Item>\n            \n                <Form.Item\n                    name=\"body\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Email body is required.' }]}>\n                        <TextArea row={6} style={{ width: '100%' }} placeholder=\"Email body here...\" />\n                </Form.Item>\n\n                <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"org-form-button\">\n                    Send email\n                </Button>\n                </Form.Item>\n\n            </Form>\n            </React.Fragment>\n    );\n};\n\n\nexport default NewEmail;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\n\nfunction Attendees({orgId}) {\n    const [attendees, setAttendees] = useState([]);\n    const [loading, setLoading] = useState(true);\n    \n    const getAttendees = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"event/get-attendees/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setAttendees(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        getAttendees();\n    }, [getAttendees]);\n\n    const columns = [\n        {\n            title: 'Upcoming Event',\n            dataIndex: 'events__name',\n            key: 'events__name',\n        },\n        {\n            title: 'Attendees',\n            dataIndex: 'count',\n            key: 'count',\n        },\n        {\n            title: 'Cap',\n            dataIndex: 'events__attendee_cap',\n            key: 'events__attendee_cap',\n        },\n    ];\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Attendees</Title>\n            <Table \n                columns={columns}\n                dataSource={attendees} \n                loading={loading}\n                expandedRowRender= {record => \n                    <p>\n                        <b>Event Details</b><br/>\n                        Name: {record.events__name}<br/>\n                        Location: {record.events__location}<br/>\n                        Date: {(new Date(record.events__begindate)).toLocaleString('en-US', options)} - {(new Date(record.events__enddate)).toLocaleString('en-US', options)}<br/><br/>\n                        \n                        <b>Attendees: </b>\n                        {record.attendees}\n                    </p>\n            }/>\n        </React.Fragment>\n    );\n};\n\n\nexport default Attendees;","import React, {useState, useEffect} from 'react';\nimport { Typography, Tabs } from 'antd';\nimport QAndAPage from './QAndAPage';\nimport OrgEvents from './OrgEvents';\nimport AboutUs from './AboutUs';\nimport MemberPage from './MemberPage';\nimport OrgFeedback from './OrgFeedback'; \nimport Analytics from './Analytics'; \nimport InvitePage from './InvitePage'; \nimport Clearances from './Clearances';\nimport NewEmail from './NewEmail'\nimport Attendees from './Attendees';\nimport \"./OrgPage.css\";\nimport { makePageView } from '../utils/googleAnalytics';\n\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nfunction OrgPage({member, orgId}) {\n    const [org, setOrg] = useState(null);\n    const [activeKey, setActiveKey] = useState(\"home\");\n    const isAdmin = member?.member_type === 1;\n\n    const onChange = (key) => {\n        setActiveKey(key);\n        makePageView('/' + key);\n    }\n\n    useEffect(() => {\n        if (orgId) {\n            if (member) {\n                setOrg(member.organization);\n            }\n            setActiveKey(\"home\")\n        }\n    }, [setActiveKey, orgId, member]);\n\n    return (\n        <React.Fragment>\n            {org && <Title style={{ textAlign: \"center\" }} level={2}>{org?.name}</Title>}\n            <Tabs activeKey={activeKey} onChange={onChange} style={{ height: \"100%\" }}>\n                <TabPane tab=\"Home\" key=\"home\" style={{ height: \"100%\" }}>\n                    <AboutUs org={org} isAdmin={isAdmin} />\n                </TabPane>\n                {isAdmin &&\n                     <TabPane tab=\"Invites\" key=\"invites\">\n                        <InvitePage orgId={orgId} />\n                    </TabPane>\n                }\n                <TabPane tab=\"Events\" key=\"events\">\n                    <OrgEvents orgId={orgId} isAdmin={isAdmin} />\n                </TabPane>\n                <TabPane tab=\"Clearances\" key=\"clearance\">\n                    <Clearances isAdmin={isAdmin} orgId={orgId} />\n                </TabPane>\n                {isAdmin &&\n                <TabPane tab=\"Attendees\" key=\"attendees\">\n                    <Attendees orgId={orgId} />\n                </TabPane>\n                }\n                <TabPane tab=\"Feedback\" key=\"feedback\">\n                    <OrgFeedback isAdmin={member?.member_type} orgId={orgId} />\n                </TabPane>\n                {isAdmin &&\n                <TabPane tab=\"Analytics\" key=\"analytics\">\n                    <Analytics orgId={orgId} />\n                </TabPane>\n                }\n                <TabPane tab=\"FAQ\" key=\"faq\">\n                    <QAndAPage isAdmin={isAdmin} orgId={orgId} />\n                </TabPane>\n                {isAdmin &&\n                     <TabPane tab=\"Members\" key=\"members\">\n                        <MemberPage orgId={orgId} />\n                    </TabPane>\n                }\n                {isAdmin &&\n                    <TabPane tab=\"Communication\" key=\"member_emails\">\n                        <NewEmail orgId={orgId} />\n                    </TabPane> \n                }\n            </Tabs>\n        </React.Fragment>\n    );\n    \n};\n\n\nexport default OrgPage;","import React from 'react';\nimport { Skeleton } from 'antd';\n\nconst LoadingOrg = () => {\n    return (\n        <Skeleton active paragraph={{ rows: Math.round((window.innerHeight - 136) / 32) - 1 }}/>\n    );\n};\n\n\nexport default LoadingOrg;","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerEventLeaderboard({data}) {\n    const columns = [\n        {\n            title: 'Event',\n            dataIndex: 'event__name',\n            key: 'event__name',\n        },\n        {\n            title: 'Nonprofit',\n            dataIndex: 'event__organization__name',\n            key: 'event__organization__name',\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date',\n        },\n        {\n            title: 'Rating',\n            dataIndex: 'overall',\n            key: 'overall',\n            sorter: (a, b) => a.overall - b.overall,\n            defaultSortOrder: 'descend',\n        },\n        {\n            title: 'Satisfaction',\n            dataIndex: 'satisfaction',\n            key: 'satisfaction',\n            sorter: (a, b) => a.satisfaction - b.satisfaction,\n            defaultSortOrder: 'descend',\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Event Leaderboard</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default VolunteerEventLeaderboard;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction NonprofitBreakdown({ data}) {\n\n    const columns = [\n        {\n            title: 'Nonprofit',\n            dataIndex: 'events__organization__name',\n            key: 'events__organization__name',\n        },\n        {\n            title: 'Events',\n            dataIndex: 'count',\n            key: 'count',\n            sorter: (a, b) => a.count - b.count,\n            defaultSortOrder: 'descend',\n        },\n        {\n            title: 'Hours',\n            dataIndex: 'hours',\n            key: 'hours',\n            sorter: (a, b) => a.hours - b.hours,\n            defaultSortOrder: 'descend',\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Nonprofit Breakdown</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                expandedRowRender = {record => <p style={{ margin: 0 }}><b>Events Attended: </b>{record.events}</p>}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default NonprofitBreakdown;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerSummary({ data}) {\n\n    const columns = [\n        {\n            title: '',\n            dataIndex: 'label',\n            key: 'label',\n            ellipsis: true,\n            render: (text) => <b>{text}</b>,\n        },\n        {\n          title: 'Nonprofits',\n          dataIndex: 'nonprofits',\n          key: 'nonprofits',\n          ellipsis: true,\n        },\n        {\n          title: 'Events',\n          dataIndex: 'events',\n          key: 'events',\n          ellipsis: true,\n        },\n        {\n            title: 'Hours',\n            dataIndex: 'hours',\n            key: 'hours',\n            ellipsis: true,\n          },\n      ];\n\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Summary</Typography.Title>\n    \n            <Table \n                dataSource={data} \n                columns={columns}\n                expandedRowRender = {record => \n                    <p style={{ margin: 0 }}>\n                        <b>Nonprofits: </b>{record.nonprofits_list}<br/>\n                        <b>Events: </b>{record.events_list}<br/>\n                    </p>\n                }\n                pagination={false}\n            />\n            <br/>\n            <br/>\n        </React.Fragment>\n    )\n\n\n} export default VolunteerSummary;","import React from 'react';\nimport { Typography} from 'antd';\nimport Plotly from 'react-plotly.js';\n\nfunction VolunteerCharts({monthlyHours, nonprofits, events}) {\n\n    var nonprofit_list = []\n    var events_list = []\n    var hours_list = []\n\n    nonprofits.forEach(element => nonprofit_list.push(element.events__organizations__name)); \n    nonprofits.forEach(element => events_list.push(element.count)); \n    nonprofits.forEach(element => hours_list.push(element.hours)); \n\n    var ratings = [0, 0, 0, 0, 0];\n    var satisfactions = [0, 0, 0, 0, 0]; \n\n    events.forEach(element => ratings[element.overall - 1] += 1); \n    events.forEach(element => satisfactions[element.satisfaction - 1] += 1); \n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Summary</Typography.Title>\n\n            <div className='rowC'>\n                <Plotly data={[{\n                    type: 'bar', \n                    x: monthlyHours[2],\n                    y: monthlyHours[3],\n                    nbinsx: 5,\n                    marker: {\n                        color: \"58508D\",\n                        },\n                        opacity: 0.65, \n                    }]} \n                    layout={{margin: {l: 125, r:20, b:50, t:75}, \n                    title: 'Events over Time', \n                    width:600, \n                    height: 350,\n                    bargap: 0.2,\n                }}/>\n                <Plotly data={[{\n                    type: 'bar', \n                    x: monthlyHours[0],\n                    y: monthlyHours[1],\n                    nbinsx: 5,\n                    marker: {\n                        color: \"58508D\",\n                        },\n                        opacity: 0.65, \n                    }]} \n                    layout={{margin: {l: 125, r:20, b:50, t:75}, \n                    title: 'Hours Over Time', \n                    width:600, \n                    height: 350,\n                    bargap: 0.2,\n                }}/>\n            </div> \n\n             <div className='rowC'>\n                <Plotly\n                    data={[{\n                        type: 'pie', \n                        marker: {colors: [\"003F5C\", \"58508D\", \"BC5090\"]},\n                        labels: nonprofit_list,\n                        values: events_list,\n                        name: 'Events',\n                        textinfo: 'percent+value',\n                        opacity: 0.65}]}\n                    layout={{\n                        showlegend: true,\n                        margin: {l: 125, r:20, b:20, t:75}, width: 600, height: 350,\n                        title: 'Events by Nonprofit'}}/>\n                \n                <Plotly\n                    data={[{\n                        type: 'pie', \n                        marker: {colors: [\"003F5C\", \"58508D\", \"BC5090\"]},\n                        labels: nonprofit_list,\n                        values: hours_list,\n                        name: 'Hours',\n                        textinfo: 'percent+value',\n                        opacity: 0.65}]}\n                    layout={{\n                        showlegend: true,\n                        margin: {l: 125, r:20, b:20, t:75}, width: 600, height: 350,\n                        title: 'Hours by Nonprofit'}}/>\n            </div>\n            \n\n            <div className='rowC'>\n                <Plotly data={[{\n                    type: 'bar', \n                    x: ratings,\n                    y: ['Poor', 'Fair', 'Average', 'Good', 'Excellent'],\n                    orientation: 'h',\n                    nbinsx: 5,\n                    marker: {\n                        color: [\"003F5C\", \"58508D\", \"BC5090\", \"FF6361\", \"FFA600\"],\n                        },\n                        opacity: 0.65, \n                    }]} \n                    layout={{margin: {l: 125, r:20, b:50, t:75}, \n                    title: 'Event Ratings', \n                    width:600, \n                    height: 350,\n                    bargap: 0.2,\n                    xaxis: {\n                        title: {\n                          text: 'Number of Events',\n                        },\n                      },\n                      }}/>\n                <Plotly data={[{\n                    type: 'bar', \n                    x: satisfactions,\n                    y: ['Very Dissatisfied', 'Dissatisfied', 'Neutral', 'Satisfied', 'Very Satisfied'],\n                    orientation: 'h',\n                    nbinsx: 5,\n                    marker: {\n                        color: [\"003F5C\", \"58508D\", \"BC5090\", \"FF6361\", \"FFA600\"],\n                        },\n                        opacity: 0.65, \n                    }]} \n                    layout={{margin: {l: 125, r:20, b:50, t:75}, \n                    title: 'Event Satisfaction', \n                    width:600, \n                    height: 350,\n                    bargap: 0.2,\n                    xaxis: {\n                        title: {\n                          text: 'Number of Events',\n                        },\n                      },\n                      }}/>\n            </div>  \n        </React.Fragment>\n    )\n\n} export default VolunteerCharts;\n\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {Typography, Radio} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\nimport VolunteerEventLeaderboard from '../components/VolunteerEventLeaderboard';\nimport NonprofitBreakdown from '../components/NonprofitBreakdown';\nimport VolunteerSummary from '../components/VolunteerSummary';\nimport VolunteerCharts from '../components/VolunteerCharts'; \nimport { usePageView } from '../utils/googleAnalytics'\n\nconst VolunteerAnalytics = () => {\n\n    const user = localStorage.getItem(\"user_id\");\n\n    const [monthlyHours, setMonthlyHours] = useState([]); \n    const [summary, setSummary] = useState([]);\n    const [nonprofits, setNonprofits] = useState([]);\n    const [events, setEvents] = useState([]);\n\n    const [view, setView] = useState('chart'); \n\n    const handleChange = e => {\n        setView(e); \n    };\n\n    usePageView('/volunteer-analytics');\n    \n    const getMonthlyHours = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/get-monthly-hours/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setMonthlyHours(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    const getSummary = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-summary/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setSummary(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    const getNonprofits = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/nonprofit-breakdown/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setNonprofits(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n    \n    const getEvents = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-event-leaderboard/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setEvents(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n        getEvents();\n        getNonprofits();\n        getSummary();\n        getMonthlyHours();\n    }, [getEvents, getNonprofits, getSummary, getMonthlyHours]);\n\n    return (\n        <React.Fragment>\n            <Radio.Group style={{ marginBottom: 16, float: 'right'}} onChange={e => handleChange(e.target.value)} defaultValue=\"chart\">\n                <Radio.Button value=\"chart\">Chart View</Radio.Button>\n                <Radio.Button value=\"table\">Table View</Radio.Button>\n            </Radio.Group>\n            <Typography.Title level={4}>Analytics</Typography.Title>\n            {view === 'chart' ? (\n                <VolunteerCharts monthlyHours={monthlyHours} nonprofits={nonprofits} events={events}/>\n            ) : (\n                <React.Fragment>\n                    <VolunteerSummary data={summary}/>\n                    <NonprofitBreakdown data={nonprofits}/>\n                    <VolunteerEventLeaderboard data={events}/>\n                </React.Fragment>\n            )}\n            </React.Fragment>\n        ); \n};export default VolunteerAnalytics;\n","import React, {useCallback, useState} from 'react';\nimport { Typography , Button, Popover, message} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nconst { Paragraph } = Typography;\n\nfunction VolunteerCalendarCard ({item, isYearView}){\n    const [vis, setVisible] = useState([false]); \n    const [isLoading, setIsLoading] = useState(false);\n\tconst [viewmore, setViewmore] = useState(false);\n\tconst [attendeeCount, setAttendeeCount] = useState(0);\n    \n    const toggleVisible = () => {\n        setVisible(!vis);\n    };\n\n    const onClick = useCallback(async (event_id) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tawait axiosAPI.post(\"attendees/delete/\", {\n\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\tevent: event_id,\n\t\t\t});\n\t\t\tmessage.success(\"Unjoined event\")\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = \"Unjoin failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, []);\n\n    const onClickViewmore = useCallback(async (viewmore) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tconst response = await axiosAPI.get(\"events/get-event-attendee-count/\", {\n                params: {\n\t\t\t\t\tevent: item.events__id\n                }\n\t\t\t});\n\t\t\tsetAttendeeCount(response.data);\n\t\t\tsetViewmore(!viewmore);\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = \"Viewmore failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, [item.events__id]);\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    const begindate = new Date(item.events__begindate)\n\tconst enddate = new Date(item.events__enddate)\n    const virtual = item.events__virtual ? \"Yes.\" : \"No.\";\n    const time = isYearView ? (new Date(item.events__begindate)).getMonth() + \"/\" + (new Date(item.events__begindate)).getDate() : (new Date(item.events__begindate)).toLocaleTimeString(navigator.language, {hour: '2-digit', minute:'2-digit'});\n    \n    if (viewmore) {\n    \treturn (\n\t\t\t<Popover \n                content={\n                    <div>\n                        <Typography.Title level={4}>{item.events__name} \n                            <a onClick={toggleVisible} style={{ float: \"right\", color: \"grey\" }} href=\"#\">\n                                X\n                            </a>\n                        </Typography.Title>\n                        <Paragraph><b>Location: </b>{item.events__location}</Paragraph>\n                        <Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n                        <Paragraph><b>Description: </b>{item.events__description}</Paragraph>\n                        <Paragraph><b>Virtual? </b>{virtual}</Paragraph>\n                        <Paragraph><b>Instructions: </b>{item.events__instructions}</Paragraph>\n                        <Paragraph><b>No. of Attendees: </b>{attendeeCount}/{item.events__attendee_cap}</Paragraph>\n                        <p style={{color: '#1890ff'}}>>><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(viewmore)}>\n                            View Less\n                        </Button></p>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.events__id)} loading={isLoading}>\n                            Unjoin\n                        </Button>\n                    </div>}\n                trigger=\"click\"\n                visible={!vis}\n                overlayStyle={{\n                    width: \"40vw\",\n                    height: \"30vw\"\n                }}\n            >\n                <Button type=\"link\" className=\"event-viewmore-form-button\" onClick={toggleVisible}>\n                {time} {item.events__name}\n                </Button>\n            </Popover>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Popover \n                content={\n                    <div>\n                        <Typography.Title level={4}>{item.events__name}\n                            <a onClick={toggleVisible} style={{ float: \"right\", color: \"grey\" }} href=\"#\">\n                                X\n                            </a>\n                        </Typography.Title>\n                        <Paragraph><b>Location: </b>{item.events__location}</Paragraph>\n                        <Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n                        <Paragraph><b>Description: </b>{item.events__description.substring(0, 50)}...</Paragraph>\n                        <p style={{color: '#1890ff'}}>>><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(viewmore)}>\n                            View More\n                        </Button></p>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.events__id)} loading={isLoading}>\n                            Unjoin\n                        </Button>\n                    </div>}\n                trigger=\"click\"\n                visible={!vis}\n                overlayStyle={{\n                    width: \"40vw\",\n                    height: \"30vw\"\n                }}\n            >\n                <Button type=\"link\" className=\"event-viewmore-form-button\" onClick={toggleVisible}>\n                {time} {item.events__name}\n                </Button>\n            </Popover>\n\t\t);\n\t}\n\t\n\n\n} export default VolunteerCalendarCard; \n\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Calendar, Typography , Button } from 'antd';\nimport { usePageView } from '../utils/googleAnalytics'\nimport axiosAPI from \"../api/axiosApi\";\nimport VolunteerCalendarCard from './VolunteerCalendarCard';\n\nconst VolunteerCalendar = () => {\n    const [events, setEvents] = useState([]); \n    const [goals, setGoals] = useState([]);\n    const [titleDate, setTitleDate] = useState([]);\n    usePageView('/calendar')\n\n    const getVolunteerEvents = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"attendees/get-volunteer-events/\", {\n                params: {\n                    user_id: localStorage.getItem(\"user_id\"),\n                }\n            });\n            setEvents(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, []);\n\n    const getVolunteerGoals = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"analytics/get-volunteer-goals/\", {\n                params: {\n                    user: localStorage.getItem(\"user_id\"),\n                }\n            });\n            setGoals(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, []);\n\n    useEffect(() => {\n        getVolunteerEvents();\n        getVolunteerGoals();\n    }, [getVolunteerEvents, getVolunteerGoals]);\n\n    function getMonthName(monthNo) {\n        return ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', \n            'October', 'November', 'December'][monthNo - 1];\n    }\n\n    function getListData(value) {\n        setTitleDate(getMonthName(value.month()) + \" \" + value.year())\n\n        let listData;\n        listData = events.filter(events => {\n            const bdate = new Date(events.events__begindate);\n            const edate = new Date(events.events__enddate);\n\n            return ((value.month() <= edate.getMonth() && value.month() >= bdate.getMonth())\n                && (value.date() <= edate.getDate() && value.date() >= bdate.getDate())\n                && (value.year() <= edate.getFullYear() && value.year() >= bdate.getFullYear()));\n        })\n        return listData || [];\n    }\n\n    function getMonthData(value) {\n        setTitleDate(value.year())\n\n        let monthData;\n        monthData = events.filter(events => {\n            const bdate = new Date(events.events__begindate);\n            const edate = new Date(events.events__enddate);\n            return ((value.month() <= edate.getMonth() && value.month() >= bdate.getMonth())\n                && (value.year() <= edate.getFullYear() && value.year() >= bdate.getFullYear()));\n        })\n\n        return monthData || [];\n    }\n\n    function getListGoalsBegin(value) {\n        let listGoals;\n        listGoals = goals.filter(goals => {\n            const gyear = parseInt(goals.begindate.substring(0, 4), 10);\n            const gmonth = parseInt(goals.begindate.substring(5, 7), 10);\n            const gday = parseInt(goals.begindate.substring(8), 10);\n            \n            return value.month() + 1 === gmonth && value.date() === gday \n                && value.year() === gyear;\n        })\n        return listGoals || [];\n    }\n\n    function getListGoalsEnd(value) {\n        let listGoals;\n        listGoals = goals.filter(goals => {\n            const gyear = parseInt(goals.enddate.substring(0, 4), 10);\n            const gmonth = parseInt(goals.enddate.substring(5, 7), 10);\n            const gday = parseInt(goals.enddate.substring(8), 10);\n            \n            return value.month() + 1 === gmonth && value.date() === gday \n                && value.year() === gyear;\n        })\n        return listGoals || [];\n    }\n\n    function getMonthGoalsBegin(value) {\n        let monthGoals;\n        monthGoals = goals.filter(goals => {\n            const gyear = parseInt(goals.begindate.substring(0, 4), 10);\n            const gmonth = parseInt(goals.begindate.substring(5, 7), 10);\n            \n            return value.month() + 1 === gmonth && value.year() === gyear;\n        })\n\n        return monthGoals || [];\n    }\n\n    function getMonthGoalsEnd(value) {\n        let monthGoals;\n        monthGoals = goals.filter(goals => {\n            const gyear = parseInt(goals.enddate.substring(0, 4), 10);\n            const gmonth = parseInt(goals.enddate.substring(5, 7), 10);\n            \n            return value.month() + 1 === gmonth && value.year() === gyear;\n        })\n\n        return monthGoals || [];\n    }\n\n    function dateCellRender(value) {\n        const listData = getListData(value);\n        const goalsBeginData = getListGoalsBegin(value);\n        const goalsEndData = getListGoalsEnd(value);\n        return (\n          <ul className=\"events\">\n            {goalsBeginData.map((item, i) => (\n                <li key={i}>\n                    <Button type=\"link\" disabled={true} className=\"event-viewmore-form-button\">\n                        Start Goal: {item.hours}hrs\n                    </Button>\n                </li>\n            ))}\n            {goalsEndData.map((item, i) => (\n                <li key={i}>\n                    <Button type=\"link\" disabled={true} className=\"event-viewmore-form-button\">\n                        End Goal: {item.hours}hrs\n                    </Button>\n                </li>\n            ))}\n            {listData.map((item, i) => (\n                <li key={i}>\n                    <VolunteerCalendarCard key={i} item={item} isYearView={false}/>\n                </li>\n            ))}\n          </ul>\n        );\n    }\n\n    function monthCellRender(value) {\n        const monthData = getMonthData(value);\n        const goalsBeginData = getMonthGoalsBegin(value);\n        const goalsEndData = getMonthGoalsEnd(value);\n        return (\n            <ul className=\"events\">\n            {goalsBeginData.map((item, i) => (\n                <li key={i}>\n                    <Button type=\"link\" disabled={true} className=\"event-viewmore-form-button\">\n                        {(new Date(item.begindate)).getMonth() + \"/\" + (new Date(item.begindate)).getDate()} Start Goal: {item.hours}hrs\n                    </Button>\n                </li>\n            ))}\n            {goalsEndData.map((item, i) => (\n                <li key={i}>\n                    <Button type=\"link\" disabled={true} className=\"event-viewmore-form-button\">\n                    {(new Date(item.begindate)).getMonth() + \"/\" + (new Date(item.begindate)).getDate()} End Goal: {item.hours}hrs\n                    </Button>\n                </li>\n            ))}\n            {monthData.map((item, i) => (\n                <li key={i}>\n                    <VolunteerCalendarCard key={i} item={item} isYearView={true}/>\n                </li>\n            ))}\n          </ul>\n        );\n    }\n\n    return (\n        <div align=\"center\">\n            <Typography.Title level={2}>{titleDate}</Typography.Title>\n            <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender}/>\n        </div>\n    );\n};\n\nexport default VolunteerCalendar;  \n\n","import React, { useCallback } from 'react';\nimport { Form, InputNumber, Button, DatePicker} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport { addAlert } from '../actionCreators.js';\nimport { useDispatch } from 'react-redux';\nimport \"antd/dist/antd.css\";\nimport \"./NewOrgForm.css\";\n\nconst { RangePicker } = DatePicker;\n\nconst NewGoalForm = () => {\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await axiosAPI.post(\"user/create-goal/\", {\n                user_id: localStorage.getItem(\"user_id\"),\n                hours: values.hours,\n                date: values.date,\n            });\n            dispatch(addAlert('Goal created', 'success'));\n        }\n        catch {\n            dispatch(addAlert('Goal creation failed', 'error'));\n        }\n    }, [dispatch]);\n\n    return (\n        <Form\n            name=\"goal\"\n            className=\"goal-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        > \n            <Form.Item\n                    name=\"hours\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Hours is required and must be a number.'}]}\n                >\n                    <InputNumber style={{ width: '100%' }} placeholder=\"Volunteer hours\"/>\n            </Form.Item>\n            <Form.Item\n                name=\"date\"\n                hasFeedback\n                rules={[{ required: true, message: 'Date is required.' }]}\n            >\n                <RangePicker style={{ width: '100%' }} />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"org-form-button\">\n                    Set volunteering goal\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default NewGoalForm;","import React from 'react';\nimport { Typography, Table, Progress} from 'antd';\n\nfunction VolunteerGoals({ data}) {\n    \n\n    const columns = [\n        {\n            title: 'Start Date',\n            dataIndex: 'begindate',\n            key: 'begindate',\n            defaultSortOrder: 'descend'\n        },\n        {\n            title: 'End Date',\n            dataIndex: 'enddate',\n            key: 'enddate',\n            defaultSortOrder: 'ascend'\n        },\n        {\n            title: 'Hours Completed',\n            dataIndex: 'completed',\n            key: 'completed',\n        },\n        {\n            title: 'Goal Hours',\n            dataIndex: 'hours',\n            key: 'hours',\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: (_, record) => (\n                <Progress percent={record.progress}/>\n            ),\n        },\n    ];\n\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Goals</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default VolunteerGoals;\n\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Typography } from 'antd';\nimport NewGoalForm from '../forms/NewGoalForm';\nimport { usePageView } from '../utils/googleAnalytics'\nimport VolunteerGoals from '../components/VolunteerGoals';\nimport axiosAPI from \"../api/axiosApi\";\nimport './NewGoal.css';\n\nconst NewGoal = () => {\n\n    const user = localStorage.getItem(\"user_id\");\n\n    const [goals, setGoals] = useState([]);\n\n    const getGoals = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/get-volunteer-goals/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setGoals(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n            getGoals();\n    }, [getGoals]);\n\n    usePageView('/set-goal')\n    return (\n        <React.Fragment>\n            <div className='goal-container'>\n                <Typography.Title level={2}>Set volunteering goal</Typography.Title>\n                <NewGoalForm />\n            </div>\n            <VolunteerGoals data={goals} />\n        </React.Fragment>\n    );\n};\n\n\nexport default NewGoal;","import React from 'react';\nimport {Typography, PageHeader, Tag, Row, Image} from 'antd';\nimport OrgLogo from '../assets/undraw_team_spirit.svg';\nimport Modal from 'antd/lib/modal/Modal';\nimport \"./EventModal.css\";\n\nconst { Paragraph } = Typography;\n\nfunction OrgModal ({org, causes, onClose, isModalVisible}){\n\n    const tags = (\n        <React.Fragment>\n            {causes.map(cause => \n                <Tag \n                    key={cause.id} \n                    color=\"blue\" \n                >\n                    {cause.name}\n                </Tag>\n            )}\n        </React.Fragment>\n    );\n\n    const content = (\n        <>\n            {org?.email && <Paragraph><b>Email: </b>{org?.email}</Paragraph>}\n            {org?.website && <Paragraph><b>Website: </b>{org?.website}</Paragraph>}\n            {org?.phone && <Paragraph><b>Phone: </b>{org?.phone}</Paragraph>}\n            {org?.address && <Paragraph><b>Address: </b>{org?.address}</Paragraph>}\n            {org?.description && <Paragraph><b>Description: </b>{org?.description}</Paragraph>}\n        </>\n      );\n\n    const Content = ({ children, extraContent }) => (\n        <Row>\n            <div style={{ marginRight: 24}}>{extraContent}</div>\n            <div style={{ flex: 1 }}>{children}</div>\n        </Row>\n    );\n\n\treturn (\n        <Modal\n            visible={isModalVisible}\n            footer={null}\n            onCancel={onClose}\n            width={800}\n        >\n            <PageHeader\n                title={`${org?.name}`}\n                tags={tags}\n            >\n                <Content\n                    extraContent={<Image preview={false} alt=\"img\" src={org?.image ?? OrgLogo} height={300} width={300}/>}\n                >\n                    {content}\n                </Content>\n            </PageHeader>\n        </Modal>\n\t);\n\n} export default OrgModal; \n\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {Button, message} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport { setOrgs } from '../actionCreators.js';\nimport { useDispatch } from 'react-redux';\n\nfunction OrgJoinButton({item}) {\n\tconst [register, setRegister] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst dispatch = useDispatch();\n\t\n\tconst onClick = useCallback(async (register) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tif (register) {\n\t\t\t\tawait axiosAPI.delete(\"member/delete-from-user/\", {\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\t\torg_id: item.id,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tmessage.success(\"Unjoined organization\")\n\t\t\t} else {\n\t\t\t\tawait axiosAPI.post(\"member/create/\", {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\torg_id: item.id,\n\t\t\t\t\tmember_type: 0,\n\t\t\t\t\tstatus: 0,\n\t\t\t\t});\n\t\t\t\tmessage.success(\"Joined organization\");\n\t\t\t}\n\t\t\tsetRegister(!register)\n\t\t\tconst response = await axiosAPI.get(\"user/get-member/\", {\n                params: {\n                    user_id: localStorage.getItem(\"user_id\"), \n                }\n            });\n            response.data.forEach(member => member.key = member.organization.id)\n            dispatch(setOrgs(response.data));\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = !register ? \"Join failed\" : \"Unjoin failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, [dispatch, item.id]);\n\n\tconst getRegisterStatus = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"user/get-member/\", {\n                params: {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n                }\n            });\n\t\t\tsetRegister(false);\n\t\t\tif (response.data.some(org => org?.organization?.id === item.id)) {\n\t\t\t\tsetRegister(true);\n\t\t\t}\n        } catch (error) {\n            console.error(error);\n        }\n    }, [item.id]);\n\t\n\tuseEffect(() => {\n        getRegisterStatus();\n\t}, [getRegisterStatus]);\n\t\n\tconst buttonText = register ? \"Unjoin\" : \"Join\";\n\n\treturn (\n\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(register)} loading={isLoading}>\n\t\t\t{buttonText}\n\t\t</Button>\n\t);\n\n} export default OrgJoinButton; \n\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {Card, Button, Image} from 'antd';\nimport {ExpandOutlined} from '@ant-design/icons';\nimport OrgLogo from '../assets/undraw_team_spirit.svg';\nimport axiosAPI from \"../api/axiosApi\";\nimport OrgModal from './OrgModal';\nimport OrgJoinButton from './OrgJoinButton'\nimport './EventCard.css';\n\nfunction OrgCard ({organization, selectedCauses}){\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\n\tconst [causes, setCauses] = useState([]);\n\tconst getCausesByOrg = useCallback(async () => {\n\t\ttry {\n\t\t\tconst response = await axiosAPI.get(\"organization/get-causes/\", {\n\t\t\t\tparams: {\n\t\t\t\t\torgId: organization?.id\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetCauses(response.data);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n    }, [setCauses, organization.id]);\n\t\n\tuseEffect(() => {\n\t\tgetCausesByOrg();\n\t}, [getCausesByOrg]);\n\n\tconst onClose = useCallback(() => {\n\t\tsetIsModalVisible(false);\n\t}, [setIsModalVisible])\n\n\tconst causeIntersection = causes.map(cause => cause.id).filter(cause => selectedCauses.includes(cause));\n\tconst hideCard = selectedCauses.length > 0 && causes.length > 0 && causeIntersection.length === 0;\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Card \n\t\t\t\tclassName=\"event-card\" \n\t\t\t\tbordered={true}\n\t\t\t\tstyle={{ height: 'auto' }}\n\t\t\t\tcover={\n\t\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t\t<div className=\"image-container\">\n\t\t\t\t\t\t\t<Image className=\"image\" preview={false} alt=\"img\" src={organization?.image ?? OrgLogo} />\n\t\t\t\t\t\t\t<Button className=\"expand-button\" icon={<ExpandOutlined />} ghost onClick={setIsModalVisible}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\thidden={hideCard}\n\t\t\t>\n\t\t\t\t<Card.Meta title={organization?.name} description={\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t{<OrgJoinButton item={organization}/>}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t} />\n\t\t\t</Card>\n\t\t\t<OrgModal org={organization} causes={causes} isModalVisible={isModalVisible} onClose={onClose}/>\n\t\t</React.Fragment>\n\t);\n\n} export default OrgCard; \n\n","import React, {useState, useCallback, useEffect, useMemo} from 'react';\nimport { Typography, List, Space, Input, Select } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nimport OrgCard from '../components/OrgCard';\n\nconst { Option } = Select;\n\n\nfunction BrowseOrgs() {\n    const [orgs, setOrgs] = useState([]);\n    const [selectedCauses, setSelectedCauses] = useState([]);\n    const [filterDisplay, setFilterDisplay] = useState([]);\n    const [causes, setCauses] = useState([]);\n\n    const getPublicOrgs = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"organization/get-public-orgs/\", {\n                params: {\n                    user_id: localStorage.getItem(\"user_id\")\n                }\n            });\n            setOrgs(response.data);\n            setFilterDisplay(response.data)\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setOrgs, setFilterDisplay]);\n\n    const getCauses = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"causes/get/\");\n            setCauses(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setCauses]);\n\n    useEffect(() => {\n        getCauses();\n    }, [getCauses]);\n\n    const handleChange = e => {\n        if (e !== \"\") {\n            const newList = orgs.filter(org =>\n                org.name.toLowerCase().includes(e.toLowerCase())\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(orgs);\n        }\n    };\n\n    const filteredCauses = useMemo(() => {\n        return causes.filter(o => !selectedCauses.includes(o));\n    }, [selectedCauses, causes]);\n\n    useEffect(() => {\n        getPublicOrgs();\n     }, [getPublicOrgs])\n    \n    return (\n        <React.Fragment>\n            <Typography.Title level={2}>Browse organizations</Typography.Title>\n            <Space>\n                Search by name: <Input onChange={e => handleChange(e.target.value)} placeholder=\"Event name\" size=\"medium\" className=\"search\" style={{height: 33.825}}/>\n                Filter by cause:<Select mode=\"multiple\" placeholder=\"Cause(s)\" style={{ minWidth: 200 }} size=\"medium\" value={selectedCauses} onChange={setSelectedCauses}>\n                    {filteredCauses.map(item => (\n                        <Option key={item.id} value={item.id}>\n                            {item.name}\n                        </Option>\n                    ))}\n                </Select>\n            </Space> \n            <List\n                grid={{\n                    gutter: 16,\n                    xs: 1,\n                    sm: 1,\n                    md: 2,\n                    lg: 2,\n                    xl: 3,\n                    xxl: 3,\n                }}\n                dataSource={filterDisplay}\n                renderItem={item => (\n                    <List.Item>\n                        <OrgCard key={item.id} organization={item} selectedCauses={selectedCauses}/>\n                    </List.Item>\n                )}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default BrowseOrgs;","import React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button, Radio, Select} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport { useDispatch } from 'react-redux';\nimport { addAlert } from '../actionCreators.js';\nimport \"antd/dist/antd.css\";\nimport \"./EventFeedbackForm.css\"\n\nconst {TextArea} = Input;\n\nconst EventFeedbackForm = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch();\n    const [selectedEvent, setSelectedEvent] = useState(null);\n    const [events, setEvents] = useState([]);   \n\n    const getEvents = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"attendees/get-volunteer-events/\", {\n                 params: {\n                     user_id: localStorage.getItem(\"user_id\"),  \n                 }\n            });\n            setEvents(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setEvents]);\n\n    useEffect(() => {\n        getEvents();\n    }, [getEvents]);\n\n    const onFinish = useCallback(async (values) => {\n        setIsLoading(true);\n        try {\n            await axiosAPI.post(\"eventFeedback/create/\", {\n                id: events.filter(event => event.events__id === selectedEvent).map(event => event.id)[0],\n                event: values.event,\n                overall: values.overall,\n                satisfaction: values.satisfaction,\n                likely: values.likely,\n                expectations: values.expectations,\n                future: values.future,\n                better: values.better,\n                experience: values.experience,\n            });\n            dispatch(addAlert('Feedback submitted', 'success'));\n        }\n        catch {\n            dispatch(addAlert('Feedback submission failed', 'error'));\n        }\n        setIsLoading(false);\n    }, [dispatch, events, selectedEvent]);\n\n    const options = [\n        { label: 'Poor', value: 1},\n        { label: 'Fair', value: 2 },\n        { label: 'Average', value: 3},\n        { label: 'Good', value: 4},\n        { label: 'Excellent', value: 5},\n    ];\n\n    const s_options = [\n        { label: 'Very Dissatisfied', value: 1},\n        { label: 'Dissatisfied', value: 2},\n        { label: 'Neutral', value: 3},\n        { label: 'Satisfied', value: 4},\n        { label: 'Very Satisfied', value: 5},\n    ];\n    const l_options = [\n        { label: 'Very Unlikely', value: 1},\n        { label: 'Somewhat Unlikely', value: 2},\n        { label: 'Neutral', value: 3},\n        { label: 'Somewhat Likely', value: 4},\n        { label: 'Very Likely', value: 5},\n    ];\n    const yn_options = [\n        { label: 'Yes', value: 'Yes'},\n        { label: 'No', value: 'No'},\n    ];\n\n    return (\n        <Form\n            name=\"event-feedback\"\n            className=\"event-feedback-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >\n\n            <p>Which event would you like to provide feedback for?</p>\n            <Form.Item\n                    name=\"event\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Event is required.' }]}\n            >\n                <Select\n                    placeholder=\"Attended Events\"\n                    value={selectedEvent}\n                    onChange={setSelectedEvent}\n                    style={{ width: '100%' }}\n                >\n                    {events.map(item => (\n                        <Select.Option key={item.events__id} value={item.events__id}>\n                            {item.events__name}\n                        </Select.Option>\n                    ))}\n                </Select>\n            </Form.Item>\n            <p>How would you rate your overall experience?</p>\n            <Form.Item\n                name=\"overall\"\n                hasFeedback\n                rules={[{ required: true, message: 'Overall experience rating required.' }]}\n            >\n            <Radio.Group\n                options={options}\n                optionType=\"button\"\n                buttonStyle=\"solid\"\n            />\n            </Form.Item>\n            <p>How satisfied did you feel after volunteering?</p>\n            <Form.Item\n                name=\"satisfaction\"\n                hasFeedback\n                rules={[{ required: true, message: 'Satisfaction rating required.' }]}\n            >\n            <Radio.Group\n                options={s_options}\n                optionType=\"button\"\n                buttonStyle=\"solid\"\n            />\n            </Form.Item>\n            <p>How likely are you to recommend future volunteer opportunities to your friends?</p>\n            <Form.Item\n                name=\"likely\"\n                hasFeedback\n                rules={[{ required: true, message: 'Recommend rating required.' }]}\n            >\n            <Radio.Group\n                options={l_options}\n                optionType=\"button\"\n                buttonStyle=\"solid\"\n            />\n            </Form.Item>\n            <p>Did the experience meet your expectations?</p>\n            <Form.Item\n                name=\"expectations\"\n                hasFeedback\n                rules = {[{ required: true, message: 'Expectations rating required.' }]}>\n            <Radio.Group options={yn_options}/>\n            </Form.Item>\n            <p>Do you plan to volunteer with us again in the future?</p>\n            <Form.Item\n                name=\"future\"\n                hasFeedback\n                rules = {[{ required: true, message: 'Future rating required.' }]}>\n            <Radio.Group options={yn_options}/>\n            </Form.Item>\n            <p>What could we have done better?</p>\n            <Form.Item\n                name=\"better\"\n                hasFeedback\n                rules = {[{ required: true, message: 'Improvement feedback is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Response here\" />\n            </Form.Item>\n            <p>Is there anything else we should know about your volunteer experience?</p>\n            <Form.Item\n                name=\"experience\"\n                hasFeedback       \n                rules = {[{ required: true, message: 'Experience feedback is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Response here\" />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"event-feedback-form-button\" loading={isLoading}>\n                    Submit feedback\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\n\nexport default EventFeedbackForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport EventFeedbackForm from '../forms/EventFeedbackForm';\nimport { usePageView } from '../utils/googleAnalytics'\nimport './EventFeedback.css';\n\nconst EventFeedback = () => {\n    usePageView('/feedback-form');\n    return (\n      <div className='event-feedback-container'>\n            <Typography.Title level={2}>Event Feedback</Typography.Title>\n            <EventFeedbackForm /> \n        </div>\n    );\n};\n\n\nexport default EventFeedback;  \n\n","import React, {useState, useCallback, useEffect} from 'react';\nimport { Typography, List, message } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nimport OrgCard from '../components/OrgCard';\n\n\nfunction Notifications() {\n    const [orgs, setOrgs] = useState([]);\n    console.log(orgs)\n    const getPublicOrgs = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"organization/get-public-orgs/\", {\n                params: {\n                    user_id: localStorage.getItem(\"user_id\")\n                }\n            });\n            setOrgs(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setOrgs]);\n\n    useEffect(() => {\n        getPublicOrgs();\n     }, [getPublicOrgs])\n    \n    return (\n        <React.Fragment>\n            <Typography.Title level={2}>Notifications</Typography.Title>\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;","import React from \"react\";\nimport NewOrg from \"../pages/NewOrg\";\nimport Settings from \"../pages/Settings\";\nimport NewEvent from \"../pages/NewEvent\";\nimport OrgPage from \"../pages/OrgPage\"\nimport LoadingOrg from \"../pages/LoadingOrg\"\nimport VolunteerAnalytics from \"../pages/VolunteerAnalytics\"\nimport VolunteerCalendar from \"../pages/VolunteerCalendar\"\nimport NewGoal from \"../pages/NewGoal\"\nimport BrowseOrgs from \"../pages/BrowseOrgs\"\nimport EventFeedback from \"../pages/EventFeedback\"\nimport Notifications from \"../pages/Notifications\"\n\n\nimport { useSelector } from 'react-redux'\n\n\nconst FeedContent = ({member}) => {\n    const context = useSelector(state => state.sidebar_item);\n    switch(context) {\n        case \"loading\":\n            return(<LoadingOrg />)\n        case \"create-org\":\n            return (<NewOrg />);\n        case \"settings\":\n            return (<Settings />);\n        case \"create-event\":\n            return (<NewEvent />);\n        case \"set-goals\":\n            return (<NewGoal />);\n        case \"calendar\":\n            return (<VolunteerCalendar />); \n        case \"view-analytics\":\n            return (<VolunteerAnalytics />); \n        case \"browse-orgs\":\n            return <BrowseOrgs />\n        case \"give-feedback\":\n            return (<EventFeedback />);\n        case \"notifications\":\n            return (<Notifications />); \n        default:\n            const orgId = parseInt(context)\n            if (isNaN(orgId)) {\n                return (<NewOrg />);\n            } else {\n                const orgMember = member.filter(m => m.organization.id === orgId)[0]\n                return <OrgPage member={orgMember} orgId={orgId}/>\n            } \n    }\n  }\n  \n  export default FeedContent;","import React, {useCallback, useEffect, useState} from 'react';\nimport {Modal, Typography, Carousel, Skeleton, Alert, Space} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nconst { Paragraph } = Typography;\n\nfunction ReportModal ({isModalShowing, onClose}) {\n    const [user, setUser] = useState(null);\n    const [report, setReport] = useState(null);\n\n    const getUserDetails = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"users/get/\", {\n                 params: {\n                     user_id: localStorage.getItem(\"user_id\"),  \n                 }\n            });\n            setUser(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setUser]);\n\n    const getReport = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"user/generate-daily-report\", {\n                params: {\n                    user_id: localStorage.getItem('user_id'),\n                }\n            });\n            setReport(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setReport]);\n\n    useEffect(() => {\n        getUserDetails();\n        getReport();\n    }, [getUserDetails, getReport]);\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    if (report?.new_clearances) {\n        console.log(report?.new_clearances)\n    }\n    \n\treturn (\n        <Modal\n            visible={isModalShowing}\n            onCancel={onClose}\n            onOk={onClose}\n            footer={null}\n        >\n            <Skeleton active loading={!user} paragraph={{ rows: 1, width: 400 }} title={false}><Typography.Title level={3}>Welcome back, {user?.first_name} 👋</Typography.Title></Skeleton>\n            <Typography.Title level={5}>Here's what happened while you were out volunteering:</Typography.Title>\n            <Space direction=\"vertical\">\n                {report?.events && report?.events?.length > 0 && <Carousel>\n                    {report?.events.map(event =>\n                        <div key={event.id} >\n                            <Alert\n                                message=\"New event details\" \n                                description={\n                                    <>\n                                        <p>Changes were made to <b>{event.name}:</b></p>\n                                        <ul>\n                                            {event?.old_location && event?.new_location && \n                                                <li><b>New location: </b> {event.new_location}</li>\n                                            }\n                                            {event?.old_begindate && event?.new_begindate && \n                                                <li><b>New start time: </b> {new Date(event.new_begindate).toLocaleString('en-US', options)}</li>\n                                            }\n                                            {event?.old_enddate && event?.new_enddate && \n                                                <li><b>New end time: </b> {new Date(event.new_enddate).toLocaleString('en-US', options)}</li>\n                                            }\n                                        </ul>\n                                    </>\n                                }          \n                                type=\"info\" \n                                showIcon \n                            />\n                        </div>\n                    )}\n                </Carousel>}\n                {report?.new_clearances && Object.keys(report.new_clearances).length > 0 && <Carousel>\n                    {Object.keys(report.new_clearances).map((k, i) =>\n                        (<div key={i} >\n                            <Alert\n                                message=\"New clearances\" \n                                description={\n                                    <>\n                                        <p>Clearances were added to the following <b>{report.new_clearances[k][0]['org_name']}</b> events. Time to go fill them out!</p>\n                                        <ul>\n                                            {report.new_clearances[k].map((event, j) =>\n                                                <li key={j}>{event['event_name']}</li>\n                                            )}\n                                        </ul>\n                                    </>\n                                }          \n                                type=\"warning\" \n                                showIcon \n                            />\n                        </div>)\n                    )}\n                </Carousel>}\n                {report?.changed_clearances && Object.keys(report.changed_clearances).length > 0 && <Carousel>\n                    {Object.keys(report.changed_clearances).map((k, i) =>\n                        (<div key={i} >\n                            <Alert\n                                message=\"Clearances reviewed\" \n                                description={\n                                    <>\n                                        <p>Your clearances were reviewed for <b>{report.changed_clearances[k][0]['event_name']}</b>:</p>\n                                        {report.changed_clearances[k].map(clearance => clearance.new_status).includes('Rejected') ? 'At least one of your clearances was rejected.' : 'Your clearance(s) were accepted. Check back to see if additional clearances are required.'}\n                                    </>\n                                }          \n                                type={report.changed_clearances[k].map(clearance => clearance.new_status).includes('Rejected') ? 'error' : 'success'} \n                                showIcon \n                            />\n                        </div>)\n                    )}\n                </Carousel>}\n                {report?.uploaded_clearances && Object.keys(report.uploaded_clearances).length > 0 && <Carousel>\n                    {Object.keys(report.uploaded_clearances).map((k, i) =>\n                        (<div key={i} >\n                            <Alert\n                                message=\"Review clearances\" \n                                description={\n                                    <>\n                                        <p>{report.uploaded_clearances[k]['uploaded_clearances_count']} new clearances were uploaded to <b>{report.uploaded_clearances[k]['org_name']}</b> events. Time to go review them!</p>\n                                    </>\n                                }          \n                                type=\"warning\" \n                                showIcon \n                            />\n                        </div>)\n                    )}\n                </Carousel>}\n                {report?.feedback && report?.feedback?.length > 0 &&\n                    <Alert\n                        message=\"Incomplete feedback\" \n                        description={\n                            <>\n                                <p>It's time to give feedback on the following events:</p>\n                                <ul>\n                                    {report?.feedback.map(event => <li key={event.id}><b>{event.org_name}: </b> {event.event_name}</li>)}\n                                </ul>\n                            </>\n                        }          \n                        type=\"warning\" \n                        showIcon \n                    />\n                }\n            </Space>\n        </Modal>\n\t);\n\n} export default ReportModal; ","import React from 'react';\nimport { Carousel } from 'antd';\n\nfunction Tutorial() {\n\n    const contentStyle = {\n        height: '160px',\n        color: '#fff',\n        background: '#364d79',\n        padding: '20px'\n    };\n\n    return (\n        <React.Fragment>      \n            <Carousel>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>Create and Access Organizations</center></b><br/>\n                        If you are a nonprofit admin, click \"Create Organization\" under the \"Take Action\" dropdown in the application sidebar. \n                        Click on an organization from the sidebar of the application. \n                    </p>\n                </div>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>Invite Members</center></b><br/>\n                        If you are a nonprofit admin, send email invites to members of your nonprofit by clicking the \"Invite New Members\" \n                        button on the \"Invites\" tab of the organization page.\n                    </p>\n                </div>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>Create Events</center></b><br/>\n                        If you are a nonprofit admin, click \"Create Event\" under the \"Take Action\" dropdown in the application sidebar.\n                        Created events will be displayed in the \"Events\" tabs of the organization page.\n                    </p>\n                </div>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>View Events</center></b><br/>\n                        View upcoming events, join events, and filter and search for different events on the \"Events\" tab of\n                        the organization page. Click \"View More\" on any event card to view full event details. \n                    </p>\n                </div>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>Upload Clearances</center></b><br/>\n                        On the \"Clearances\" tab of the organization page, admins  upload blank clearances. Volunteers  upload completed clearances.\n                        Admins accept or reject uploaded clearances and write comments. \n                    </p>\n                </div>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>Set and View Goals</center></b><br/>\n                        Set and view volunteering hours goals within a specific duration by clicking on the \"Set Goals\" option \n                        under the \"Take Action\" dropdown in the application sidebar.\n                    </p>\n                </div>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>View My Events</center></b><br/>\n                        View upcoming events you are registered for and goals you have set in a calendar view by clicking \"View my events\" under the\n                        \"Take Action\" dropdown in the application sidebar. \n                    </p>\n                </div>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>Feedback</center></b><br/>\n                        By clicking on the \"Feedback\" tab of the organization page, view feedback you have given on prior events or view feedback given\n                        by all volunteers if you are a nonprofit admin. \n                    </p>\n                </div>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>Analytics</center></b><br/>\n                        If you are a nonporofit admin, view analytics for your organization on the \"Analytics\" tab of the organization page.\n                    </p>\n                </div>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>View my analytics</center></b><br/>\n                        View personal analytics including hours volunteered, events attended and top rated events by clicking the \"View my analytics\" option\n                        under the \"Take Action\" dropdown in the application sidebar. \n                    </p>\n                </div>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>FAQ</center></b><br/>\n                        Post questions if you are a volunteer or post and answer questions if you are a nonprofit admin on the \"FAQ\" tab of the organization page.\n                    </p>\n                </div>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>Members</center></b><br/>\n                        If you are a nonprofit admin, view all members of your organization and delete members on the \"Members\" tab of the organization page.\n                    </p>\n                </div>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>Communication</center></b><br/>\n                        If you are a nonprofit admin, select any group of members from your organization and send them an email on the \"Communication\" tab of the organization page.\n                    </p>\n                </div>\n                <div>\n                    <p style={contentStyle}>\n                        <b><center>Manage User Settings</center></b><br/>\n                        Change profile information, reset your password and change notification settings by clicking \"Manage User Settings\" on the sidebar.\n                    </p>\n                </div>\n                \n            </Carousel>\n        </React.Fragment>\n    )\n\n\n} export default Tutorial;\n\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { removeAlert, setOrgs, setSidebarItem } from '../actionCreators.js';\nimport { NotificationOutlined, QuestionOutlined } from '@ant-design/icons';\nimport { Alert, Layout, Button, Modal } from 'antd';\nimport Sidebar from \"../components/Sidebar\";\nimport FeedContent from \"../components/FeedContent\";\nimport ReportModal from \"../components/ReportModal\";\nimport Tutorial from \"../components/Tutorial\"; \nimport axiosAPI from '../api/axiosApi';\nimport \"./Feed.css\"\n\nconst { Content, Sider } = Layout;\n\nconst Feed = () => {\n  const [isModalShowing, setIsModalShowing] = useState(false);\n  const alerts = useSelector(state => state.alerts, shallowEqual);\n  const orgs = useSelector(state => state.orgs);\n  const dispatch = useDispatch();\n\n  const onClose = useCallback((id) => {\n    setTimeout(() => dispatch(removeAlert(id)), 500);\n  }, [dispatch]);\n\n  const alertList = alerts.map(alert => \n    <Alert\n      key={alert.id}\n      type={alert.alert_type}\n      message={alert.message}\n      banner\n      closable\n      onClose={() => onClose(alert.id)}\n    />\n  );\n\n  const getMember = useCallback(async () => {\n    try {\n         const response = await axiosAPI.get(\"user/get-member/\", {\n             params: {\n                 user_id: localStorage.getItem(\"user_id\"), \n             }\n         });\n        response.data.forEach(member => member.key = member.organization.id)\n        dispatch(setOrgs(response.data));\n        dispatch(setSidebarItem(response?.data[0]?.key.toString() ?? 'create-org'));\n    } catch(error) {\n        console.error(error);\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    getMember()\n  }, [getMember]);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n      setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const closeModal = () => {\n    setIsModalShowing(false);\n  };\n\n  return (\n    <>\n      <Layout id=\"content\" style={{ minHeight:\"100vh\" }}>\n        <Sider width={240} style={{ background: '#fff' }}>\n          <Sidebar member={orgs}/>\n        </Sider>\n        <Layout>\n          {alertList}\n          <Layout style={{ padding: '24px', height: \"100%\"  }}>\n            <Content style={{ background: '#fff', padding: 24, margin: 0, display: \"flex\", flexDirection: \"column\" }}>\n              <div className=\"button-container\">\n                <Button className=\"tutorial-button\" shape=\"circle\" icon={<QuestionOutlined />} onClick={showModal}></Button>\n                <Button className=\"notifications-button\" shape=\"circle\" icon={<NotificationOutlined />} onClick={() => setIsModalShowing(true)}></Button>\n                <Modal title=\"Application Tutorial\" visible={isModalVisible} footer={null} onOk={handleOk} onCancel={handleCancel}>\n                    <Tutorial/>\n                </Modal>\n                <FeedContent member={orgs} />\n              </div>\n            </Content>\n          </Layout>\n        </Layout>\n      </Layout>\n      <ReportModal isModalShowing={isModalShowing} onClose={closeModal}/>\n    </>\n  );\n}\n\nexport default Feed;","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport { LockOutlined } from '@ant-design/icons';\nimport { registerFromInvite } from '../api/authenticationApi';\nimport \"antd/dist/antd.css\";\nimport \"./AuthForm.css\"\n\n\nconst InviteAuthForm = ({invite}) => {\n    const history = useHistory();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await registerFromInvite(invite.email, values.first_name, values.last_name, values.password, invite.id)\n            history.push('/login')\n        } catch (error) {\n            console.error(error)\n        }\n    }, [history, invite]);\n\n  return (\n    <React.Fragment>\n        <Form\n            name=\"auth\"\n            className=\"auth-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >  \n            <Form.Item>\n                <Input.Group compact>\n                    <Form.Item\n                        name=\"first_name\"\n                        noStyle\n                        rules={[{ required: true, message: 'First name is required' }]}\n                    >\n                        <Input style={{ width: '50%' }} placeholder=\"First name\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"last_name\"\n                        noStyle\n                        rules={[{ required: true, message: 'Last name is required' }]}\n                    >\n                        <Input style={{ width: '50%' }} placeholder=\"Last name\" />\n                    </Form.Item>\n                </Input.Group>\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Password is a required field.' },\n                    { min: 12, message: \"Password must be at least 12 characters long.\"},\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n            </Form.Item>\n            <Form.Item\n                name=\"confirm\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Please confirm your password.' },\n                    ({ getFieldValue }) => ({\n                        validator(rule, value) {\n                            if (!value || getFieldValue('password') === value) {\n                            return Promise.resolve();\n                            }\n                            return Promise.reject('Passwords do not match.');\n                        },\n                    }),\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\">\n                    Create Account\n                </Button>\n            </Form.Item>\n        </Form>\n    </React.Fragment>\n  );\n};\n\nexport default InviteAuthForm;","import React, { useCallback } from 'react';\nimport { Layout, Typography, Button, Space, Skeleton } from 'antd';\nimport InviteAuthForm from '../forms/InviteAuthForm';\nimport { useHistory } from 'react-router-dom';\nimport LoginLogo from '../assets/login.svg';\nimport RegisterLogo from '../assets/register.svg';\nimport axiosAPI from '../api/axiosApi';\nimport './Auth.css';\n\nconst InviteAuth = ({isRegister, invite}) => {\n    const title = `Join ${invite?.organization?.name ?? \"Organization\"}`;\n    const info = `${isRegister ? \"Welcome!\" : \"Hey there!\"} You've been invited to join ${invite?.organization?.name ?? \"a new organization\"} on VolunteerSense.\n    ${isRegister ? \"Get started my making an account.\" : \"Do you want to join this organization?\"}`;\n    const history = useHistory();\n    const logo = isRegister ? RegisterLogo: LoginLogo;\n\n    const acceptInvite = useCallback(async () => {\n        try {\n            await axiosAPI.get(\"invite/accept/\", {\n                params: {\n                    rt: new URLSearchParams(window.location.search).get('rt'),\n                }\n\n            });\n            history.push(\"/login\")\n        } catch (error) {\n            console.error(error);\n        }\n    }, [history]);\n\n    const declineInvite = useCallback(async () => {\n        try {\n            await axiosAPI.get(\"invite/reject/\", {\n                params: {\n                    invite_id: invite.id,\n                }\n            });\n            history.push(\"/login\")\n        } catch (error) {\n            console.error(error);\n        }\n    }, [history, invite]);\n\n    return (\n        <Layout style={{ height: \"100vh\" }}>\n            <Layout.Content className=\"auth-content\">\n                <div className='auth-container'>\n                    <Skeleton active loading={!invite} paragraph={false}>\n                        <Typography.Title level={2}>{title}</Typography.Title>\n                    </Skeleton>\n                    <Skeleton active loading={!invite} title={false}>\n                        <Typography.Paragraph level={2}>{info}</Typography.Paragraph>\n                    </Skeleton>\n                    <img \n                        className=\"auth-logo\"\n                        src={logo} \n                        alt={title + \" logo\"}\n                    />\n                    {isRegister ? \n                        (\n                            <InviteAuthForm invite={invite}/>\n                        ) :\n                        (\n                            <Space style={{ width: '100%'}}>\n                                <Button style={{ width: 196 }} type=\"primary\" onClick={acceptInvite}>Join</Button>\n                                <Button style={{ width: 196 }} type=\"primary\" danger onClick={declineInvite}>Decline Invitation</Button>\n                            </Space>\n                        )\n                    }\n                </div>\n            </Layout.Content>\n        </Layout>\n    );\n};\n\n\nexport default InviteAuth;","import React, {useState, useEffect, useCallback} from 'react';\nimport { Result, Button, Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\nimport InviteAuth from '../pages/InviteAuth';\n\nconst AuthState = {\n    LOADING: 1,\n    NEW_USER: 2,\n    RETURNING_USER: 3,\n    FAILURE: 4\n };\n\nconst InviteNoAuth = () => {\n\n    const [loadingState, setLoadingState] = useState(AuthState.LOADING); \n    const [invite, setInvite] = useState(null);\n\n    const validate = useCallback(async () => {\n        try {\n            const queryString = window.location.search;\n            const params = queryString.split(/[?&=]/);\n            var token = \"\";\n            for (var i = 0; i < params.length - 1; i++) {\n                if (params[i] === \"rt\") {\n                    token = params[i+1];\n                    break;\n                }\n            }\n            if (token !== \"\") {\n                const url = `invite/validate/${queryString}`;\n                const response = await axiosAPI.get(url);\n                if (response.status === 200) {\n                    if (response.data.returning) {\n                        setLoadingState(AuthState.RETURNING_USER);\n                    } else {\n                        setLoadingState(AuthState.NEW_USER);\n                    }\n                    setInvite(response.data.invite)\n                } else {\n                    setLoadingState(AuthState.FAILURE);\n                }\n            }\n            else {\n                setLoadingState(AuthState.FAILURE);\n            }\n        } catch (error) {\n            setLoadingState(AuthState.FAILURE);\n        }\n    }, [setLoadingState])\n\n    \n    useEffect(() => {\n        validate();\n    }, [validate]);\n\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n    switch(loadingState) {\n        case AuthState.FAILURE:\n            return (\n                <Result\n                    status=\"error\"\n                    title=\"Failed to join organization\"\n                    subTitle=\"Your invitation token may be expired, or otherwise invalid. Contact the group administrator to receive another invitation.\"\n                    extra={[\n                        <Button key=\"home\" href=\"/\">Return home</Button>,\n                    ]}\n                />\n            );\n        case AuthState.LOADING:\n            return (\n                <Spin indicator={antIcon} />\n            );\n        default:\n            return (\n                <InviteAuth isRegister={loadingState === AuthState.NEW_USER} invite={invite} />\n            );\n    }\n\n}\n\nexport default InviteNoAuth;\n","import React, {useState, useEffect} from 'react';\nimport { Result, Button, Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\n\nconst AuthState = {\n    LOADING: 1,\n    SUCCESS: 2,\n    FAILURE: 3\n };\n\nconst Activate = () => {\n\n    const [loadingState, setLoadingState] = useState(AuthState.LOADING); \n\n    useEffect(() => {\n        activate();\n    }, []);\n\n    const activate = async () => {\n        try {\n            const queryString = window.location.search;\n            const url = `users/activate/${queryString}`;\n            await axiosAPI.get(url);\n            setLoadingState(AuthState.SUCCESS);\n        } catch (error) {\n            setLoadingState(AuthState.FAILURE);\n        }\n    }\n\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n    switch(loadingState) {\n        case AuthState.SUCCESS:\n            return (\n                <Result\n                    status=\"success\"\n                    title=\"Successfully activated account\"\n                    extra={[\n                        <Button type=\"primary\" key=\"login\" href=\"/login\">\n                            Login\n                        </Button>,\n                        <Button key=\"home\" href=\"/\" >Return home</Button>,\n                    ]}\n                />\n            );\n        case AuthState.FAILURE:\n            return (\n                <Result\n                    status=\"error\"\n                    title=\"Failed to activate account\"\n                    subTitle=\"Your activation token may be expired, or otherwise invalid.\"\n                    extra={[\n                        <Button type=\"primary\" key=\"resend\" href=\"/\">\n                            Resend confirmation email\n                        </Button>,\n                        <Button key=\"home\" href=\"/\">Return home</Button>,\n                    ]}\n                />\n            );\n        default:\n            return (\n                <Spin indicator={antIcon} />\n            );\n    }\n\n}\n\nexport default Activate;\n","import React, { useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { MailOutlined } from '@ant-design/icons';\nimport { forgot_password } from '../api/authenticationApi';\nimport \"antd/dist/antd.css\";\nimport \"./AuthForm.css\"\n\nconst ForgotPasswordForm = ({isRegister}) => {\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await forgot_password(values.email);\n         \n        } catch (error) {\n            throw error;\n        }\n    }, []);\n\n\n  return (\n    <React.Fragment>\n        <Form\n            name=\"forgot-password\"\n            className=\"forgot-password-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >   \n            <Form.Item\n                name=\"email\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Email is a required field.' },\n                    { type: 'email', message: 'Not a valid email.' }\n                ]}\n            >\n                <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n            </Form.Item>\n           \n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\">\n                    {\"Submit\"}\n                </Button>\n            </Form.Item>\n        </Form>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPasswordForm;","import React from 'react';\nimport { Layout, Typography } from 'antd';\nimport RegisterLogo from '../assets/register.svg';\nimport './Auth.css';\nimport ForgotPasswordForm from '../forms/ForgotPasswordForm';\n\nconst ForgotPassword = () => {\n  const logo = RegisterLogo;\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n        <Layout.Content className=\"auth-content\">\n            <div className='auth-container'>\n                <Typography.Title level={2}>Forgot Password</Typography.Title>\n                <img \n                    className=\"auth-logo\"\n                    src={logo} \n                    alt={\"Forgot Password logo\"}\n                />\n                <ForgotPasswordForm/>\n            </div>\n        </Layout.Content>\n    </Layout>\n  );\n};\n\n\nexport default ForgotPassword;","import { Layout, Typography } from 'antd';\nimport ResetPasswordForm from '../forms/ResetPasswordForm';\nimport RegisterLogo from '../assets/register.svg';\nimport './Auth.css';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport { Result, Button, Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\n\nconst AuthState = {\n    LOADING: 1,\n    SUCCESS: 2,\n    FAILURE: 3,\n };\n\n const ResetPassword = () => {\n    const [loadingState, setLoadingState] = useState(AuthState.LOADING); \n\n    const validate = useCallback(async () => {\n        try {\n            const queryString = window.location.search;\n            const params = queryString.split(/[?&=]/);\n            var token = \"\";\n            for (var i = 0; i < params.length - 1; i++) {\n                if (params[i] === \"rt\") {\n                    token = params[i+1];\n                    break;\n                }\n            }\n            if (token !== \"\") {\n                const url = `users/validate-reset-password/${queryString}`;\n                const response = await axiosAPI.get(url);\n                if (response.status === 200) {\n                    setLoadingState(AuthState.SUCCESS);\n                } else {\n                    setLoadingState(AuthState.FAILURE);\n                }\n            }\n            else {\n                setLoadingState(AuthState.FAILURE);\n            }\n        } catch (error) {\n            setLoadingState(AuthState.FAILURE);\n        }\n    }, [setLoadingState])\n\n    useEffect(() => {\n        validate();\n    }, [validate]);\n\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n    switch(loadingState) {\n        case AuthState.FAILURE:\n            return (\n                <Result\n                    status=\"error\"\n                    title=\"Failed to reset password\"\n                    subTitle=\"Your password token may be expired, or otherwise invalid. Please try again to reset your password.\"\n                    extra={[\n                        <Button key=\"home\" href=\"/\">Return home</Button>,\n                    ]}\n                />\n            );\n        case AuthState.LOADING:\n            return (\n                <Spin indicator={antIcon} />\n            );\n        default:\n            return (\n                <Layout style={{ height: \"100vh\" }}>\n                    <Layout.Content className=\"auth-content\">\n                        <div className='auth-container'>\n                            <Typography.Title level={2}>Reset Password</Typography.Title>\n                            <img \n                                className=\"auth-logo\"\n                                src={RegisterLogo} \n                                alt={\"reset password logo\"}\n                            />\n                            <ResetPasswordForm isAuthenticated={false}/>\n                        </div>\n                    </Layout.Content>\n                </Layout>\n              );\n    }\n\n}\n\nexport default ResetPassword;","import React, {useEffect} from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { isAuthenticated } from './api/authenticationApi';\nimport Auth from './pages/Auth';\nimport Home from './pages/Home/Home';\nimport Feed from './pages/Feed';\nimport InviteNoAuth from './pages/InviteNoAuth';\nimport Activate from './pages/Activate';\nimport EventFeedback from './pages/EventFeedback'\nimport './App.css';\nimport ForgotPassword from './pages/ForgotPassword';\nimport ResetPassword from './pages/ResetPassword';\n\nfunction App() {\n\n  useEffect(() => {\n    document.title = \"VolunteerSense\"\n  }, []);\n\n  return (\n    <main>\n      <Switch>\n          <Route exact path=\"/\" \n            render={() =>\n              isAuthenticated() ? (\n                <Feed/>\n              ) : (\n                <Home/>\n              )\n            }\n          />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/activate\" component={Activate} />\n          <Route path=\"/invite\" component={InviteNoAuth} />\n          <Route path=\"/feedback\" component={EventFeedback} />\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\n          <Route path=\"/reset-password\" component={ResetPasswordNoAuth} />\n      </Switch> \n  </main>\n  );\n}\n\n\nconst Register = () => <Auth isRegister={true}/>;\nconst Login = () => <Auth isRegister={false}/>;\nconst ResetPasswordNoAuth = () => <ResetPassword isAuthenticated={false}/>;\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport ReactGA from 'react-ga';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\nReactGA.initialize('UA-189701909-1');\n\nReactDOM.render(\n  <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter> \n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}