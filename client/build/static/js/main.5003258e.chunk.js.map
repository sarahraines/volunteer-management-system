{"version":3,"sources":["assets/login.svg","assets/register.svg","assets/landing.svg","assets/volunteersense.png","reducers.js","api/axiosApi.js","api/authenticationApi.js","actionCreators.js","pages/Home/Home.jsx","utils/googleAnalytics.js","forms/AuthForm.jsx","pages/Auth.jsx","pages/Home/utils.js","pages/Home/Nav3.jsx","pages/Home/Banner5.jsx","pages/Home/Feature0.jsx","pages/Home/Footer2.jsx","pages/Home/data.source.js","components/Sidebar.jsx","forms/NewOrgForm.jsx","pages/NewOrg.jsx","forms/ProfileForm.jsx","pages/ProfileSettings.jsx","forms/ResetPasswordForm.jsx","pages/SecuritySettings.jsx","forms/UserNotificationsForm.jsx","pages/UserNotifications.jsx","pages/Settings.jsx","forms/NewEventForm.jsx","pages/NewEvent.jsx","components/QAndA.jsx","pages/QAndAPage.jsx","components/EventCard.jsx","pages/OrgEvents.jsx","pages/AboutUs.jsx","pages/MemberPage.jsx","pages/OrgFeedback.jsx","components/NonprofitFunnel.jsx","components/VolunteerLeaderboard.jsx","components/EventLeaderboardPlots.jsx","components/EventLeaderboard.jsx","components/VolunteerBreakdown.jsx","pages/Analytics.jsx","pages/InvitePage.jsx","components/StatusTag.jsx","pages/UserFilesTable.jsx","components/ClearanceUpload.jsx","pages/Clearances.jsx","pages/OrgClearanceTable.jsx","pages/ManageVolunteerClearances.jsx","pages/NewEmail.jsx","pages/Attendees.jsx","pages/OrgPage.jsx","components/VolunteerEventLeaderboard.jsx","components/NonprofitBreakdown.jsx","components/VolunteerSummary.jsx","components/VolunteerGoals.jsx","pages/VolunteerAnalytics.jsx","pages/VolunteerCalendarCard.jsx","pages/VolunteerCalendar.jsx","forms/NewGoalForm.jsx","pages/NewGoal.jsx","components/FeedContent.jsx","pages/Feed.jsx","forms/InviteAuthForm.jsx","pages/InviteAuth.jsx","pages/InviteNoAuth.jsx","pages/Activate.jsx","forms/EventFeedbackForm.jsx","pages/EventFeedback.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","rootReducer","combineReducers","alerts","state","action","type","concat","filter","alert","id","baseURL","process","accessToken","localStorage","getItem","axiosInstance","axios","create","timeout","headers","interceptors","response","use","a","error","originalRequest","config","status","url","window","location","href","Promise","reject","data","code","refresh_token","post","refresh","setItem","access","defaults","setNewHeaders","user_id","axiosRetry","retries","retryDelay","Math","random","retryCondition","isRetryableError","register","email","firstName","lastName","password","axiosAPI","first_name","last_name","registerFromInvite","invite_id","console","log","login","reset_password","old_password","new_password","addAlert","message","alert_type","shortid","generate","removeAlert","isMobile","makePageView","pageName","ReactGA","pageview","usePageView","useEffect","makeEvent","args","event","AuthForm","isRegister","history","useHistory","dispatch","useDispatch","onFinish","useCallback","values","category","push","submitButtonText","switchAuthPages","Fragment","to","name","className","initialValues","remember","Item","Group","compact","noStyle","rules","required","style","width","placeholder","hasFeedback","prefix","MailOutlined","min","LockOutlined","dependencies","getFieldValue","validator","rule","value","resolve","htmlType","Auth","title","logo","RegisterLogo","LoginLogo","useSelector","shallowEqual","onClose","setTimeout","alertList","map","key","banner","closable","height","Content","Title","level","src","alt","isImg","getChildrenToRender","item","i","tag","indexOf","children","match","React","createElement","Button","toString","Menu","SubMenu","Header3","props","phoneClick","phoneOpen","setState","undefined","this","dataSource","navChildren","subItem","itemProps","trim","popupClassName","$item","ii","childItem","child","moment","component","animation","opacity","wrapper","page","x","ease","mobileMenu","onClick","duration","onComplete","e","target","reverse","mode","defaultSelectedKeys","theme","Component","Banner5","tagProps","animType","queue","one","y","leaveReverse","childWrapper","componentProps","md","xs","image","PureComponent","titleWrapper","overPackData","OverPack","Row","block","blockProps","Footer2","links","copyright","Nav30DataSource","Banner50DataSource","LandingLogo","Feature00DataSource","playScale","Footer20DataSource","enquireScreen","b","Home","show","port","pathname","Nav3","Feature0","ref","d","dom","Divider","Sidebar","selectedKeys","setSelectedKeys","setFeedContext","member","onSelect","latestSelectedKey","onLogout","removeItem","organizationsList","organization","icon","BulbOutlined","UsergroupAddOutlined","PlusSquareOutlined","CheckSquareOutlined","CalendarOutlined","BarChartOutlined","SettingOutlined","LogoutOutlined","TextArea","Input","NewOrgForm","useState","selectedCauses","setSelectedCauses","causes","setCauses","getCauses","get","filteredCauses","useMemo","o","includes","description","website","phone","address","member_type","success","maxLength","onChange","Option","autoSize","row","NewOrg","Text","Typography","ProfileForm","user","isEditable","setIsEditable","setFirstName","setLastName","setEmail","textPlaceholder","fieldName","fieldValue","marginBottom","span","requiredMark","labelCol","labelAlign","label","transition","hidden","ProfileSettings","setUser","getUser","userId","maxWidth","active","loading","paragraph","rows","ResetPasswordForm","sendForgotPasswordEmail","paddingLeft","paddingRight","SecuritySettings","UserNotificationsForm","text","setText","phone_number","phoneNumber","setPhoneNumber","Form","useForm","form","setFieldsValue","checked","disabled","addonBefore","UserNotifications","TabPane","Tabs","Settings","defaultActiveKey","tab","RangePicker","DatePicker","NewEventForm","isLoading","setIsLoading","selectedOrgs","setSelectedOrgs","orgs","setOrgs","getOrgs","params","filteredOrgs","virtual","organizations","date","instructions","attendee_cap","attendeeCap","valuePropName","checkedChildren","unCheckedChildren","defaultChecked","showTime","format","NewEvent","Paragraph","QAndA","isAdmin","removeFaq","orgId","question","questionStr","setQuestionStr","answer","answerStr","setAnswerStr","is_public","isPublic","setIsPublic","updateQ","newQuestionStr","org_id","updateA","newAnswerStr","updatePublic","newIsPublic","onDelete","delete","marginTop","actions","DeleteOutlined","display","float","verticalAlign","fontWeight","marginLeft","flexGrow","editable","QAndAPage","qA","setQA","getQA","faq","addQAField","EventCard","setRegister","viewmore","setViewmore","event_id","errMsg","getRegisterStatus","onClickViewmore","buttonText","options","year","month","day","hour","minute","begindate","Date","enddate","joinButton","attendee_count","bordered","toLocaleString","color","substring","Select","OrgEvents","events","setEvents","filterDisplay","setFilterDisplay","getEventsByOrg","oldList","newList","toLowerCase","handleChange","defaultValue","virtualFilterChange","size","openFilterChange","flexWrap","justifyContent","overflowY","AboutUs","org","inputVisible","setInputVisible","inputValue","setInputValue","inputRef","useRef","getCausesByOrg","handleClose","removedTag","tags","cause","handleInputConfirm","newCauses","length","c","preventDefault","onBlur","onPressEnter","PlusOutlined","MemberPage","members","setMembers","setLoading","currentUser","getMembers","forEach","deleteMember","memberId","member_id","columns","dataIndex","render","_","record","parseInt","danger","onConfirm","okText","cancelText","OrgFeedback","info","setInfo","getFeedbackByOrg","sorter","event__name","localeCompare","username__email","filters","filterMultiple","onFilter","overall","satisfaction","likely","expectations","future","expandedRowRender","event__location","event__begindate","event__enddate","better","experience","NonprofitFunnel","layout","margin","l","VolunteerLeaderboard","defaultSortOrder","count","total","pagination","pageSize","event_list","EventLeaderboard","labels","ratings_arr","satisfactions_arr","likely_arr","expectations_arr","future_arr","attendees","EventLeaderboardPlots","VolunteerBreakdown","ellipsis","rowExpandable","Analytics","funnel","setFunnel","breakdown","setBreakdown","volunteers","setVolunteers","getFunnel","getBreakdown","getVolunteers","getEvents","InvitePage","invites","setInvites","showModal","setShowModal","modalButtonLoading","setModalButtonLoading","invitedMembers","setInvitedMembers","memberType","setMemberType","getInvites","invite","inviteMembers","emails","deleteInvite","inviteId","justify","visible","onOk","onCancel","footer","tokenSeparators","allowClear","statusMap","Complete","Rejected","Pending","None","StatusTag","UserFilesTable","fileList","userFileList","setUserFileList","getUserFiles","files","formattedFiles","file","uid","orgFormId","org_file","comment","listType","fl","filled_form","split","slice","_text","_record","customRequest","formData","FormData","append","onSuccess","UploadOutlined","getUserFileForOrgFile","infoType","oFormId","ufile","ClearanceUpload","eId","setFileList","getOrgFiles","eventId","eventName","orgProps","empty_form","Clearances","bdate","edate","OrgClearanceTable","setRows","result","user__email","index","acceptOrReject","buttonStyle","addComment","ManageVolunteerClearances","NewEmail","checkedList","setCheckedList","_selectedRowKeys","selectedRows","subject","body","membersList","rowSelection","Attendees","setAttendees","getAttendees","events__name","events__location","events__begindate","events__enddate","OrgPage","setOrg","activeKey","setActiveKey","textAlign","VolunteerEventLeaderboard","NonprofitBreakdown","hours","VolunteerSummary","nonprofits_list","events_list","VolunteerGoals","percent","progress","VolunteerAnalytics","monthlyHours","setMonthlyHours","summary","setSummary","goals","setGoals","nonprofits","setNonprofits","getMonthlyHours","getSummary","getGoals","getNonprofits","marker","col","xaxis","yaxis","grid","pattern","showlegend","VolunteerCalendarCard","vis","setVisible","attendeeCount","setAttendeeCount","toggleVisible","events__id","events__virtual","content","events__description","events__instructions","events__attendee_cap","trigger","VolunteerCalendar","getVolunteerEvents","align","dateCellRender","listData","getMonth","getDate","getFullYear","getListData","monthCellRender","monthData","getMonthData","NewGoalForm","NewGoal","FeedContent","context","isNaN","orgMember","m","Layout","Sider","Feed","setContext","setMember","getMember","minHeight","background","newContext","padding","flexDirection","InviteAuthForm","InviteAuth","acceptInvite","declineInvite","AuthState","InviteNoAuth","loadingState","setLoadingState","setInvite","validate","queryString","search","token","antIcon","LoadingOutlined","fontSize","spin","subTitle","extra","indicator","Activate","activate","EventFeedbackForm","URLSearchParams","getInfo","attendee_id","yn_options","date_options","username__first_name","username__last_name","events__organizations__name","optionType","EventFeedback","Register","Login","App","document","exact","path","Boolean","hostname","store","createStore","initialize","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,sFCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,wbCiB5BC,EAJKC,YAAgB,CAChCC,OAZW,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACnC,OAAQA,EAAOC,MACX,IAAK,YACD,OAAOF,EAAMG,OAAO,CAACF,IACzB,IAAK,eACD,OAAOD,EAAMI,QAAO,SAAAC,GAAK,OAAIA,EAAMC,KAAOL,EAAOK,MACrD,QACI,OAAON,M,qFCNbO,EAAO,UAAMC,GAAN,SACPC,EAAcC,aAAaC,QAAQ,gBAEnCC,EAAgBC,IAAMC,OAAO,CAC/BP,QAASA,EACTQ,QAAS,IACTC,QAAS,CACL,cAAiB,OAASP,EAC1B,eAAgB,mBAChB,OAAU,sBAIlBG,EAAcK,aAAaC,SAASC,KAChC,SAAAD,GAAQ,OAAIA,IADhB,+BAAAE,EAAA,MAEI,WAAMC,GAAN,mBAAAD,EAAA,yDACQE,EAAkBD,EAAME,QAE5BF,EAAMH,UAAsC,MAA1BG,EAAMH,SAASM,QAAkBF,EAAgBG,MAAQb,EAAcL,QAAQ,iBAHrG,uBAIImB,OAAOC,SAASC,KAAO,UAJ3B,kBAKWC,QAAQC,OAAOT,IAL1B,WAQIA,EAAMH,UAAsC,MAA1BG,EAAMH,SAASM,QAA+C,oBAA7BH,EAAMH,SAASa,KAAKC,KAR3E,wBASUC,EAAgBvB,aAAaC,QAAQ,iBAT/C,kBAY+BC,EAClBsB,KAAK,kBAAmB,CAAEC,QAASF,IAbhD,cAYcf,EAZd,OAcQR,aAAa0B,QAAQ,eAAgBlB,EAASa,KAAKM,QACnD3B,aAAa0B,QAAQ,gBAAiBlB,EAASa,KAAKI,SAEpDvB,EAAc0B,SAAStB,QAAvB,cAAkD,OAASE,EAASa,KAAKM,OACzEf,EAAgBN,QAAhB,cAA2C,OAASE,EAASa,KAAKM,OAlB1E,kBAmBezB,EAAcU,IAnB7B,yCAqBQI,OAAOC,SAASC,KAAO,UArB/B,kBAsBeC,QAAQC,OAAOT,IAtB9B,iCAyBSQ,QAAQC,OAAOT,IAzBxB,0DAFJ,uDA2CO,SAASkB,EAAcrB,GAC1BN,EAAc0B,SAAStB,QAAvB,cAAkD,OAASE,EAASa,KAAKM,OACzE3B,aAAa0B,QAAQ,eAAgBlB,EAASa,KAAKM,QACnD3B,aAAa0B,QAAQ,gBAAiBlB,EAASa,KAAKI,SACpDzB,aAAa0B,QAAQ,UAAWlB,EAASa,KAAKS,SAVlDC,IAAW7B,EAAe,CACtB8B,QAAS,EACTC,WARe,WAGf,OAFa,IACM,IAAOC,KAAKC,UAO/BC,eAAgBL,IAAWM,mBAUhBnC,QChER,SAAeoC,EAAtB,wC,4CAAO,WAAwBC,EAAOC,EAAWC,EAAUC,GAApD,eAAAhC,EAAA,sEACkBiC,EAASnB,KAAK,gBAAiB,CACpDe,QACAK,WAAYJ,EACZK,UAAWJ,EACXC,aALG,cACClC,EADD,OAOLR,aAAa0B,QAAQ,OAAQlB,EAASa,MAPjC,kBAQEb,GARF,4C,sBAWA,SAAesC,EAAtB,0C,4CAAO,WAAkCP,EAAOC,EAAWC,EAAUC,EAAUK,GAAxE,eAAArC,EAAA,6DACLsC,QAAQC,IAAIV,GACZS,QAAQC,IAAIF,GAFP,SAGkBJ,EAASnB,KAAK,4BAA6B,CAChEe,QACAK,WAAYJ,EACZK,UAAWJ,EACXC,WACAK,cARG,cAGCvC,EAHD,OAULR,aAAa0B,QAAQ,OAAQlB,EAASa,MAVjC,kBAWEb,GAXF,4C,sBAcA,SAAe0C,EAAtB,oC,4CAAO,WAAqBX,EAAOG,GAA5B,eAAAhC,EAAA,sEACkBiC,EAASnB,KAAK,gBAAiB,CACpDe,QACAG,aAHG,cACClC,EADD,OAKLR,aAAa0B,QAAQ,QAASa,GAC9BV,EAAcrB,GANT,kBAOEA,GAPF,4C,sBAUA,SAAe2C,EAAtB,oC,4CAAO,WAA8BC,EAAcC,GAA5C,iBAAA3C,EAAA,6DACCoB,EAAU9B,aAAaC,QAAQ,WADhC,SAEkB0C,EAASnB,KAAK,wBAAyB,CAC5DM,UACAsB,eACAC,iBALG,cAEC7C,EAFD,yBAOEA,GAPF,4C,sBAgBA,I,0GCnDA,SAAS8C,EAASC,EAASC,GAC9B,MAAO,CACLhE,KAAM,YACNI,GAAI6D,IAAQC,WACZH,UACAC,cAIG,SAASG,EAAY/D,GAC1B,MAAO,CACLJ,KAAM,eACNI,M,ICKFgE,E,SChBSC,EAAe,SAACC,GAAD,OAC3BC,IAAQC,SAASF,IAEJG,EAAc,SAAAH,GAAQ,OAChCI,qBAAU,WACNL,EAAaC,KACd,CAACA,KAEKK,EAAY,SAACC,GAAD,OAAUL,IAAQM,MAAMD,ICiIlCE,G,aAhIE,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACTC,EAAUC,cACVC,EAAWC,cAEXC,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,SAAApE,EAAA,mEAEjB6D,EAFiB,gCAGXjC,EAASwC,EAAOvC,MAAOuC,EAAOlC,WAAYkC,EAAOjC,UAAWiC,EAAOpC,UAHxD,OAIjByB,EAAU,CACNY,SAAU,OACVxF,OAAQ,yBAEZmF,EAASpB,EAAS,6DAA8D,YAR/D,wCAUXJ,EAAM4B,EAAOvC,MAAOuC,EAAOpC,UAVhB,QAWjB8B,EAAQQ,KAAK,KAXI,0DAcjBT,GACAJ,EAAU,CACNY,SAAU,OACVxF,OAAQ,sBAEZmF,EAASpB,EAAS,qFAAsF,WAExGC,IAAQ5C,MAAM,iDArBG,0DAAD,sDAwBzB,CAAC4D,EAAYC,IAEVS,EAAmBV,EAAa,iBAAmB,SACnDW,EAAkBX,EACpB,kBAAC,IAAMY,SAAP,iCAC6B,kBAAC,IAAD,CAAMC,GAAG,UAAT,WAG7B,kBAAC,IAAMD,SAAP,kBACc,kBAAC,IAAD,CAAMC,GAAG,aAAT,mBAIpB,OACE,kBAAC,IAAMD,SAAP,KACI,kBAAC,IAAD,CACIE,KAAK,OACLC,UAAU,YACVC,cAAe,CAAEC,UAAU,GAC3BZ,SAAUA,GAJd,MAKKL,GACG,kBAAC,IAAKkB,KAAN,KACI,kBAAC,IAAMC,MAAP,CAAaC,SAAO,GAChB,kBAAC,IAAKF,KAAN,CACIJ,KAAK,aACLO,SAAO,EACPC,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,4BAEnC,kBAAC,IAAD,CAAOwC,MAAO,CAAEC,MAAO,OAASC,YAAY,gBAEhD,kBAAC,IAAKR,KAAN,CACIJ,KAAK,YACLO,SAAO,EACPC,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,2BAEnC,kBAAC,IAAD,CAAOwC,MAAO,CAAEC,MAAO,OAASC,YAAY,iBAK5D,kBAAC,IAAKR,KAAN,CACIJ,KAAK,QACLa,aAAW,EACXL,MAAO,CACH,CAAEC,UAAU,EAAMvC,QAAS,8BAC3B,CAAE/D,KAAM,QAAS+D,QAAS,wBAG9B,kBAAC,IAAD,CAAO4C,OAAQ,kBAACC,EAAA,EAAD,CAAcd,UAAU,wBAA0BW,YAAY,WAEjF,kBAAC,IAAKR,KAAN,CACIJ,KAAK,WACLa,YAAa3B,EACbsB,MAAK,CACD,CAAEC,UAAU,EAAMvC,QAAS,kCAD1B,mBAEEgB,EAAa,CAAC,CAAE8B,IAAK,GAAI9C,QAAS,kDAAoD,MAG7F,kBAAC,IAAD,CACI4C,OAAQ,kBAACG,EAAA,EAAD,CAAchB,UAAU,wBAChC9F,KAAK,WACLyG,YAAY,cAGnB1B,GACG,kBAAC,IAAKkB,KAAN,CACIJ,KAAK,UACLkB,aAAc,CAAC,YACfL,aAAW,EACXL,MAAO,CACH,CAAEC,UAAU,EAAMvC,QAAS,iCAC3B,gBAAGiD,EAAH,EAAGA,cAAH,MAAwB,CACpBC,UADoB,SACVC,EAAMC,GACZ,OAAKA,GAASH,EAAc,cAAgBG,EAGrCxF,QAAQC,OAAO,2BAFfD,QAAQyF,eAO3B,kBAAC,IAAD,CACIT,OAAQ,kBAACG,EAAA,EAAD,CAAchB,UAAU,wBAChC9F,KAAK,WACLyG,YAAY,sBAIxB,kBAAC,IAAKR,KAAN,KACI,kBAAC,IAAD,CAAQjG,KAAK,UAAUqH,SAAS,SAASvB,UAAU,oBAC9CL,GAEJC,GACCX,GAAc,kBAAC,IAAD,CAAMe,UAAU,mBAAmBF,GAAG,aAAtC,yB,uCClFjB0B,I,OAzCF,SAAC,GAAkB,IAAjBvC,EAAgB,EAAhBA,WACPwC,EAAQxC,EAAa,iBAAmB,SACxCyC,EAAOzC,EAAa0C,KAAcC,IAClC7H,EAAS8H,aAAY,SAAA7H,GAAK,OAAIA,EAAMD,SAAQ+H,KAC5C1C,EAAWC,cACjBV,EAAYM,EAAa,YAAc,UAEvC,IAAM8C,EAAUxC,uBAAY,SAACjF,GAC3B0H,YAAW,kBAAM5C,EAASf,EAAY/D,MAAM,OAC3C,CAAC8E,IAEE6C,EAAYlI,EAAOmI,KAAI,SAAA7H,GAAK,OAChC,kBAAC,IAAD,CACE8H,IAAK9H,EAAMC,GACXJ,KAAMG,EAAM6D,WACZD,QAAS5D,EAAM4D,QACfmE,QAAM,EACNC,UAAQ,EACRN,QAAS,kBAAMA,EAAQ1H,EAAMC,UAIjC,OACE,kBAAC,IAAD,CAAQmG,MAAO,CAAE6B,OAAQ,UACtBL,EACC,kBAAC,IAAOM,QAAR,CAAgBvC,UAAU,gBACtB,yBAAKA,UAAU,kBACX,kBAAC,IAAWwC,MAAZ,CAAkBC,MAAO,GAAIhB,GAC7B,yBACIzB,UAAU,YACV0C,IAAKhB,EACLiB,IAAKlB,EAAQ,UAEjB,kBAAC,EAAD,CAAUxC,WAAYA,S,oFCvCzB2D,GAAQ,mDACRC,GAAsB,SAACC,EAAMC,GACxC,IAAIC,EAAqC,IAA/BF,EAAK/C,KAAKkD,QAAQ,SAAiB,KAAO,MACpDD,EAAMF,EAAKlH,KAAO,IAAMoH,EACxB,IAAIE,EAAoC,kBAAlBJ,EAAKI,UAAyBJ,EAAKI,SAASC,MAAMP,IACpEQ,IAAMC,cAAc,MAAO,CAAEX,IAAKI,EAAKI,SAAUP,IAAK,QACtDG,EAAKI,SAMT,OALoC,IAAhCJ,EAAK/C,KAAKkD,QAAQ,WAA4C,kBAAlBH,EAAKI,WACnDA,EAAWE,IAAMC,cAAcC,IAApB,gBACNR,EAAKI,YAGLE,IAAMC,cAAcL,EAApB,cAA2Bb,IAAKY,EAAEQ,YAAeT,GAAQI,ICX1D/C,GAAkBqD,KAAlBrD,KAAMsD,GAAYD,KAAZC,QAkICC,G,oDA/Hb,WAAYC,GAAQ,IAAD,+BACjB,cAAMA,IAMRC,WAAa,WACX,IAAMC,GAAa,EAAK7J,MAAM6J,UAC9B,EAAKC,SAAS,CACZD,eARF,EAAK7J,MAAQ,CACX6J,eAAWE,GAHI,E,2CAcnB,WAAU,IAAD,SACoCC,KAAKL,MAAxCM,EADD,EACCA,WAAY3F,EADb,EACaA,SAAaqF,EAD1B,0CAECE,EAAcG,KAAKhK,MAAnB6J,UAEFK,EADUD,EAAWT,KAAKN,SACJhB,KAAI,SAACY,GAAU,IACvB1H,EAA6B0H,EAAvCI,SAAaiB,EAA0BrB,EAA1BqB,QAAYC,EADO,aACOtB,EADP,wBAExC,OAAIqB,EAEA,kBAACV,GAAD,eACEtB,IAAKW,EAAK/C,MACNqE,EAFN,CAGE3C,MACE,yCACMrG,EADN,CAEE4E,UAAW,6BAAsB5E,EAAE4E,WAAYqE,SAE9CjJ,EAAE8H,SAAShB,IAAIW,KAGpByB,eAAe,uBAEdH,EAAQjC,KAAI,SAACqC,EAAOC,GAAQ,IACTC,EAAcF,EAAxBrB,SACFwB,EAAQD,EAAU7I,KACtB,sBAAO6I,EACJA,EAAUvB,SAAShB,IAAIW,KAG1B,wBAAS4B,EACNA,EAAUvB,SAAShB,IAAIW,KAG5B,OACE,kBAAC1C,GAAD,eAAMgC,IAAKoC,EAAMxE,MAAQyE,EAAGjB,YAAgBgB,GACzCG,OAQX,kBAACvE,GAAD,eAAMgC,IAAKW,EAAK/C,MAAUqE,GACxB,uCAAOhJ,EAAP,CAAU4E,UAAW,6BAAsB5E,EAAE4E,WAAYqE,SACtDjJ,EAAE8H,SAAShB,IAAIW,SAKlB8B,OAAuBZ,IAAdF,EAA0B,IAAM,KAC/C,OACE,kBAAC,KAAD,eACEe,UAAU,SACVC,UAAW,CAAEC,QAAS,EAAG5K,KAAM,SAC3B+J,EAAWc,QACXpB,GAEJ,yCACMM,EAAWe,KADjB,CAEEhF,UAAS,UAAKiE,EAAWe,KAAKhF,WAArB,OAAiC6D,EAAY,QAAU,MAEhE,kBAAC,KAAD,eACEgB,UAAW,CAAEI,GAAI,GAAI/K,KAAM,OAAQgL,KAAM,gBACrCjB,EAAWvC,MAEf,yBAAKhB,MAAM,OAAOgC,IAAKuB,EAAWvC,KAAKwB,SAAUP,IAAI,SAEtDrE,GACC,yCACM2F,EAAWkB,WADjB,CAEEC,QAAS,WACP,EAAKxB,gBAGP,6BACA,6BACA,8BAGJ,kBAAC,KAAD,iBACMK,EAAWT,KADjB,CAEEqB,UACEvG,EACI,CACE2G,EAAG,EACH3C,OAAQ,EACR+C,SAAU,IACVC,WAAY,SAACC,GACP,EAAKvL,MAAM6J,YACb0B,EAAEC,OAAO/E,MAAM6B,OAAS,SAG5B4C,KAAM,iBAER,KAENP,OAAQA,EACRc,UAAW5B,IAEX,kBAAC,KAAD,CACE6B,KAAMpH,EAAW,SAAW,aAC5BqH,oBAAqB,CAAC,QACtBC,MAAM,SAEL1B,U,GAvHOd,IAAMyC,W,UCqCbC,G,gKAtCb,WAAU,IACGC,EADJ,iBACiB/B,KAAKL,OACrBM,EAAe8B,EAAf9B,kBACD8B,EAAS9B,kBACT8B,EAASzH,SAChB,IAAM0H,EAAW,CACfC,MAAO,SACPC,IAAK,CACHC,EAAG,OACHrB,QAAS,EACT5K,KAAM,OACNgL,KAAM,gBAGV,OACE,yCAASa,EAAc9B,EAAWc,SAChC,wBAASd,EAAWe,KAClB,kBAAC,KAAD,eACE7C,IAAI,OACJjI,KAAM8L,EAASC,MACfG,cAAY,EACZlB,KAAM,CAAC,cAAe,eAClBjB,EAAWoC,aALjB,CAMEC,eAAgB,CACdC,GAAItC,EAAWoC,aAAaE,GAC5BC,GAAIvC,EAAWoC,aAAaG,MAG7BvC,EAAWoC,aAAanD,SAAShB,IAAIW,KAExC,kBAAC,KAAD,eAAUgC,UAAWmB,EAASE,IAAK/D,IAAI,SAAY8B,EAAWwC,OAC5D,yBAAK/D,IAAKuB,EAAWwC,MAAMvD,SAAUxC,MAAM,OAAOiC,IAAI,e,GAhC5CS,IAAMsD,e,wCC2CbnE,G,gKAzCb,WAAU,IAAD,EACoCyB,KAAKL,MAAxCM,EADD,EACCA,WAAyBN,GAD1B,EACarF,SADb,2CAGLyG,EAKEd,EALFc,QACA4B,EAIE1C,EAJF0C,aACA3B,EAGEf,EAHFe,KACU4B,EAER3C,EAFF4C,SACAR,EACEpC,EADFoC,aAEF,OACE,yCAAS1C,EAAWoB,GAClB,wBAASC,EACP,wBAAS2B,EACNA,EAAazD,SAAShB,IAAIW,KAE7B,kBAAC,KAAa+D,EACZ,kBAAC,KAAD,CACE1M,KAAK,SACLiI,IAAI,QACJiE,cAAY,EACZxB,UAAWkC,KACXR,eAAgBD,GAEfA,EAAanD,SAAShB,KAAI,SAAC6E,EAAOhE,GAAO,IACtBD,EAAwBiE,EAAlC7D,SAAmB8D,EADY,aACGD,EADH,cAEvC,OACE,kBAAC,KAAD,eAAK5E,IAAKY,EAAEQ,YAAgByD,GAC1B,wBAASlE,EACNA,EAAKI,SAAShB,IAAIW,iB,GA7BnBO,IAAMsD,eCyCbO,G,gKAzCb,WAAU,IACGtD,EADJ,iBACcK,KAAKL,OAClBM,EAAeN,EAAfM,WAGR,cAFON,EAAMM,kBACNN,EAAMrF,SAEX,yCAASqF,EAAWM,EAAWc,SAC7B,kBAAC,KAAad,EAAW4C,SACvB,kBAAC,KAAa5C,EAAWiD,MACtBjD,EAAWiD,MAAMhE,SAAShB,KAAI,SAACY,EAAMC,GACpC,OACE,qCAAGZ,IAAKY,EAAEQ,YAAgBT,GACxB,yBAAKJ,IAAKI,EAAKI,SAAUZ,OAAO,OAAOK,IAAI,aAKnD,kBAAC,KAAD,eACEkC,UAAW,CAAEI,EAAG,OAAQH,QAAS,EAAG5K,KAAM,QAC1CiI,IAAI,aACA8B,EAAWkD,WAEdlD,EAAWkD,UAAUjE,SAAShB,KAAI,SAACY,EAAMC,GAAP,OACjCK,IAAMC,cAC2B,IAA/BP,EAAK/C,KAAKkD,QAAQ,SAAiB,KAAO,MAD5C,cAEId,IAAKY,EAAEQ,YAAeT,GACC,kBAAlBA,EAAKI,UAAyBJ,EAAKI,SAASC,MAAMP,IACrDQ,IAAMC,cAAc,MAAO,CACzBX,IAAKI,EAAKI,SACVP,IAAK,QAEPG,EAAKI,oB,GAhCHE,IAAMsD,e,+BCFfU,GAAkB,CAC7BrC,QAAS,CAAE/E,UAAW,oDACtBgF,KAAM,CAAEhF,UAAW,aACnB0B,KAAM,CACJ1B,UAAW,sCACXkD,S,QAAUxB,GAEZ8B,KAAM,CACJxD,UAAW,eACXkD,SAAU,CACR,CACEnD,KAAM,QACNC,UAAW,eACXkD,SAAU,CACRtH,KAAM,SACNsH,SAAU,CAAC,CAAEA,SAAU,qCAAenD,KAAM,WAGhD,CACEA,KAAM,QACNC,UAAW,eACXkD,SAAU,CACRtH,KAAM,YACNsH,SAAU,CAAC,CAAEA,SAAU,uCAAiBnD,KAAM,aAKtDoF,WAAY,CAAEnF,UAAW,wBAEdqH,GAAqB,CAChCtC,QAAS,CAAE/E,UAAW,6BACtBgF,KAAM,CAAEhF,UAAW,0BACnBqG,aAAc,CACZrG,UAAW,wBACXkD,SAAU,CACR,CAAEnD,KAAM,QAASmD,SAAU,+BAAgClD,UAAW,iBACtE,CACED,KAAM,UACNC,UAAW,kBACXkD,SAAU,yEAEZ,CACEnD,KAAM,SACNC,UAAW,yBACXkD,SAAU,CACRtH,KAAM,cACNoE,UAAW,iBACX9F,KAAM,UACNgJ,SAAU,iBAKlBuD,MAAO,CACLzG,UAAW,gBACXkD,SAAUoE,OAGDC,GAAsB,CACjCxC,QAAS,CAAE/E,UAAW,sCACtBgF,KAAM,CAAEhF,UAAW,sBACnB6G,SAAU,CAAEW,UAAW,GAAKxH,UAAW,IACvC2G,aAAc,CACZ3G,UAAW,gBACXkD,SAAU,CACR,CAAEnD,KAAM,QAASmD,SAAU,wBAC3B,CAAEnD,KAAM,UAAWmD,SAAU,sDAGjCmD,aAAc,CACZrG,UAAW,yBACXkD,SAAU,CACR,CACEnD,KAAM,SACNC,UAAW,iBACXuG,GAAI,EACJC,GAAI,GACJtD,SAAU,CACRlD,UAAW,sBACXkD,SAAU,CACR,CACEnD,KAAM,QACNC,UAAW,sBACXkD,SACE,oEAEJ,CACEnD,KAAM,QACNC,UAAW,uBACXkD,SAAU,WAEZ,CAAEnD,KAAM,UAAWmD,SAAU,6FAInC,CACEnD,KAAM,SACNC,UAAW,iBACXuG,GAAI,EACJC,GAAI,GACJtD,SAAU,CACRlD,UAAW,sBACXkD,SAAU,CACR,CACEnD,KAAM,QACNC,UAAW,sBACXkD,SACE,oEAEJ,CACEnD,KAAM,QACNC,UAAW,uBACXkD,SAAU,UAEZ,CACEnD,KAAM,UACNmD,SAAU,oEAKlB,CACEnD,KAAM,SACNC,UAAW,iBACXuG,GAAI,EACJC,GAAI,GACJtD,SAAU,CACRlD,UAAW,sBACXkD,SAAU,CACR,CACEnD,KAAM,QACNC,UAAW,sBACXkD,SACE,oEAEJ,CACEnD,KAAM,QACNC,UAAW,uBACXkD,SAAU,UAEZ,CACEnD,KAAM,UACNmD,SAAU,kFAQXuE,GAAqB,CAChC1C,QAAS,CAAE/E,UAAW,qCACtB6G,SAAU,CAAE7G,UAAW,oBAAqBwH,UAAW,KACvDL,UAAW,CACTnH,UAAW,YACXkD,SAAU,CACR,CACEnD,KAAM,YACNmD,SAAU,gCACVlD,UAAW,oBAIjBkH,MAAO,CACLlH,UAAW,QACXkD,SAAU,K,OTrJdwE,0BAAc,SAACC,GACbrJ,EAAWqJ,K,QAG+B,qBAAXjM,OAAyBA,OAAS,IAA3DC,iB,OAAW,G,GAEEiM,G,oDACnB,WAAYjE,GAAQ,IAAD,+BACjB,cAAMA,IACD3J,MAAQ,CACXsE,WACAuJ,MAAOlM,GAASmM,MAJD,E,sDAQnB,WAAqB,IAAD,OAClBrJ,IAAQC,SAAShD,OAAOC,SAASoM,SAAW,QAC5CL,0BAAc,SAACC,GACb,EAAK7D,SAAS,CAAExF,WAAYqJ,OAI1BhM,GAASmM,MAEX9F,YAAW,WACT,EAAK8B,SAAS,CACZ+D,MAAM,MAEP,O,oBAKP,WAAU,IAAD,OACD3E,EAAW,CACf,kBAAC8E,GAAD,CACE1N,GAAG,SACH6H,IAAI,SACJ8B,WAAYmD,GACZ9I,SAAU0F,KAAKhK,MAAMsE,WAEvB,kBAAC,GAAD,CACEhE,GAAG,YACH6H,IAAI,YACJ8B,WAAYoD,GACZ/I,SAAU0F,KAAKhK,MAAMsE,WAEvB,kBAAC2J,GAAD,CACE3N,GAAG,aACH6H,IAAI,aACJ8B,WAAYsD,GACZjJ,SAAU0F,KAAKhK,MAAMsE,WAEvB,kBAAC,GAAD,CACEhE,GAAG,YACH6H,IAAI,YACJ8B,WAAYwD,GACZnJ,SAAU0F,KAAKhK,MAAMsE,YAGzB,OACE,yBACE0B,UAAU,oBACVkI,IAAK,SAACC,GACJ,EAAKC,IAAMD,IAIZnE,KAAKhK,MAAM6N,MAAQ3E,O,GA9DME,IAAMyC,W,wFUlBhCwC,I,OAA2B7E,KAA3B6E,SAASlI,GAAkBqD,KAAlBrD,KAAMsD,GAAYD,KAAZC,QAkFR6E,GAhFC,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,aAAcC,EAA8C,EAA9CA,gBAAiBC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OACvDxJ,EAAUC,cACVwJ,EAAW,SAACC,GACdJ,EAAgB,CAACI,EAAkBzG,OAGjC0G,EAAWtJ,sBAAW,sBAAC,sBAAAnE,EAAA,sEACnBiC,EAASnB,KAAK,mBAAoB,CACpCD,cAAevB,aAAaC,QAAQ,mBAFf,OZgC/BD,aAAaoO,WAAW,gBACxBpO,aAAaoO,WAAW,iBACxBpO,aAAaoO,WAAW,WACxBzL,EAASf,SAAStB,QAAlB,cAA6C,KY9BvCkE,EAAQQ,KAAK,UALY,2CAM1B,CAACR,IAEJN,qBAAU,WAAO,IAAD,EACZ6J,EAAc,UAACF,EAAa,UAAd,QAAoB,MACnC,CAACA,EAAcE,IAGlB,IAAMM,EACRL,EAAOxG,KAAI,SAAAwG,GAAM,eAChB,kBAAC,GAAD,CAAMvG,IAAG,OAAEuG,QAAF,IAAEA,GAAF,UAAEA,EAAQM,oBAAV,aAAE,EAAsB1O,IAAjC,OACcoO,QADd,IACcA,GADd,UACcA,EAAQM,oBADtB,aACc,EAAsBjJ,SAKnC,OACI,yBAAKC,UAAU,kBACX,kBAAC,KAAD,CACI0F,KAAK,SACLE,MAAM,OACN2C,aAAcA,EACdI,SAAUA,GAEV,kBAAC,GAAD,CAASlH,MAAM,cAAcwH,KAAM,kBAACC,GAAA,EAAD,OAC/B,kBAAC,GAAD,CAAMlJ,UAAU,sBAAsBmC,IAAI,aAAa8G,KAAM,kBAACE,GAAA,EAAD,OAA7D,0BAGA,kBAAC,GAAD,CAAMnJ,UAAU,sBAAsBmC,IAAI,eAAe8G,KAAM,kBAACG,GAAA,EAAD,OAA/D,gBAGA,kBAAC,GAAD,CAAMpJ,UAAU,sBAAsBmC,IAAI,YAAY8G,KAAM,kBAACI,GAAA,EAAD,OAA5D,aAGA,kBAAC,GAAD,CAAMrJ,UAAU,sBAAsBmC,IAAI,WAAW8G,KAAM,kBAACK,GAAA,EAAD,OAA3D,kBAGA,kBAAC,GAAD,CAAMtJ,UAAU,sBAAsBmC,IAAI,iBAAiB8G,KAAM,kBAACM,GAAA,EAAD,OAAjE,sBAIJ,kBAAClB,GAAD,OAEJ,kBAAC,KAAD,CACI3C,KAAK,SACLE,MAAM,OACN2C,aAAcA,EACdI,SAAUA,GAETI,GAEL,kBAAC,KAAD,CACIrD,KAAK,SACLE,MAAM,OACN2C,aAAcA,EACdI,SAAUA,GAEV,kBAACN,GAAD,MACA,kBAAC,GAAD,CAAMlG,IAAI,WAAW8G,KAAM,kBAACO,GAAA,EAAD,OAA3B,wBAGA,kBAAC,GAAD,CAAMrH,IAAI,SAAS8G,KAAM,kBAACQ,GAAA,EAAD,MAAoBrE,QAASyD,GAAtD,a,UC5ERa,I,OAAaC,IAAbD,UAuHOE,GArHI,WAAO,IAAD,EACuBC,mBAAS,IADhC,oBACdC,EADc,KACEC,EADF,OAEOF,mBAAS,IAFhB,oBAEdG,EAFc,KAENC,EAFM,KAIfC,EAAY3K,sBAAW,sBAAC,4BAAAnE,EAAA,+EAECiC,EAAS8M,IAAI,eAFd,OAEhBjP,EAFgB,OAGtB+O,EAAU/O,EAASa,MAHG,gDAKtB2B,QAAQrC,MAAR,MALsB,yDAO3B,CAAC4O,IAEJrL,qBAAU,WACNsL,MACD,CAACA,IAEJ,IAAME,EAAiBC,mBAAQ,WAC3B,OAAOL,EAAO5P,QAAO,SAAAkQ,GAAC,OAAKR,EAAeS,SAASD,QACpD,CAACR,EAAgBE,IAEd1K,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,SAAApE,EAAA,+EAEfiC,EAASnB,KAAK,uBAAwB,CACxC6D,KAAMP,EAAOO,KACbiK,OAAQxK,EAAOwK,OACfQ,YAAahL,EAAOgL,YACpBC,QAASjL,EAAOiL,QAChBC,MAAOlL,EAAOkL,MACdC,QAASnL,EAAOmL,QAChB1N,MAAOuC,EAAOvC,QATG,uBAWfI,EAASnB,KAAK,iBAAkB,CAClCM,QAAS9B,aAAaC,QAAQ,WAC9BqO,aAAcxJ,EAAOO,KACrB6K,YAAa,EACbpP,OAAQ,IAfS,OAiBrByC,IAAQ4M,QAAQ,wBAjBK,gDAoBrB5M,IAAQ5C,MAAM,gCApBO,yDAAD,sDAsBzB,IAEH,OACI,kBAAC,IAAD,CACI0E,KAAK,MACLC,UAAU,WACVC,cAAe,CAAEC,UAAU,GAC3BZ,SAAUA,GAEV,kBAAC,IAAKa,KAAN,CACIJ,KAAK,OACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,oCAEnC,kBAAC,IAAD,CAAOwC,MAAO,CAAEC,MAAO,QAAUC,YAAY,oBAAoBmK,UAAW,OAEhF,kBAAC,IAAK3K,KAAN,CACIJ,KAAK,SACLa,aAAW,GAEX,kBAAC,KAAD,CACI8E,KAAK,WACL/E,YAAY,sBACZU,MAAOyI,EACPiB,SAAUhB,GAGbK,EAAelI,KAAI,SAAAY,GAAI,OACpB,kBAAC,KAAOkI,OAAR,CAAe7I,IAAKW,EAAKxI,GAAI+G,MAAOyB,EAAKxI,IACpCwI,EAAK/C,WAKlB,kBAAC,IAAKI,KAAN,CACIJ,KAAK,WAEL,kBAAC,IAAD,CAAOU,MAAO,CAAEC,MAAO,QAAUC,YAAY,aAEjD,kBAAC,IAAKR,KAAN,CACIJ,KAAK,SAEL,kBAAC,IAAD,CAAOU,MAAO,CAAEC,MAAO,QAAUC,YAAY,eAEjD,kBAAC,IAAKR,KAAN,CACIJ,KAAK,QACLa,aAAW,EACXL,MAAO,CACH,CAAErG,KAAM,QAAS+D,QAAS,wBAG9B,kBAAC,IAAD,CAAO0C,YAAY,WAEvB,kBAAC,IAAKR,KAAN,CACIJ,KAAK,WAEL,kBAAC2J,GAAD,CAAUjJ,MAAO,CAAEC,MAAO,QAAUC,YAAY,iBAAiBsK,UAAQ,KAE7E,kBAAC,IAAK9K,KAAN,CACIJ,KAAK,cACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,2CAEnC,kBAACyL,GAAD,CAAUwB,IAAK,EAAGzK,MAAO,CAAEC,MAAO,QAAUC,YAAY,mCAE5D,kBAAC,IAAKR,KAAN,KACI,kBAAC,IAAD,CAAQjG,KAAK,UAAUqH,SAAS,SAASvB,UAAU,mBAAnD,aCpGDmL,I,MAXA,WAEX,OADAxM,EAAY,wBAER,yBAAKqB,UAAU,iBACX,kBAAC,IAAWwC,MAAZ,CAAkBC,MAAO,GAAzB,uBACA,kBAAC,GAAD,SCHJ2I,GAASC,IAATD,KAsIOE,GApIK,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACZnM,EAAWC,cADW,EAEQwK,oBAAS,GAFjB,oBAErB2B,EAFqB,KAETC,EAFS,OAGM5B,mBAAQ,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAMjO,YAHrB,oBAGrBJ,EAHqB,KAGVwO,EAHU,OAII7B,mBAAQ,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAMhO,WAJnB,oBAIrBJ,EAJqB,KAIXwO,EAJW,OAKF9B,mBAAQ,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAMtO,OALb,oBAKrBA,EALqB,KAKd2O,EALc,KAO5BhN,qBAAU,WACN8M,EAAY,OAACH,QAAD,IAACA,OAAD,EAACA,EAAMjO,YACnBqO,EAAW,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAMhO,WAClBqO,EAAQ,OAACL,QAAD,IAACA,OAAD,EAACA,EAAMtO,SACf,CAACsO,IAGL,IAAMjM,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,SAAApE,EAAA,0DACrBoQ,EADqB,0CAGXnO,EAASnB,KAAK,gBAAiB,CACjCM,QAAS9B,aAAaC,QAAQ,WAC9B2C,WAAYJ,EACZK,UAAWJ,EACXF,UAPa,OASjBwO,GAAc,GACdrM,EAASpB,EAAS,yBAA0B,YAV3B,gDAajBoB,EAASpB,EAAS,wBAAyB,UAb1B,gCAiBrByN,GAAc,GAjBO,yDAAD,sDAmBzB,CAACD,EAAYC,EAAerM,EAAUnC,EAAOC,EAAWC,IAOrD0O,EAAkB,SAACC,EAAWC,GAAZ,OACpB,kBAAC,KAAD,CAAKtL,MAAO,CAAEuL,aAAc,QACxB,kBAAC,KAAD,CAAKC,KAAM,GACP,kBAACb,GAAD,KAAOU,EAAP,MAEJ,kBAAC,KAAD,CAAKG,KAAM,IACP,kBAACb,GAAD,KAAOW,MAKnB,OACI,kBAAC,IAAMlM,SAAP,KACI,kBAAC,IAAD,eACIE,KAAK,iBACLT,SAAUA,EACV4M,cAAc,EACdjM,cAAe,CACX3C,WAAYJ,EACZK,UAAWJ,EACXF,MAAOA,IAzBR,CACXkP,SAAU,CAAEF,KAAM,GAClBG,WAAY,SA2BHZ,EACD,kBAAC,IAAKrL,KAAN,CACIkM,MAAM,QAEN,kBAAC,IAAMjM,MAAP,CAAaC,SAAO,GAChB,kBAAC,IAAKF,KAAN,CACIJ,KAAK,aACLO,SAAO,EACPC,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,4BAEnC,kBAAC,IAAD,CAAOwC,MAAO,CAAEC,MAAO,OAASC,YAAY,aAAaU,MAAOnE,EAAW6N,SAAU,SAACxF,GAAOmG,EAAanG,EAAEC,OAAOnE,WAEvH,kBAAC,IAAKlB,KAAN,CACIJ,KAAK,YACLO,SAAO,EACPC,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,2BAEnC,kBAAC,IAAD,CAAOwC,MAAO,CAAEC,MAAO,OAASC,YAAY,YAAYU,MAAOlE,EAAU4N,SAAU,SAACxF,GAAOoG,EAAYpG,EAAEC,OAAOnE,aAIxHwK,EAAgB,OAAD,UAAY3O,EAAZ,YAAyBC,IAE3CqO,EACD,kBAAC,IAAKrL,KAAN,CACIkM,MAAM,QACNtM,KAAK,QACLa,aAAW,EACXL,MAAO,CACH,CAAEC,UAAU,EAAMvC,QAAS,8BAC3B,CAAE/D,KAAM,QAAS+D,QAAS,wBAG9B,kBAAC,IAAD,CAAO0C,YAAY,QAAQU,MAAOpE,EAAO8N,SAAU,SAACxF,GAAOqG,EAASrG,EAAEC,OAAOnE,WAE7EwK,EAAgB,QAAS5O,GAkB7B,kBAAC,IAAKkD,KAAN,KACI,kBAAC,IAAOC,MAAR,CAAcK,MAAO,CAAEC,MAAO,SAC1B,kBAAC,IAAD,CAAQD,MAAO,CAAEC,MAAO8K,EAAa,MAAQ,OAAQc,WAAY,QAAUpS,KAAK,UAAUqH,SAAS,UAC9FiK,EAAa,SAAW,QAE7B,kBAAC,IAAD,CAAQ/K,MAAO,CAAEC,MAAO,MAAO4L,WAAY,QAAUpS,KAAK,YAAYkL,QAAS,WAAOqG,GAAc,IAASc,QAASf,GAAtH,e,oBCnGTgB,OA5Bf,WAA4B,IAAD,EAEC3C,mBAAS,MAFV,oBAEhB0B,EAFgB,KAEVkB,EAFU,KAIvB7N,qBAAU,WACN8N,MACA,IAEJ,IAAMA,EAAO,uCAAG,gCAAAtR,EAAA,6DACNuR,EAASjS,aAAaC,QAAQ,WAC9Bc,EAFM,6BAEsBkR,GAFtB,SAGWtP,EAAS8M,IAAI1O,GAHxB,OAGNP,EAHM,OAIZuR,EAAQvR,EAASa,MAJL,2CAAH,qDAOb,OACI,kBAAC,IAAM8D,SAAP,KACI,yBAAKY,MAAO,CAAEmM,SAAU,UACpB,kBAAC,IAAWpK,MAAZ,CAAkBC,MAAO,GAAzB,kBACA,kBAAC,KAAD,CAAUoK,QAAM,EAACC,SAAUvB,EAAMwB,UAAW,CAAEC,KAAM,EAAGtM,MAAO,QAAUe,OAAO,GAC3E,kBAAC,GAAD,CAAa8J,KAAMA,MAG3B,kBAAC,KAAD,QC4EG0B,GA9FW,WACtB,IAAM7N,EAAWC,cAEXC,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,SAAApE,EAAA,+EAEfyC,EAAe2B,EAAO1B,aAAc0B,EAAOzB,cAF5B,OAGrBqB,EAASpB,EAAS,yBAA0B,YAHvB,+CAKrBoB,EAASpB,EAAS,yBAA0B,UALvB,wDAAD,sDAOzB,CAACoB,IAEE8N,EAA0B3N,sBAAW,sBAAC,4BAAAnE,EAAA,sEAE9BK,EAAM,kCAAoCf,aAAaC,QAAQ,WAFjC,SAG9B0C,EAAS8M,IAAI1O,GAHiB,OAIpC2D,EAASpB,EAAS,oCAAqC,YAJnB,gDAMpCoB,EAASpB,EAAS,sCAAuC,UANrB,yDAQzC,CAACoB,IAEN,OACE,kBAAC,IAAMS,SAAP,KACI,kBAAC,IAAD,CACIE,KAAK,iBACLC,UAAU,sBACVC,cAAe,CAAEC,UAAU,GAC3BZ,SAAUA,GAEV,kBAAC,IAAKa,KAAN,CACIJ,KAAK,eACLa,aAAW,EACXL,MAAO,CACH,CAAEC,UAAU,EAAMvC,QAAS,uCAI/B,kBAAC,IAAD,CACI4C,OAAQ,kBAACG,EAAA,EAAD,CAAchB,UAAU,wBAChC9F,KAAK,WACLyG,YAAY,kBAGpB,kBAAC,IAAKR,KAAN,CACIJ,KAAK,eACLa,aAAW,EACXL,MAAO,CACH,CAAEC,UAAU,EAAMvC,QAAS,qCAC3B,CAAE8C,IAAK,GAAI9C,QAAS,mDAGxB,kBAAC,IAAD,CACI4C,OAAQ,kBAACG,EAAA,EAAD,CAAchB,UAAU,wBAChC9F,KAAK,WACLyG,YAAY,kBAGpB,kBAAC,IAAKR,KAAN,CACQJ,KAAK,UACLkB,aAAc,CAAC,gBACfL,aAAW,EACXL,MAAO,CACH,CAAEC,UAAU,EAAMvC,QAAS,qCAC3B,gBAAGiD,EAAH,EAAGA,cAAH,MAAwB,CACpBC,UADoB,SACVC,EAAMC,GACZ,OAAKA,GAASH,EAAc,kBAAoBG,EAGzCxF,QAAQC,OAAO,2BAFfD,QAAQyF,eAO3B,kBAAC,IAAD,CACIT,OAAQ,kBAACG,EAAA,EAAD,CAAchB,UAAU,wBAChC9F,KAAK,WACLyG,YAAY,sBAGxB,kBAAC,IAAKR,KAAN,KACI,kBAAC,IAAD,CAAQjG,KAAK,UAAUqH,SAAS,SAASvB,UAAU,oBAAnD,UADJ,mBAKI,kBAAC,IAAD,CAAQ9F,KAAK,OAAOuG,MAAO,CAAE0M,YAAa,EAAGC,aAAc,GAAIhI,QAAS8H,GAAxE,mCC/EDG,OAZf,WACI,OACI,kBAAC,IAAMxN,SAAP,KACI,yBAAKY,MAAO,CAAEmM,SAAU,UACpB,kBAAC,IAAWpK,MAAZ,CAAkBC,MAAO,GAAzB,kBACA,kBAAC,GAAD,OAEJ,kBAAC,KAAD,Q,UCsFG6K,IAzFEjC,IAATD,KAEsB,SAAC,GAAY,IAAXG,EAAU,EAAVA,KACtBnM,EAAWC,cADqB,EAEZwK,mBAAQ,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAMtO,OAFH,oBAE/BA,EAF+B,KAExB2O,EAFwB,OAGd/B,mBAAQ,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAMgC,MAHD,oBAG/BA,EAH+B,KAGzBC,EAHyB,OAIA3D,mBAAQ,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAMkC,cAJf,oBAI/BC,EAJ+B,KAIlBC,EAJkB,KAMtC/O,qBAAU,WACNgN,EAAQ,OAACL,QAAD,IAACA,OAAD,EAACA,EAAMtO,OACfuQ,EAAO,OAACjC,QAAD,IAACA,OAAD,EAACA,EAAMgC,MACdI,EAAc,OAACpC,QAAD,IAACA,OAAD,EAACA,EAAMkC,cACrB/P,QAAQC,IAAI,cAAe+P,KAC3B,CAACA,EAAanC,IAGlB,IAAMjM,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,SAAApE,EAAA,+EAEXiC,EAASnB,KAAK,qCAAsC,CACtDM,QAAS9B,aAAaC,QAAQ,WAC9BsC,QACAsQ,OACAE,aAAcjO,EAAOiO,eANR,OAQjBrO,EAASpB,EAAS,0BAA2B,YAR5B,+CAWjBoB,EAASpB,EAAS,yBAA0B,UAX3B,wDAAD,sDAazB,CAACf,EAAOsQ,EAAMnO,IA3BqB,EAkCvBwO,IAAKC,UAAbC,EAlC+B,qBA4CtC,OARAlP,qBAAU,WACNkP,EAAKC,eAAe,CAChB9Q,MAAOA,EACPsQ,KAAMA,EACNE,aAAcC,MAEhB,CAACI,EAAM7Q,EAAOsQ,EAAMG,IAGtB,kBAAC,IAAM7N,SAAP,KACI,kBAAC,IAAD,eACIiO,KAAMA,EACN/N,KAAK,iBACLT,SAAUA,EACVW,cAAe,CACXhD,MAAOA,EACPsQ,KAAMA,EACNE,aAAcC,IAxBf,CACXvB,SAAU,CAAEF,KAAM,GAClBG,WAAY,SA0BJ,kBAAC,IAAKjM,KAAN,CACIJ,KAAK,SAEL,kBAAC,KAAD,CAAUiO,QAAS/Q,EAAO8N,SAAU,SAACxF,GAAOqG,EAASrG,EAAEC,OAAOwI,WAA9D,6BAEJ,kBAAC,IAAK7N,KAAN,CACIJ,KAAK,QAEL,kBAAC,KAAD,CAAUiO,QAAST,EAAMxC,SAAU,SAACxF,GAAOiI,EAAQjI,EAAEC,OAAOwI,UAAWC,UAAY,GAAnF,4BAEJ,kBAAC,IAAK9N,KAAN,CACIJ,KAAK,eACLa,YAAe2M,EACfhN,MAAO,CACH,CAAEC,SAAU+M,EAAMtP,QAAS,gCAG/B,kBAAC,IAAD,CAAOiQ,YAAY,eAAevN,YAAY,eAAesN,UAAU,KAG3E,kBAAC,IAAK9N,KAAN,KACQ,kBAAC,IAAD,CAAQM,MAAO,CAAEC,MAAO,QAASxG,KAAK,UAAUqH,SAAS,UAAzD,eCtDT4M,OA7Bf,WAA8B,IAAD,EAEDtE,mBAAS,MAFR,oBAElB0B,EAFkB,KAEZkB,EAFY,KAIzB7N,qBAAU,WACN8N,MACA,IAEJ,IAAMA,EAAO,uCAAG,gCAAAtR,EAAA,6DACNuR,EAASjS,aAAaC,QAAQ,WAC9Bc,EAFM,kDAE2CkR,GAF3C,SAGWtP,EAAS8M,IAAI1O,GAHxB,OAGNP,EAHM,OAIZuR,EAAQvR,EAASa,MAJL,2CAAH,qDAQb,OACI,kBAAC,IAAM8D,SAAP,KACI,yBAAKY,MAAO,CAAEmM,SAAU,UACpB,kBAAC,IAAWpK,MAAZ,CAAkBC,MAAO,GAAzB,wBACA,kBAAC,KAAD,CAAUoK,QAAM,EAACC,SAAS,EAAOC,UAAW,CAAEC,KAAM,EAAGtM,MAAO,QAAUe,OAAO,GAC3E,kBAAC,GAAD,CAAuB8J,KAAMA,MAGrC,kBAAC,KAAD,Q,UCtBJ6C,GAAYC,KAAZD,QAsBOE,GApBE,WAEb,OADA3P,EAAY,aAER,kBAAC,IAAMkB,SAAP,KACI,kBAAC,IAAW2C,MAAZ,CAAkBC,MAAO,GAAzB,wBACA,kBAAC,KAAD,CAAM8L,iBAAiB,KACnB,kBAACH,GAAD,CAASI,IAAI,UAAUrM,IAAI,KACvB,kBAAC,GAAD,OAEJ,kBAACiM,GAAD,CAASI,IAAI,WAAWrM,IAAI,KACxB,kBAAC,GAAD,OAEJ,kBAACiM,GAAD,CAASI,IAAI,gBAAgBrM,IAAI,KAC7B,kBAAC,GAAD,U,8BCdZuH,I,OAAaC,IAAbD,UACA+E,GAAgBC,KAAhBD,YAiLOE,GA/KM,WAAO,IAAD,EACW9E,oBAAS,GADpB,oBAChB+E,EADgB,KACLC,EADK,OAEqBhF,mBAAS,IAF9B,oBAEhBC,EAFgB,KAEAC,EAFA,OAGKF,mBAAS,IAHd,oBAGhBG,EAHgB,KAGRC,EAHQ,OAIiBJ,mBAAS,IAJ1B,oBAIhBiF,EAJgB,KAIFC,EAJE,OAKClF,mBAAS,IALV,oBAKhBmF,EALgB,KAKVC,EALU,KAMjB7P,EAAWC,cAEX6K,EAAY3K,sBAAW,sBAAC,4BAAAnE,EAAA,+EAECiC,EAAS8M,IAAI,eAFd,OAEhBjP,EAFgB,OAGtB+O,EAAU/O,EAASa,MAHG,gDAKtB2B,QAAQrC,MAAR,MALsB,yDAO3B,CAAC4O,IAEEiF,EAAU3P,sBAAW,sBAAC,4BAAAnE,EAAA,+EAEGiC,EAAS8M,IAAI,kBAAmB,CAClDgF,OAAQ,CACJ3S,QAAS9B,aAAaC,QAAQ,cAJnB,OAEdO,EAFc,OAOpB+T,EAAQ/T,EAASa,MAPG,gDASpB2B,QAAQrC,MAAR,MAToB,yDAWzB,CAAC4T,IAEJrQ,qBAAU,WACNsL,IACAgF,MACD,CAAChF,EAAWgF,IAEf,IAAME,EAAe/E,mBAAQ,WACzB,OAAO2E,EAAK5U,QAAO,SAAAkQ,GAAC,OAAKwE,EAAavE,SAASD,QAChD,CAACwE,EAAcE,IAEZ5E,EAAiBC,mBAAQ,WAC3B,OAAOL,EAAO5P,QAAO,SAAAkQ,GAAC,OAAKR,EAAeS,SAASD,QACpD,CAACR,EAAgBE,IAGd1K,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,SAAApE,EAAA,6DACzByT,GAAa,GADY,kBAGfxR,EAASnB,KAAK,gBAAiB,CACjC6D,KAAMP,EAAOO,KACbsP,QAAS7P,EAAO6P,QAChB1T,SAAU6D,EAAO7D,SACjBqO,OAAQxK,EAAOwK,OACfsF,cAAe9P,EAAO8P,cACtBC,KAAK/P,EAAO+P,KACZ/E,YAAahL,EAAOgL,YACpBgF,aAAchQ,EAAOgQ,aACrBC,aAAcjQ,EAAOkQ,cAZJ,OAerBzR,IAAQ4M,QAAQ,iBAfK,gDAkBrB5M,IAAQ4M,QAAQ,yBAlBK,QAoBzBgE,GAAa,GApBY,yDAAD,sDAqBzB,CAACzP,EAAUyP,IAEd,OACI,kBAAC,IAAD,CACI9O,KAAK,QACLC,UAAU,aACVC,cAAe,CAAEC,UAAU,GAC3BZ,SAAUA,GAEV,kBAAC,IAAKa,KAAN,CACIJ,KAAK,gBACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,oCAEnC,kBAAC,KAAD,CACIyH,KAAK,WACL/E,YAAY,kBACZU,MAAOyN,EACP/D,SAAUgE,EACVtO,MAAO,CAAEC,MAAO,SAGnB0O,EAAalN,KAAI,SAAAY,GAAI,OAClB,kBAAC,KAAOkI,OAAR,CAAe7I,IAAKW,EAAKxI,GAAI+G,MAAOyB,EAAKxI,IACpCwI,EAAK/C,WAKlB,kBAAC,IAAKI,KAAN,CACIJ,KAAK,OACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,6BAEnC,kBAAC,IAAD,CAAOwC,MAAO,CAAEC,MAAO,QAAUC,YAAY,gBAEjD,kBAAC,IAAKR,KAAN,CACIJ,KAAK,UACLa,aAAW,EACX+O,cAAc,WAEd,kBAAC,KAAD,CAAQC,gBAAgB,UAAUC,kBAAkB,cAAcC,gBAAc,KAEpF,kBAAC,IAAK3P,KAAN,CACIJ,KAAK,WACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,2BAEnC,kBAAC,IAAD,CAAOwC,MAAO,CAAEC,MAAO,QAAUC,YAAY,cAEjD,kBAAC,IAAKR,KAAN,CACIJ,KAAK,OACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,uBAEnC,kBAACwQ,GAAD,CAAahO,MAAO,CAAEC,MAAO,QAAWqP,SAAU,CAAEC,OAAQ,SACtEA,OAAO,sBAED,kBAAC,IAAK7P,KAAN,CACIJ,KAAK,SACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,0BAEnC,kBAAC,KAAD,CACIyH,KAAK,WACL/E,YAAY,sBACZU,MAAOyI,EACPiB,SAAUhB,EACVtJ,MAAO,CAAEC,MAAO,SAGnB0J,EAAelI,KAAI,SAAAY,GAAI,OACpB,kBAAC,KAAOkI,OAAR,CAAe7I,IAAKW,EAAKxI,GAAI+G,MAAOyB,EAAKxI,IACpCwI,EAAK/C,WAKlB,kBAAC,IAAKI,KAAN,CACIJ,KAAK,cACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,+DAGnC,kBAAC,KAAD,CAAawC,MAAO,CAAEC,MAAO,QAAUC,YAAY,iCAEvD,kBAAC,IAAKR,KAAN,CACIJ,KAAK,cACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,8BAEnC,kBAAC,GAAD,CAAUiN,IAAK,EAAGzK,MAAO,CAAEC,MAAO,QAAUC,YAAY,uBAE5D,kBAAC,IAAKR,KAAN,CACIJ,KAAK,eACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,+BAEnC,kBAAC,GAAD,CAAUiN,IAAK,EAAGzK,MAAO,CAAEC,MAAO,QAAUC,YAAY,uFAE5D,kBAAC,IAAKR,KAAN,KACI,kBAAC,IAAD,CAAQjG,KAAK,UAAUqH,SAAS,SAASvB,UAAU,oBAAoB8M,QAAS8B,GAAhF,aC/JDqB,I,OAZE,WAGb,OAFAtR,EAAY,cAGV,yBAAKqB,UAAU,mBACT,kBAAC,IAAWwC,MAAZ,CAAkBC,MAAO,GAAzB,mBACA,kBAAC,GAAD,S,oBCPJyN,I,OAAc7E,IAAd6E,WAoFOC,OAjFf,YAAoD,IAAnCC,EAAkC,EAAlCA,QAAStN,EAAyB,EAAzBA,KAAMuN,EAAmB,EAAnBA,UAAWC,EAAQ,EAARA,MAAQ,EACTzG,oBAAa,OAAJ/G,QAAI,IAAJA,OAAA,EAAAA,EAAMyN,WAAY,IADlB,oBACxCC,EADwC,KAC3BC,EAD2B,OAEb5G,oBAAa,OAAJ/G,QAAI,IAAJA,OAAA,EAAAA,EAAM4N,SAAU,IAFZ,oBAExCC,EAFwC,KAE7BC,EAF6B,OAGf/G,sBAAU,OAAC/G,QAAD,IAACA,OAAD,EAACA,EAAM+N,YAHF,oBAGxCC,EAHwC,KAG9BC,EAH8B,KAKzCC,EAAO,uCAAG,WAAOC,GAAP,SAAA7V,EAAA,6DACZqV,EAAeQ,GADH,kBAGF5T,EAASnB,KAAK,cAAe,CAC/B5B,GAAE,OAAEwI,QAAF,IAAEA,OAAF,EAAEA,EAAMxI,GAAIiW,SAAUU,EAAgBP,OAAQC,EAAWO,OAAQZ,IAJ/D,OAMRrS,IAAQ4M,QAAQ,oBANR,gDASR5M,IAAQ5C,MAAM,6BATN,yDAAH,sDAYP8V,EAAO,uCAAG,WAAOC,GAAP,SAAAhW,EAAA,6DACZwV,EAAaQ,GADD,kBAGF/T,EAASnB,KAAK,cAAe,CAC/B5B,GAAE,OAAEwI,QAAF,IAAEA,OAAF,EAAEA,EAAMxI,GAAIiW,SAAUC,EAAaE,OAAQU,EAAcP,UAAWC,EAAUI,OAAQZ,IAJpF,OAMRrS,IAAQ4M,QAAQ,kBANR,gDASR5M,IAAQ5C,MAAM,2BATN,yDAAH,sDAYPgW,EAAY,uCAAG,WAAOC,GAAP,SAAAlW,EAAA,6DACjB2V,EAAYO,GADK,kBAGPjU,EAASnB,KAAK,cAAe,CAC/B5B,GAAE,OAAEwI,QAAF,IAAEA,OAAF,EAAEA,EAAMxI,GAAIiW,SAAUC,EAAaE,OAAQC,EAAWE,UAAWS,EAAaJ,OAAQZ,IAJ/E,OAMbrS,IAAQ4M,QAAQ,eANH,gDASb5M,IAAQ5C,MAAM,wBATD,yDAAH,sDAYZkW,EAAQ,uCAAG,sBAAAnW,EAAA,+EAEHiC,EAASmU,OAAO,cAAe,CACjCrC,OAAQ,CACJ7U,GAAE,OAAEwI,QAAF,IAAEA,OAAF,EAAEA,EAAMxI,MAJT,OAOT+V,EAAS,OAACvN,QAAD,IAACA,OAAD,EAACA,EAAMxI,IAChB2D,IAAQ4M,QAAQ,eARP,gDAWT5M,IAAQ5C,MAAM,wBAXL,yDAAH,qDAed,OAEI,kBAAC,KAAD,CAAMoF,MAAO,CAAEgR,UAAW,EAAGzF,aAAc,GAAKc,SAAUhK,EAAM4O,QAAStB,GAAW,CAAC,kBAACuB,GAAA,EAAD,CAAgBvM,QAASmM,EAAUpP,IAAI,aACxH,yBAAK1B,MAAO,CAAEmR,QAAS,SACnB,kBAAC1B,GAAD,CAAWzP,MAAO,CAAEoR,MAAO,OAAQC,cAAe,MAAOC,WAAY,MAArE,cACC,KACD,yBAAKtR,MAAO,CAAEuR,WAAY,EAAGC,SAAU,MACnC,kBAAC/B,GAAD,CAAWzP,MAAO,CAAEC,MAAO,QAAUwR,WAAU9B,GAAU,CAAErF,SAAU,SAACkG,GAAD,OAAoBD,EAAQC,MAA2BT,KAGpI,yBAAK/P,MAAO,CAAEmR,QAAS,SACnB,kBAAC1B,GAAD,CAAWzP,MAAO,CAAEoR,MAAO,OAAQC,cAAe,MAAOC,WAAY,MAArE,YACC,KAED,yBAAKtR,MAAO,CAAEuR,WAAY,EAAGC,SAAU,MACnC,kBAAC/B,GAAD,CAAWzP,MAAO,CAAEC,MAAO,QAAUwR,WAAU9B,GAAU,CAAErF,SAAU,SAACqG,GAAD,OAAkBD,EAAQC,MAAyBT,KAG/HP,GACG,kBAAC,KAAD,CAAQR,gBAAgB,SAASC,kBAAkB,SAAS9E,SAAU,SAACuG,GAAD,OAAiBD,EAAaC,IAAcxB,eAAc,OAAEhN,QAAF,IAAEA,OAAF,EAAEA,EAAM+N,cC7EhJrO,GAAU6I,IAAV7I,MA+CO2P,OA7Cf,YAAsC,IAAlB/B,EAAiB,EAAjBA,QAASE,EAAQ,EAARA,MAAQ,EACbzG,mBAAS,IADI,oBAC1BuI,EAD0B,KACtBC,EADsB,KAE3BC,EAAK,uCAAG,WAAOhC,GAAP,eAAAlV,EAAA,+EAEkBiC,EAAS8M,IAAI,wBAAyB,CAC1DgF,OAAQ,CACJ+B,OAAQZ,KAJV,OAEApV,EAFA,OAONmX,EAAMnX,EAASa,MAPT,gDASN2B,QAAQrC,MAAR,MATM,yDAAH,sDAaLgV,EAAY,SAAC/V,GACf+X,EAAMD,EAAGhY,QAAO,SAAAmY,GAAG,OAAIA,EAAIjY,KAAOA,OAGtCsE,qBAAU,WACF0R,GACAgC,EAAMhC,KAEX,CAACA,IAEJ,IAAMkC,EAAU,uCAAG,4BAAApX,EAAA,sEACQiC,EAASnB,KAAK,cAAe,CAChDgV,OAAQZ,EAAOC,SAAU,WAAYG,OAAQ,WAFlC,OACTxV,EADS,OAIfmX,EAAM,GAAD,mBAAKD,GAAL,CAAS,CAAC9X,GAAIY,EAASa,KAAKzB,GAAIiW,SAAU,WAAYG,OAAQ,aAJpD,2CAAH,qDAQhB,OACI,6BACI,kBAAClO,GAAD,CAAOC,MAAO,GAAd,8BACC2P,EAAGlQ,KAAI,SAAAY,GAAI,OACR,kBAAC,GAAD,CAAOsN,QAASA,EAASjO,IAAKW,EAAKxI,GAAIwI,KAAMA,EAAMuN,UAAWA,EAAWC,MAAOA,OAEnFF,GAAY,kBAAC,IAAD,CAAQ3P,MAAO,CAAEC,MAAO,QAAUxG,KAAK,UAAUkL,QAAS,WAAOoN,MAAjE,iB,UC1CjBtC,I,cAAc7E,IAAd6E,WAiHSuC,OA/GjB,YAA4B,IAAP3P,EAAM,EAANA,KAAM,EACM+G,oBAAS,GADf,oBACnB7M,EADmB,KACT0V,EADS,OAEQ7I,oBAAS,GAFjB,oBAEnB+E,EAFmB,KAERC,EAFQ,OAGMhF,oBAAS,GAHf,oBAGnB8I,EAHmB,KAGTC,EAHS,KAKpBxN,EAAU7F,sBAAW,uCAAC,WAAOsT,EAAU7V,GAAjB,eAAA5B,EAAA,yDAC3ByT,GAAa,GADc,UAGtB7R,EAHsB,gCAInBK,EAASnB,KAAK,oBAAqB,CACxCM,QAAS9B,aAAaC,QAAQ,WAC9BoE,MAAO8T,IANiB,OAQzB5U,IAAQ4M,QAAQ,kBARS,wCAUnBxN,EAASnB,KAAK,oBAAqB,CACxCM,QAAS9B,aAAaC,QAAQ,WAC9BoE,MAAO8T,IAZiB,QAczB5U,IAAQ4M,QAAQ,gBAdS,QAgB1B6H,GAAa1V,GAhBa,kDAmBpB8V,EAAS9V,EAAW,cAAgB,gBAC1CiB,IAAQ5C,MAAMyX,GApBY,QAsB3BjE,GAAa,GAtBc,0DAAD,wDAuBrB,IAEAkE,EAAoBxT,sBAAW,sBAAC,4BAAAnE,EAAA,+EAEJiC,EAAS8M,IAAI,8BAA+B,CAC/DgF,OAAQ,CACnB3S,QAAS9B,aAAaC,QAAQ,WAC9BoE,MAAO+D,EAAKxI,MALsB,OAErBY,EAFqB,OAQpCwX,GAAY,GACS,GAAjBxX,EAASa,MACZ2W,GAAY,GAVuB,gDAa3BhV,QAAQrC,MAAR,MAb2B,yDAehC,IAENuD,qBAAU,WACHmU,MACJ,CAACA,IAEJ,IAAMC,EAAkBzT,sBAAW,uCAAC,WAAOsT,EAAUF,GAAjB,SAAAvX,EAAA,sDACnCyT,GAAa,GACb,IACC+D,GAAaD,GAEd,SACgB,kBACf1U,IAAQ5C,MADO,mBAGhBwT,GAAa,GATsB,2CAAD,wDAU7B,IAEAoE,EAAajW,EAAW,SAAW,OACnCkW,EAAU,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,WACrFC,EAAY,IAAIC,KAAK3Q,EAAK0Q,WAC1BE,EAAU,IAAID,KAAK3Q,EAAK4Q,SACxBrE,EAAUvM,EAAKuM,QAAU,OAAS,MAElCsE,EAAc7Q,EAAK8Q,eAAiB9Q,EAAK2M,cAI7CzS,EAHD,kBAAC,IAAD,CAAQ9C,KAAK,UAAUqH,SAAS,SAASvB,UAAU,oBAAoBoF,QAAU,kBAAMA,EAAQtC,EAAKxI,GAAI0C,IAAW8P,QAAS8B,GAC1HqE,GAMF,kBAAC,IAAD,CAAQ/Y,KAAK,UAAUqH,SAAS,SAASvB,UAAU,+BAA+BiO,UAAU,GACzFgF,GAGJ,OAAIN,EAED,kBAAC,KAAD,CAAM3S,UAAU,aAAayB,MAAOqB,EAAK/C,KAAM8T,UAAU,GACvD,kBAAC,GAAD,KAAW,yCAAkB/Q,EAAKnH,UAClC,kBAAC,GAAD,KAAW,qCAAc6X,EAAUM,eAAe,QAASZ,GAA3D,MAAwEQ,EAAQI,eAAe,QAASZ,IACxG,kBAAC,GAAD,KAAW,4CAAqBpQ,EAAK0H,aACrC,kBAAC,GAAD,KAAW,wCAAiB6E,GAC5B,kBAAC,GAAD,KAAW,6CAAsBvM,EAAK0M,cACtC,kBAAC,GAAD,KAAW,iDAA0B1M,EAAK8Q,eAA1C,IAA2D9Q,EAAK2M,cACjE,uBAAGhP,MAAO,CAACsT,MAAO,YAAlB,KAAgC,kBAAC,IAAD,CAAQ7Z,KAAK,OAAO8F,UAAU,6BAA6BoF,QAAS,kBAAM4N,EAAgBlQ,EAAKxI,GAAIqY,KAAnG,cAG/BgB,GAMH,kBAAC,KAAD,CAAM3T,UAAU,aAAayB,MAAOqB,EAAK/C,KAAM8T,UAAU,GACvD,kBAAC,GAAD,KAAW,yCAAkB/Q,EAAKnH,UAClC,kBAAC,GAAD,KAAW,qCAAc6X,EAAUM,eAAe,QAASZ,GAA3D,MAAwEQ,EAAQI,eAAe,QAASZ,IACxG,kBAAC,GAAD,KAAW,4CAAqBpQ,EAAK0H,YAAYwJ,UAAU,EAAG,IAA9D,OACD,uBAAGvT,MAAO,CAACsT,MAAO,YAAlB,KAAgC,kBAAC,IAAD,CAAQ7Z,KAAK,OAAO8F,UAAU,6BAA6BoF,QAAS,kBAAM4N,EAAgBlQ,EAAKxI,GAAIqY,KAAnG,cAG/BgB,IC1GG3I,GAAWiJ,KAAXjJ,OAoGUkJ,GAlGA,SAAC,GAAa,IAAZ5D,EAAW,EAAXA,MAAW,EACCzG,mBAAS,IADV,oBACpBsK,EADoB,KACZC,EADY,OAEevK,mBAAS,IAFxB,oBAEpBwK,EAFoB,KAELC,EAFK,OAGezK,mBAAS,IAHxB,oBAKrB0K,GALqB,UAKJhV,sBAAW,sBAAC,4BAAAnE,EAAA,+EAEJiC,EAAS8M,IAAI,qBAAsB,CACtDgF,OAAQ,CACJmB,MAAOA,KAJY,OAErBpV,EAFqB,OAO3BkZ,EAAUlZ,EAASa,MACnBuY,EAAiBpZ,EAASa,MARC,gDAU3B2B,QAAQrC,MAAR,MAV2B,yDAYhC,CAAC+Y,EAAW9D,KAEf1R,qBAAU,WACN2V,MACD,CAACjE,EAAOiE,IAqDX,OACI,kBAAC,IAAM1U,SAAP,KACI,kBAAC,IAAW2C,MAAZ,CAAkBC,MAAO,GAAzB,mBACA,kBAAC,KAAD,KACI,2BAAOsI,SAAU,SAAAxF,GAAC,OAvDT,SAAAA,GACjB,IAAIiP,EAAUL,EACd,GAAU,KAAN5O,EAAU,CACV,IAAIkP,EACJA,EAAUD,EAAQpa,QAAO,SAAA2E,GAAK,OAC1BA,EAAMgB,KAAK2U,cAAcnK,SAAShF,EAAEmP,kBAExCJ,EAAiBG,QAEjBH,EAAiBE,GA8CSG,CAAapP,EAAEC,OAAOnE,QAAQV,YAAY,oBAAoBX,UAAU,WADlG,qBAEsB,kBAAC,KAAD,CAAQ4U,aAAa,OAAOnU,MAAO,CAAEC,MAAO,KAAOqK,SAAU,SAAA1J,GAAK,OA3CpE,SAAAA,GACxB,IAAImT,EAAUL,EACd,GAAa,WAAT9S,EAAoB,CACpB,IAAIoT,EACJA,EAAUD,EAAQpa,QAAO,SAAA2E,GAAK,OAC1BA,EAAMsQ,WAEViF,EAAiBG,QACd,GAAa,YAATpT,EAAqB,CAC5B,IAAIoT,EACJA,EAAUD,EAAQpa,QAAO,SAAA2E,GAAK,OACzBA,EAAMsQ,WAEXiF,EAAiBG,QAEjBH,EAAiBE,GA4B2EK,CAAoBxT,IAAQyT,KAAK,SACrH,kBAAC9J,GAAD,CAAQ3J,MAAM,QAAd,cACA,kBAAC2J,GAAD,CAAQ3J,MAAM,WAAd,WACA,kBAAC2J,GAAD,CAAQ3J,MAAM,YAAd,gBALR,kBAOmB,kBAAC,KAAD,CAAQuT,aAAa,OAAOnU,MAAO,CAAEC,MAAO,KAAOqK,SAAU,SAAA1J,GAAK,OA7BpE,SAAAA,GACrB,IAAImT,EAAUL,EACd,GAAa,QAAT9S,EAAiB,CACjB,IAAIoT,EACJA,EAAUD,EAAQpa,QAAO,SAAA2E,GAAK,OACrBA,EAAM6U,eAAiB7U,EAAM0Q,gBAEtC6E,EAAiBG,QACd,GAAa,UAATpT,EAAmB,CAC1B,IAAIoT,EACJA,EAAUD,EAAQpa,QAAO,SAAA2E,GAAK,QACxBA,EAAM6U,eAAiB7U,EAAM0Q,iBAEnC6E,EAAiBG,QAEjBH,EAAiBE,GAcwEO,CAAiB1T,IAAQyT,KAAK,SAC/G,kBAAC9J,GAAD,CAAQ3J,MAAM,QAAd,cACA,kBAAC2J,GAAD,CAAQ3J,MAAM,QAAd,QACA,kBAAC2J,GAAD,CAAQ3J,MAAM,UAAd,YAGR,yBAAKZ,MAAO,CAAEmR,QAAS,OAAQoD,SAAU,OAAQC,eAAgB,gBAAiBC,UAAW,WACxFb,EAAcnS,KAAI,SAACY,EAAMC,GAAP,OACf,kBAAC,GAAD,CAAWZ,IAAKY,EAAGD,KAAMA,U,wCC9FrCoN,GAAqB7E,IAArB6E,UAoGOiF,IApGc9J,IAAV7I,MAEH,SAAC,GAAW,IAAV4S,EAAS,EAATA,IAAS,EACKvL,mBAAS,IADd,oBAChBG,EADgB,KACRC,EADQ,OAEiBJ,oBAAS,GAF1B,oBAEhBwL,EAFgB,KAEFC,EAFE,OAGazL,mBAAS,IAHtB,oBAGhB0L,EAHgB,KAGJC,EAHI,KAIjBC,EAAWC,mBAEXC,EAAiBpW,sBAAW,sBAAC,4BAAAnE,EAAA,kEAC3Bga,QAD2B,IAC3BA,OAD2B,EAC3BA,EAAK9a,IADsB,0CAGA+C,EAAS8M,IAAI,2BAA4B,CAC5DgF,OAAQ,CACJmB,MAAK,OAAE8E,QAAF,IAAEA,OAAF,EAAEA,EAAK9a,MALG,OAGjBY,EAHiB,OAQvB+O,EAAU/O,EAASa,MARI,gDAUvB2B,QAAQrC,MAAR,MAVuB,yDAahC,CAAC4O,EAAWmL,IAEfxW,qBAAU,WACN+W,MACD,CAACP,EAAKO,IAET,IAAMC,EAAcrW,sBAAW,uCAAC,WAAOsW,GAAP,eAAAza,EAAA,sDACtB0a,EAAO9L,EAAO5P,QAAO,SAAA2b,GAAK,OAAIA,EAAMzb,KAAOub,KACjD5L,EAAU6L,GAFkB,2CAAD,sDAG5B,CAAC9L,EAAQC,IAEN+L,EAAqBzW,uBAAY,WACnC,IAAM0W,EACDV,IAAuE,IAAzDvL,EAAO9H,KAAI,SAAA6T,GAAK,OAAIA,EAAMhW,QAAMkD,QAAQsS,GAAvD,sBACUvL,GADV,CACkB,CAACjK,KAAMwV,EAAYjb,GAAI2b,EAAUC,UAC7ClM,EACVC,EAAUgM,GACVX,GAAgB,GAChBE,EAAc,MACf,CAACvL,EAAWuL,EAAeF,EAAiBtL,IAMzC8L,EACF,kBAAC,IAAMjW,SAAP,KACKmK,EAAO9H,KAAI,SAAAiU,GAAC,OACT,kBAAC,KAAD,CACIhU,IAAKgU,EAAE7b,GACPyZ,MAAM,OACN1R,UAAQ,EACRN,QAAS,SAAAwD,GACLA,EAAE6Q,iBACFR,EAAYO,EAAE7b,MAGjB6b,EAAEpW,SAGVsV,GACG,kBAAC,IAAD,CACInN,IAAKuN,EACLvb,KAAK,OACL4a,KAAK,QACLrU,MAAO,CAAEC,MAAO,IAChBW,MAAOkU,EACPxK,SAAU,SAACxF,GAAOiQ,EAAcjQ,EAAEC,OAAOnE,QACzCgV,OAAQL,EACRM,aAAcN,KAGpBX,GACE,kBAAC,KAAD,CAAKjQ,QAhCC,WACdkQ,GAAgB,IA+BiBtV,UAAU,iBAC/B,kBAACuW,GAAA,EAAD,MADJ,aAOZ,OACI,kBAAC,KAAD,CAAUzJ,SAAUsI,EAAKvI,QAAM,GAC3B,kBAAC,KAAD,CACIpL,MAAK,uBAAW2T,QAAX,IAAWA,OAAX,EAAWA,EAAKrV,MACrBC,UAAU,mBACV8V,KAAMA,GAEJ,kBAAC,KAAD,MACM,OAAHV,QAAG,IAAHA,OAAA,EAAAA,EAAK3K,UAAW,kBAAC,KAAatK,KAAd,CAAmBkM,MAAM,WAAU,uBAAGzQ,KAAMwZ,EAAI3K,SAAU2K,EAAI3K,WAC3E,OAAH2K,QAAG,IAAHA,OAAA,EAAAA,EAAK1K,QAAS,kBAAC,KAAavK,KAAd,CAAmBkM,MAAM,aAAa+I,EAAI1K,QACrD,OAAH0K,QAAG,IAAHA,OAAA,EAAAA,EAAKnY,QAAS,kBAAC,KAAakD,KAAd,CAAmBkM,MAAM,SAAQ,uBAAGzQ,KAAI,iBAAYwZ,EAAInY,QAAUmY,EAAInY,SACjF,OAAHmY,QAAG,IAAHA,OAAA,EAAAA,EAAKzK,UAAW,kBAAC,KAAaxK,KAAd,CAAmBkM,MAAM,kBAAkB+I,EAAIzK,UAEpE,kBAAC,GAAD,CAAWuH,UAAQ,GAAnB,OAAqBkD,QAArB,IAAqBA,OAArB,EAAqBA,EAAK5K,iB,6BChGlChI,GAAU6I,IAAV7I,MACWyR,KAAXjJ,OA2GOwL,OAzGf,YAA8B,IAATlG,EAAQ,EAARA,MAAQ,EACKzG,mBAAS,IADd,oBAClB4M,EADkB,KACTC,EADS,OAEK7M,oBAAS,GAFd,oBAElBiD,EAFkB,KAET6J,EAFS,KAGnBC,EAAclc,aAAaC,QAAQ,WAEnCkc,EAAatX,sBAAW,sBAAC,4BAAAnE,EAAA,+EAECiC,EAAS8M,IAAI,4BAA6B,CAC9DgF,OAAQ,CACJ+B,OAAQZ,KAJO,QAEjBpV,EAFiB,QAOda,KAAK+a,SAAQ,SAAApO,GAAM,OAAIA,EAAOvG,IAAMuG,EAAOpO,MACpDoc,EAAWxb,EAASa,MACpB4a,GAAW,GATY,gDAWvBjZ,QAAQrC,MAAR,MAXuB,yDAa5B,CAACiV,IAGEyG,EAAexX,sBAAW,uCAAC,WAAOyX,GAAP,SAAA5b,EAAA,+EAEDiC,EAASmU,OAAO,iBAAkB,CACtDrC,OAAQ,CACJ8H,UAAWD,KAJM,cAOzBN,EAAWD,EAAQrc,QAAO,SAAAsO,GAAM,OAAIA,EAAOvG,MAAQ6U,MACnD/Y,IAAQ4M,QAAQ,kBARS,gDAUzBnN,QAAQrC,MAAR,MACA4C,IAAQ5C,MAAM,gCAXW,yDAAD,sDAa7B,CAACob,IAEJ7X,qBAAU,WACF0R,GACAuG,EAAWvG,KAEhB,CAACA,IAEJ,IAAM4G,EAAU,CACZ,CACIzV,MAAO,QACP0V,UAAW,CAAC,OAAQ,cACpBhV,IAAK,SAET,CACIV,MAAO,OACP0V,UAAW,CAAC,OAAQ,aACpBhV,IAAK,QAET,CACIV,MAAO,QACP0V,UAAW,CAAC,OAAQ,SACpBhV,IAAK,SAET,CACIV,MAAO,OACP0V,UAAW,OACXhV,IAAK,OACLiV,OAAQ,SAACC,EAAGC,GAAJ,OACmB,IAAvBA,EAAO1M,YAAoB,QAAU,WAG7C,CACInJ,MAAO,SACP0V,UAAW,SACXhV,IAAK,SACLiV,OAAQ,SAACC,EAAGC,GAAJ,MACJ,WAGR,CACI7V,MAAO,SACPU,IAAK,SACLiV,OAAQ,SAACC,EAAGC,GAAJ,OACJC,SAASX,KAAiBU,EAAO/L,KAAKjR,GAElC,kBAAC,KAAD,CAASmH,MAAM,gCACX,kBAAC,IAAD,CAAQvH,KAAK,UAAUsd,QAAM,EAACvJ,UAAQ,GAAtC,WAKJ,kBAAC,KAAD,CAAYxM,MAAM,+CAA+CgW,UAAW,kBAAMV,EAAaO,EAAOnV,MAAMuV,OAAO,MAAMC,WAAW,KAAK1J,SAAUsJ,SAASX,KAAiBU,EAAO/L,KAAKjR,IACrL,kBAAC,IAAD,CAAQJ,KAAK,UAAUsd,QAAM,GAA7B,cASpB,OACI,kBAAC,IAAM3X,SAAP,KACI,kBAAC,GAAD,CAAO4C,MAAO,GAAd,WACA,kBAAC,KAAD,CAAOyU,QAASA,EAASjT,WAAYwS,EAAS3J,QAASA,MCwFjD8K,GA7LE,SAAC,GAAsB,IAArBxH,EAAoB,EAApBA,QAASE,EAAW,EAAXA,MAAW,EAEdzG,mBAAS,IAFK,oBAE/BgO,EAF+B,KAEzBC,EAFyB,KAIhCC,EAAmBxY,sBAAW,sBAAC,4BAAAnE,EAAA,+EAENiC,EAAS8M,IAAI,4BAA6B,CAC7DgF,OAAQ,CACJmB,MAAOA,EACPF,QAASA,EACTzD,OAAQjS,aAAaC,QAAQ,cANR,OAEvBO,EAFuB,OAS7B4c,EAAQ5c,EAASa,MATY,gDAW7B2B,QAAQrC,MAAR,MAX6B,yDAalC,CAACiV,EAAOF,IAEXxR,qBAAU,WACNmZ,MACD,CAACA,EAAkBzH,IAEtB,IA8IM4C,EAAU,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,WAE3F,OACI,kBAAC,IAAM1T,SAAP,KACI,kBAAC,IAAW2C,MAAZ,CAAkBC,MAAO,GAAzB,kBACA,kBAAC,KAAD,CACAwB,WAAY4T,EACZX,QArJQ,CAChB,CACAzV,MAAO,aACP0V,UAAW,cACXhV,IAAK,cACL6V,OAAQ,SAAC5c,EAAGuM,GAAJ,OAAUvM,EAAE6c,YAAYC,cAAcvQ,EAAEsQ,eAEhD,CACAxW,MAAO,iBACP0V,UAAW,OACXhV,IAAK,OACL6V,OAAQ,SAAC5c,EAAGuM,GAAJ,OAAUvM,EAAE2E,KAAKmY,cAAcvQ,EAAE5H,QAEzC,CACA0B,MAAO,kBACP0V,UAAW,kBACXhV,IAAK,kBACL6V,OAAQ,SAAC5c,EAAGuM,GAAJ,OAAUvM,EAAE+c,gBAAgBD,cAAcvQ,EAAEwQ,mBAEpD,CACA1W,MAAO,qBACP0V,UAAW,UACXhV,IAAK,UACLiW,QAAS,CACL,CACI7K,KAAM,OACNlM,MAAO,QAEX,CACIkM,KAAM,OACNlM,MAAO,QAEX,CACIkM,KAAM,UACNlM,MAAO,WAEX,CACIkM,KAAM,OACNlM,MAAO,QAEX,CACIkM,KAAM,YACNlM,MAAO,cAGPgX,gBAAgB,EAChBC,SAAU,SAACjX,EAAOiW,GAAR,OAAmBA,EAAOiB,UAAYlX,IAExD,CACAI,MAAO,eACP0V,UAAW,eACXhV,IAAK,eACLiW,QAAS,CACL,CACI7K,KAAM,mBACNlM,MAAO,qBAEX,CACIkM,KAAM,eACNlM,MAAO,gBAEX,CACIkM,KAAM,UACNlM,MAAO,WAEX,CACIkM,KAAM,YACNlM,MAAO,aAEX,CACIkM,KAAM,iBACNlM,MAAO,mBAGXgX,gBAAgB,EAChBC,SAAU,SAACjX,EAAOiW,GAAR,OAAmBA,EAAOkB,eAAiBnX,IAEzD,CACAI,MAAO,uBACP0V,UAAW,SACXhV,IAAK,SACLiW,QAAS,CACL,CACI7K,KAAM,gBACNlM,MAAO,iBAEX,CACIkM,KAAM,oBACNlM,MAAO,qBAEX,CACIkM,KAAM,UACNlM,MAAO,WAEX,CACIkM,KAAM,kBACNlM,MAAO,mBAEX,CACIkM,KAAM,cACNlM,MAAO,gBAGXgX,gBAAgB,EAChBC,SAAU,SAACjX,EAAOiW,GAAR,OAAmBA,EAAOmB,SAAWpX,IAEnD,CACAI,MAAO,mBACP0V,UAAW,eACXhV,IAAK,eACLiW,QAAS,CACL,CACI7K,KAAM,MACNlM,MAAO,OAEX,CACIkM,KAAM,KACNlM,MAAO,OAGXgX,gBAAgB,EAChBC,SAAU,SAACjX,EAAOiW,GAAR,OAAmBA,EAAOoB,eAAiBrX,IAEzD,CACAI,MAAO,mBACP0V,UAAW,SACXhV,IAAK,SACLiW,QAAS,CACL,CACI7K,KAAM,MACNlM,MAAO,OAEX,CACIkM,KAAM,KACNlM,MAAO,OAGXgX,gBAAgB,EAChBC,SAAU,SAACjX,EAAOiW,GAAR,OAAmBA,EAAOqB,SAAWtX,KAY3CuX,kBAAoB,SAAAtB,GAAM,OACtB,2BACI,4CAAoB,6BADxB,SAEWA,EAAOW,YAAY,6BAF9B,aAGeX,EAAOuB,gBAAgB,6BAHtC,SAIY,IAAIpF,KAAK6D,EAAOwB,kBAAmBhF,eAAe,QAASZ,GAJvE,MAIqF,IAAIO,KAAK6D,EAAOyB,gBAAiBjF,eAAe,QAASZ,GAAS,6BAAK,6BACxJ,kDAA0B,6BAL9B,kCAMmC,6BAC9BoE,EAAO0B,OAAO,6BAAK,6BAPxB,yEAQ0E,6BACrE1B,EAAO2B,WAAW,mC,oBC7KtBC,OAZjB,YAAmC,IAARnd,EAAO,EAAPA,KAEvB,OACI,kBAAC,IAAM8D,SAAP,KACI,kBAAC,IAAW2C,MAAZ,CAAkBC,MAAO,GAAzB,WACI,kBAAC,KAAD,CAAQ1G,KAAM,CAAC,CACX7B,KAAM,SACNiM,EAAG,CAAC,oBAAqB,8BAA+B,iCACxDlB,EAAGlJ,IAAQod,OAAQ,CAACC,OAAQ,CAACC,EAAG,KAAM3Y,MAAM,SCgC/C4Y,OAzCjB,YAAwC,IAARvd,EAAO,EAAPA,KA6B5B,OACI,kBAAC,IAAM8D,SAAP,KACI,kBAAC,IAAW2C,MAAZ,CAAkBC,MAAO,GAAzB,yBACA,kBAAC,KAAD,CACIyU,QA/BI,CACZ,CACIzV,MAAO,OACP0V,UAAW,OACXhV,IAAK,QAET,CACIV,MAAO,QACP0V,UAAW,QACXhV,IAAK,SAET,CACIV,MAAO,kBACP0V,UAAW,QACXhV,IAAK,QACLoX,iBAAkB,UAClBvB,OAAQ,SAAC5c,EAAGuM,GAAJ,OAAUvM,EAAEoe,MAAQ7R,EAAE6R,QAElC,CACI/X,MAAO,kBACP0V,UAAW,QACXhV,IAAK,QACLoX,iBAAkB,UAClBvB,OAAQ,SAAC5c,EAAGuM,GAAJ,OAAUvM,EAAEqe,MAAQ9R,EAAE8R,SAS1BC,WAAY,CAAEC,SAAU,GACxBf,kBAAqB,SAAAtB,GAAM,OAAI,uBAAG7W,MAAO,CAAE2Y,OAAQ,IAAK,gDAAyB9B,EAAOsC,aACxF3V,WAAYlI,MCEX8d,OAtCjB,YAAmC,IAAR9d,EAAO,EAAPA,KACvB,OACI,kBAAC,IAAM8D,SAAP,KACI,kBAAC,KAAD,CACI9D,KAAM,CACN,CAAC7B,KAAM,MAAO4f,OAAQ/d,EAAKge,YAAY,GAAIva,OAAQzD,EAAKge,YAAY,KAEpEZ,OAAS,CAACzY,MAAO,IAAK4B,OAAQ,IAAKb,MAAO,YAG9C,kBAAC,KAAD,CACI1F,KAAM,CACN,CAAC7B,KAAM,MAAO4f,OAAQ/d,EAAKie,kBAAkB,GAAIxa,OAAQzD,EAAKie,kBAAkB,KAEhFb,OAAS,CAACzY,MAAO,IAAK4B,OAAQ,IAAKb,MAAO,kBAE9C,kBAAC,KAAD,CACI1F,KAAM,CACN,CAAC7B,KAAM,MAAO4f,OAAQ/d,EAAKke,WAAW,GAAIza,OAAQzD,EAAKke,WAAW,KAElEd,OAAS,CAACzY,MAAO,IAAK4B,OAAQ,IAAKb,MAAO,0BAE9C,kBAAC,KAAD,CACI1F,KAAM,CACN,CAAC7B,KAAM,MAAO4f,OAAQ/d,EAAKme,iBAAiB,GAAI1a,OAAQzD,EAAKme,iBAAiB,KAE9Ef,OAAS,CAACzY,MAAO,IAAK4B,OAAQ,IAAKb,MAAO,sBAE9C,kBAAC,KAAD,CACI1F,KAAM,CACN,CAAC7B,KAAM,MAAO4f,OAAQ/d,EAAKoe,WAAW,GAAI3a,OAAQzD,EAAKoe,WAAW,KAElEhB,OAAS,CAACzY,MAAO,IAAK4B,OAAQ,IAAKb,MAAO,wBC0BzCoY,OAzDjB,YAAoC,IAAR9d,EAAO,EAAPA,KA+BlBmX,EAAU,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,WAE3F,OACI,kBAAC,IAAM1T,SAAP,KACI,kBAAC,IAAW2C,MAAZ,CAAkBC,MAAO,GAAzB,qBACA,kBAAC,KAAD,CACIyU,QAnCI,CACZ,CACIzV,MAAO,QACP0V,UAAW,cACXhV,IAAK,eAET,CACIV,MAAO,aACP0V,UAAW,QACXhV,IAAK,QACLoX,iBAAkB,UAClBvB,OAAQ,SAAC5c,EAAGuM,GAAJ,OAAUvM,EAAEoe,MAAQ7R,EAAE6R,QAElC,CACI/X,MAAO,iBACP0V,UAAW,aACXhV,IAAK,aACLoX,iBAAkB,UAClBvB,OAAQ,SAAC5c,EAAGuM,GAAJ,OAAUvM,EAAEoe,MAAQ7R,EAAE6R,QAElC,CACI/X,MAAO,uBACP0V,UAAW,mBACXhV,IAAK,mBACLoX,iBAAkB,UAClBvB,OAAQ,SAAC5c,EAAGuM,GAAJ,OAAUvM,EAAEqe,MAAQ9R,EAAE8R,SAW1BC,WAAY,CAAEC,SAAU,GACxBf,kBAAoB,SAAAtB,GAAM,OACtB,2BACI,4CAAoB,6BADxB,SAEWA,EAAOW,YAAY,6BAF9B,aAGeX,EAAOuB,gBAAgB,6BAHtC,SAIY,IAAIpF,KAAK6D,EAAOwB,kBAAmBhF,eAAe,QAASZ,GAJvE,MAIqF,IAAIO,KAAK6D,EAAOyB,gBAAiBjF,eAAe,QAASZ,GAAS,6BAAK,6BAExJ,yCACCoE,EAAO8C,UAAU,6BAAK,6BAEvB,kBAACC,GAAD,CAAuBte,KAAMub,MAGrCrT,WAAYlI,MCVXue,OA3CjB,YAAsC,IAARve,EAAO,EAAPA,KAEpBmb,EAAU,CACZ,CACIzV,MAAO,GACP0V,UAAW,QACXhV,IAAK,QACLoY,UAAU,EACVnD,OAAQ,SAAC7J,GAAD,OAAkB,2BAAIA,KAElC,CACE9L,MAAO,QACP0V,UAAW,QACXhV,IAAK,QACLoY,UAAU,GAEZ,CACE9Y,MAAO,QACP0V,UAAW,QACXhV,IAAK,QACLoY,UAAU,IAOhB,OACI,kBAAC,IAAM1a,SAAP,KACI,kBAAC,IAAW2C,MAAZ,CAAkBC,MAAO,GAAzB,uBACA,kBAAC,KAAD,CACIwB,WAAYlI,EACZmb,QAASA,EACT0B,kBAAqB,SAAAtB,GAAM,OAAI,uBAAG7W,MAAO,CAAE2Y,OAAQ,IAAK,gDAAyB9B,EAAOvX,OACxFya,cAAiB,SAAAlD,GAAM,MAAqB,UAAjBA,EAAOjL,OAClCqN,YAAY,IAEhB,6BACA,+BC4DKe,GA5FC,SAAC,GAAa,IAAZnK,EAAW,EAAXA,MAAW,EAECzG,mBAAS,CAAC,EAAG,EAAG,EAAG,IAFpB,oBAEpB6Q,EAFoB,KAEZC,EAFY,OAGO9Q,mBAAS,IAHhB,oBAGpB+Q,EAHoB,KAGTC,EAHS,OAIShR,mBAAS,IAJlB,oBAIpBiR,EAJoB,KAIRC,EAJQ,OAKClR,mBAAS,IALV,oBAKpBsK,EALoB,KAKZC,EALY,KAOrB4G,EAAYzb,sBAAW,sBAAC,4BAAAnE,EAAA,+EAEEiC,EAAS8M,IAAI,8BAA+B,CAChEgF,OAAQ,CACJ+B,OAAQZ,KAJM,OAEhBpV,EAFgB,OAOtByf,EAAUzf,EAASa,MAPG,gDAStB2B,QAAQrC,MAAR,MATsB,yDAW3B,CAACiV,IAEJ1R,qBAAU,WACF0R,GACA0K,EAAU1K,KAEf,IAEH,IAAM2K,EAAe1b,sBAAW,sBAAC,4BAAAnE,EAAA,+EAEDiC,EAAS8M,IAAI,iCAAkC,CACnEgF,OAAQ,CACJ+B,OAAQZ,KAJS,OAEnBpV,EAFmB,OAOzB2f,EAAa3f,EAASa,MAPG,gDASzB2B,QAAQrC,MAAR,MATyB,yDAW9B,CAACiV,IAEJ1R,qBAAU,WACF0R,GACA2K,EAAa3K,KAElB,IAEH,IAAM4K,EAAgB3b,sBAAW,sBAAC,4BAAAnE,EAAA,+EAEFiC,EAAS8M,IAAI,mCAAoC,CACrEgF,OAAQ,CACJ+B,OAAQZ,KAJU,OAEpBpV,EAFoB,OAO1B6f,EAAc7f,EAASa,MAPG,gDAS1B2B,QAAQrC,MAAR,MAT0B,yDAW/B,CAACiV,IAEJ1R,qBAAU,WACF0R,GACA4K,EAAc5K,KAEnB,IAEH,IAAM6K,EAAY5b,sBAAW,sBAAC,4BAAAnE,EAAA,+EAEEiC,EAAS8M,IAAI,+BAAgC,CACjEgF,OAAQ,CACJ+B,OAAQZ,KAJM,OAEhBpV,EAFgB,OAOtBkZ,EAAUlZ,EAASa,MAPG,gDAStB2B,QAAQrC,MAAR,MATsB,yDAW3B,CAACiV,IAQJ,OANA1R,qBAAU,WACF0R,GACA6K,EAAU7K,KAEf,IAGD,kBAAC,IAAMzQ,SAAP,KACM,kBAAC,IAAW2C,MAAZ,CAAkBC,MAAO,GAAzB,aACI,kBAAC,GAAD,CAAiB1G,KAAO2e,IACxB,kBAAC,GAAD,CAAoB3e,KAAM6e,IAC1B,kBAAC,GAAD,CAAsB7e,KAAM+e,IAC5B,kBAAC,GAAD,CAAkB/e,KAAMoY,M,UC5FhC3R,GAAU6I,IAAV7I,MACAwI,GAAWiJ,KAAXjJ,OAqJOoQ,OAnJf,YAA8B,IAAT9K,EAAQ,EAARA,MAAQ,EACKzG,mBAAS,IADd,oBAClBwR,EADkB,KACTC,EADS,OAEKzR,oBAAS,GAFd,oBAElBiD,EAFkB,KAET6J,EAFS,QAGLjc,aAAaC,QAAQ,WACPkP,oBAAS,IAJlB,oBAIlB0R,EAJkB,KAIPC,EAJO,OAK2B3R,oBAAS,GALpC,oBAKlB4R,EALkB,KAKEC,EALF,OAMmB7R,mBAAS,IAN5B,oBAMlB8R,EANkB,KAMFC,EANE,OAOW/R,mBAAS,GAPpB,oBAOlBgS,EAPkB,KAONC,EAPM,KASnBC,EAAaxc,sBAAW,sBAAC,4BAAAnE,EAAA,+EAECiC,EAAS8M,IAAI,4BAA6B,CAC9DgF,OAAQ,CACJ+B,OAAQZ,KAJO,QAEjBpV,EAFiB,QAOda,KAAK+a,SAAQ,SAAAkF,GAAM,OAAIA,EAAO7Z,IAAM6Z,EAAO1hB,MACpDghB,EAAWpgB,EAASa,MACpB4a,GAAW,GATY,gDAWvBjZ,QAAQrC,MAAR,MAXuB,yDAa5B,CAACiV,IAEE2L,EAAgB1c,sBAAW,sBAAC,sBAAAnE,EAAA,sEAE1BsgB,GAAsB,GAFI,SAGpBre,EAASnB,KAAK,iBAAkB,CAClCggB,OAAQP,EACR/Q,YAAaiR,EACb3K,OAAQZ,IANc,OAQ1BsL,EAAkB,IAClBG,IACA9d,IAAQ4M,QAAQ,mBAVU,gDAY1BnN,QAAQrC,MAAR,MACA4C,IAAQ5C,MAAM,kCAbY,QAe9BqgB,GAAsB,GAfQ,yDAgB/B,CAACC,EAAgBI,EAAYH,EAAmBC,EAAYvL,EAAOoL,IAEhES,EAAe5c,sBAAW,uCAAC,WAAO6c,GAAP,SAAAhhB,EAAA,+EAEDiC,EAASmU,OAAO,iBAAkB,CACtDrC,OAAQ,CACJ1R,UAAW2e,KAJM,cAOzBd,EAAWD,EAAQjhB,QAAO,SAAA4hB,GAAM,OAAIA,EAAO7Z,MAAQia,MACnDne,IAAQ4M,QAAQ,sBARS,gDAUzBnN,QAAQrC,MAAR,MACA4C,IAAQ5C,MAAM,oCAXW,yDAAD,sDAa7B,CAACggB,IAEJzc,qBAAU,WACF0R,GACAyL,EAAWzL,KAEhB,CAACA,IAEJ,IAAM4G,EAAU,CACZ,CACIzV,MAAO,QACP0V,UAAW,QACXhV,IAAK,SAET,CACIV,MAAO,OACP0V,UAAW,OACXhV,IAAK,OACLiV,OAAQ,SAACC,EAAGC,GAAJ,OACmB,IAAvBA,EAAO1M,YAAoB,QAAU,WAG7C,CACInJ,MAAO,SACP0V,UAAW,SACXhV,IAAK,SACLiV,OAAQ,SAACC,EAAGC,GAAJ,MACJ,WAGR,CACI7V,MAAO,SACPU,IAAK,SACLiV,OAAQ,SAACC,EAAGC,GAAJ,OACJ,kBAAC,KAAD,CAAY7V,MAAM,+CAA+CgW,UAAW,aAAUC,OAAO,MAAMC,WAAW,MAC1G,kBAAC,IAAD,CAAQzd,KAAK,WAAb,aAMZ,CACIuH,MAAO,SACPU,IAAK,SACLiV,OAAQ,SAACC,EAAGC,GAAJ,OACJ,kBAAC,KAAD,CAAY7V,MAAM,mDAAmDgW,UAAW,kBAAM0E,EAAa7E,EAAOnV,MAAMuV,OAAO,MAAMC,WAAW,MACpI,kBAAC,IAAD,CAAQzd,KAAK,UAAUsd,QAAM,GAA7B,cAQhB,OACI,kBAAC,IAAM3X,SAAP,KACI,6BACI,kBAAC,KAAD,CAAKwc,QAAQ,iBACT,kBAAC,GAAD,CAAO5Z,MAAO,GAAd,uBACA,kBAAC,IAAD,CAAQvI,KAAK,UAAU+O,KAAM,kBAACsN,GAAA,EAAD,MAAkBnR,QAAS,kBAAMoW,GAAa,KAA3E,uBAIJ,kBAAC,KAAD,CAAOtE,QAASA,EAASjT,WAAYoX,EAASvO,QAASA,KAE3D,kBAAC,KAAD,CACIwP,QAASf,EACT9Z,MAAM,qBACN8a,KAAM,aACNC,SAAU,kBAAMhB,GAAa,IAC7BiB,OAAQ,CACJ,kBAAC,IAAD,CAAQta,IAAI,OAAOiD,QAAS,kBAAMoW,GAAa,KAA/C,SAGA,kBAAC,IAAD,CAAQrZ,IAAI,SAASjI,KAAK,UAAU4S,QAAS2O,EAAoBrW,QAAS6W,GAA1E,UAKJ,kBAAC,KAAD,CAAQxa,MAAM,SAASmT,aAAc,EAAGnU,MAAO,CAAEC,MAAO,OAAQsL,aAAc,GAAKjB,SAAU+Q,EAAenb,YAAY,eACpH,kBAAC,GAAD,CAAQU,MAAO,GAAf,UACA,kBAAC,GAAD,CAAQA,MAAO,GAAf,UAEJ,kBAAC,KAAD,CAAQqE,KAAK,OAAOjF,MAAO,CAAEC,MAAO,QAAUqK,SAAU,SAAA1J,GAAK,OAAIua,EAAkBva,IAAQqb,gBAAiB,CAAC,KAAM/b,YAAY,SAASgc,YAAU,GAC7I,O,+BChJfC,I,OAAY,CAChBC,SAAU,kBAAC,KAAD,CAAK9I,MAAM,SAAX,YACV+I,SAAU,kBAAC,KAAD,CAAK/I,MAAM,OAAX,YACVgJ,QAAS,kBAAC,KAAD,CAAKhJ,MAAM,UAAX,oBACTiJ,KAAM,8BAGKC,GAAY,SAAC,GAAD,IAAGzhB,EAAH,EAAGA,OAAH,OAAgBohB,GAAUphB,I,UCiIpC0hB,OArIf,YAA4C,IAAnB5M,EAAkB,EAAlBA,MAAO6M,EAAW,EAAXA,SAAW,EACCtT,mBAAS,IADV,oBAChCuT,EADgC,KAClBC,EADkB,KAEjCC,EAAe/d,sBAAW,uCAAC,WAAO+Q,GAAP,mBAAAlV,EAAA,+EAEDiC,EAAS8M,IAAI,6BAA8B,CAC9DgF,OAAQ,CACJxC,OAAQjS,aAAaC,QAAQ,WAC7B2V,MAAOA,KALS,OAElBpV,EAFkB,OAQnBqiB,EAAQriB,EAASa,KACjByhB,EAAiBD,EAAMrb,KAAI,SAAAub,GAAI,MAAK,CACtCC,IAAKD,EAAKnjB,GACVqjB,UAAWF,EAAKG,SAChBpiB,OAAQiiB,EAAKjiB,OACbC,IAAKgiB,EAAKhiB,IACVoiB,QAASJ,EAAKI,YAElBR,EAAgBG,GAhBS,gDAkBzB9f,QAAQrC,MAAR,MAlByB,yDAAD,sDAoB7B,CAACiV,IAEJ1R,qBAAU,WACN0e,EAAahN,KACd,CAACA,IAEJ,IAAM3M,EAAQ,CACVma,SAAU,OACVX,SAAU,GACVpS,SAHU,SAGD8M,GACL,IAAIkG,EAAE,YAAOlG,EAAKsF,UAClBY,EAAKA,EAAG7b,KAAI,SAAAub,GAKR,OAJIA,EAAKviB,WAELuiB,EAAKhiB,IAAMgiB,EAAKviB,SAASa,KAAKiiB,aAE3BP,KAGXJ,EAAgBU,KAIlB7G,EAAU,CACZ,CACIzV,MAAO,kBACP0V,UAAW,kBACXhV,IAAK,kBACLiV,OAAQ,SAAA3b,GAAG,OAAMA,EAAM,uBAAG+J,OAAO,SAAS5J,KAAMH,GAAMA,EAAIwiB,MAAM,KAAKC,OAAO,GAAG,GAAGD,MAAM,KAAK,IAAU,OAE3G,CACIxc,MAAO,qBACP0V,UAAW,gBACXhV,IAAK,gBACLiV,OAAQ,SAAA3b,GAAG,OAAMA,EAAM,uBAAG+J,OAAO,SAAS5J,KAAMH,GAAMA,EAAIwiB,MAAM,KAAKC,OAAO,GAAG,GAAGD,MAAM,KAAK,IAAU,OAE3G,CACIxc,MAAO,SACP0V,UAAW,SACXhV,IAAK,SACLiV,OAAQ,SAAC+G,EAAO7G,GAAR,OAAmB,kBAAC2F,GAAD,CAAWzhB,OAAQ8b,EAAO9b,WAEzD,CACIiG,MAAO,UACP0V,UAAW,UACXhV,IAAK,UACLiV,OAAQ,SAAC7J,EAAM6Q,GAAP,OAAmB,2BAAI7Q,KAEnC,CACI9L,MAAO,kBACPU,IAAK,SACLiV,OAAQ,SAACE,GAAD,OACJ,kBAAC,KAAD,iBAAY3T,EAAZ,CACI0a,cAAa,uCAAE,WAAOnL,GAAP,iBAAA9X,EAAA,6DACDkjB,EAAW,IAAIC,UACZC,OAAO,cAAelH,EAAOnV,KACtCmc,EAASE,OAAO,UAAW9jB,aAAaC,QAAQ,YAChD2jB,EAASE,OAAO,cAAetL,EAAQuK,KAAMvK,EAAQuK,KAAK1d,MAC1Due,EAASE,OAAO,SAAU,WAC1BF,EAASE,OAAO,UAAW,OANpB,kBAQcnhB,EAASnB,KAAK,8BAA+BoiB,EAAU,CACpEtjB,QAAS,CACT,eAAgB,yEAVjB,OAQCe,EARD,OAaHmX,EAAQuL,UAAU1iB,EAAMmX,EAAQuK,MAChCH,EAAahN,GACbrS,IAAQ4M,QAAQ,iBAfb,kDAiBH5M,IAAQ4M,QAAQ,yBAChBnN,QAAQC,IAAR,MAlBG,0DAAF,wDAuBb,kBAAC,IAAD,CAAQsL,KAAM,kBAACyV,GAAA,EAAD,OAAd,gBAMhB,SAASC,EAAsBC,EAAUC,GACrC,OAAKzB,EAAahjB,QAAO,SAAA0kB,GAAK,OAAIA,EAAMnB,WAAakB,KAAU3I,OAAS,EACnDkH,EAAahjB,QAAO,SAAA0kB,GAAK,OAAIA,EAAMnB,WAAakB,KAAS,GAC1DD,GAGJ,UAAZA,EACO,OAGJ,KAGX,IAAM7iB,EAAOohB,EAASjb,KAAI,SAACub,EAAK1a,GAAN,MAAa,CACnC,IAAO0a,EAAKC,IACZ,gBAAmBD,EAAKhiB,IACxB,cAAiBkjB,EAAsB,MAAOlB,EAAKC,KACnD,OAAUiB,EAAsB,SAAUlB,EAAKC,KAC/C,QAAWiB,EAAsB,UAAWlB,EAAKC,SAKrD,OAFAhgB,QAAQC,IAAI5B,GAGR,6BACG,kBAAC,KAAD,CAAOmb,QAASA,EAASjT,WAAYlI,MCnI9BsP,IAAV7I,MAqFOuc,OAnFf,YAAiD,IAAvB3O,EAAsB,EAAtBA,QAASE,EAAa,EAAbA,MAAO0O,EAAM,EAANA,IAAM,EACZnV,mBAAS,IADG,oBACrCsT,EADqC,KAC3B8B,EAD2B,KAGtCC,EAAc3f,sBAAW,uCAAC,WAAO+Q,GAAP,mBAAAlV,EAAA,+EAEDiC,EAAS8M,IAAI,sCAAuC,CACvEgF,OAAQ,CACJmB,MAAOA,EACP6O,QAASH,KALO,OAElB9jB,EAFkB,OAQlBqiB,EAAQriB,EAASa,KACvB2B,QAAQC,IAAI,QAAS4f,GAEfC,EAAiBD,EAAMrb,KAAI,SAAAub,GAAI,MAAK,CACtCtb,IAAKsb,EAAKnjB,GACVojB,IAAKD,EAAKnjB,GACVyF,KAAM0d,EAAKhiB,IAAIwiB,MAAM,KAAKC,OAAO,GAAG,GAAGD,MAAM,KAAK,GAClDziB,OAAQ,OACRC,IAAKgiB,EAAKhiB,IACVsD,MAAO0e,EAAK1e,MACZqgB,UAAW3B,EAAKxF,gBAEpBva,QAAQC,IAAI6f,GACZyB,EAAYzB,GArBY,kDAuBxB9f,QAAQrC,MAAR,MAvBwB,0DAAD,sDAyB5B,CAACiV,IAEJ1R,qBAAU,WACNsgB,EAAY5O,KACb,CAACA,IAEJ,IAAM+O,EAAW,CACbvB,SAAU,UACVX,SAAUA,EACVpS,SAHa,SAGJ8M,GACL,IAAIkG,EAAE,YAAOlG,EAAKsF,UAClBY,EAAKA,EAAG7b,KAAI,SAAAub,GAKR,OAJIA,EAAKviB,WAELuiB,EAAKhiB,IAAMgiB,EAAKviB,SAASa,KAAKujB,YAE3B7B,KAGXwB,EAAYlB,IAEhBM,cAAc,WAAD,4BAAE,WAAenL,GAAf,iBAAA9X,EAAA,6DACLkjB,EAAW,IAAIC,UACZC,OAAO,aAActL,EAAQuK,KAAMvK,EAAQuK,KAAK1d,MACzDue,EAASE,OAAO,QAASlO,GACzBgO,EAASE,OAAO,UAAWQ,GAJhB,kBAMU3hB,EAASnB,KAAK,6BAA8BoiB,EAAU,CACnEtjB,QAAS,CACT,eAAgB,yEARb,OAMHe,EANG,OAWPmX,EAAQuL,UAAU1iB,EAAMmX,EAAQuK,MAChCxf,IAAQ4M,QAAQ,iBAZT,kDAcP5M,IAAQ4M,QAAQ,yBAChBnN,QAAQC,IAAR,MAfO,0DAAF,mDAAC,IAoBlB,OACI,6BACKyS,EACG,oCACI,kBAAC,KAAWiP,EACR,kBAAC,IAAD,CAAQpW,KAAM,kBAACyV,GAAA,EAAD,OAAd,qBAGR,kBAAC,GAAD,CAAgBpO,MAAOA,EAAO6M,SAAUA,MC/EhD3a,GAAU6I,IAAV7I,MAiEO+c,OA/Df,YAAuC,IAAlBnP,EAAiB,EAAjBA,QAASE,EAAQ,EAARA,MAAQ,EACJzG,oBAAS,GADL,oBAC3BiD,EAD2B,KAClB6J,EADkB,OAEN9M,mBAAS,IAFH,oBAE3BsK,EAF2B,KAEnBC,EAFmB,KAI5BlB,EAAU,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,WAErFgB,EAAiBhV,sBAAW,sBAAC,8BAAAnE,EAAA,+EAEJiC,EAAS8M,IAAI,qBAAsB,CACtDgF,OAAQ,CACJmB,MAAOA,KAJY,OAErBpV,EAFqB,QAQrBa,EAAOb,EAASa,MACjBmG,KAAI,SAAAqD,GACLA,EAAEia,MAAS,IAAI/L,KAAKlO,EAAEiO,WAAYM,eAAe,QAASZ,GAC1D3N,EAAEka,MAAS,IAAIhM,KAAKlO,EAAEmO,SAAUI,eAAe,QAASZ,MAG5DkB,EAAUrY,GACV4a,GAAW,GAfgB,kDAiB3BjZ,QAAQrC,MAAR,MAjB2B,0DAmBhC,CAAC+Y,EAAW9D,IAwBf,OAtBA1R,qBAAU,WACN2V,MACD,CAACjE,EAAOiE,IAqBP,kBAAC,IAAM1U,SAAP,KACI,kBAAC,GAAD,CAAO4C,MAAO,GAAd,yCACA,kBAAC,KAAD,CACIyU,QAtBI,CACZ,CACIzV,MAAO,QACP0V,UAAW,OACXhV,IAAK,QAET,CACIV,MAAO,aACP0V,UAAW,QACXhV,IAAK,SAET,CACIV,MAAO,WACP0V,UAAW,QACXhV,IAAK,UASD8B,WAAYkQ,EACZrH,QAASA,EACT8L,kBAAoB,SAAAtB,GAAM,OACtB,kBAAC,GAAD,CAAiBlH,QAASA,EAASE,MAAOA,EAAO0O,IAAK1H,EAAOhd,U,UC5DzE4V,GAAc7E,IAAd6E,UA0GOwP,OAxGf,YAA0C,IAAdpP,EAAa,EAAbA,MAAO0O,EAAM,EAANA,IAAM,EACbnV,mBAAS,IADI,oBAC9BmD,EAD8B,KACxB2S,EADwB,KAqC/BrC,EAAe/d,sBAAW,uCAAC,WAAO+Q,GAAP,mBAAAlV,EAAA,+EAEFiC,EAAS8M,IAAI,qCAAsC,CACtEgF,OAAQ,CACJmB,MAAOA,EACP6O,QAASH,KALQ,OAEnB9jB,EAFmB,OAQnBqiB,EAAQriB,EAASa,KACjB6jB,EAASrC,EAAMrb,KAAI,SAACub,EAAK1a,GAAN,MAAa,CAClCZ,IAAKsb,EAAKnjB,GACViR,KAAMkS,EAAKoC,YACXpkB,IAAKgiB,EAAKhiB,IACVD,OAAQiiB,EAAKjiB,OACbqiB,QAASJ,EAAKI,YAElB8B,EAAQC,GAhBiB,gDAkBzBliB,QAAQrC,MAAR,MAlByB,yDAAD,sDAoB7B,CAACiV,IAEJ1R,qBAAU,WACN0e,EAAahN,KACd,CAACA,IAEJ,IAAM4G,EAAU,CACZ,CACIzV,MAAO,OACP0V,UAAW,OACXhV,IAAK,OACLiV,OAAQ,SAAA7J,GAAI,OAAI,2BAAIA,KAExB,CACI9L,MAAO,OACP0V,UAAW,MACXhV,IAAK,MACLiV,OAAQ,SAAA3b,GAAG,OAAMA,EAAM,uBAAG+J,OAAO,SAAS5J,KAAMH,GAAMA,EAAIwiB,MAAM,KAAKC,OAAO,GAAG,GAAGD,MAAM,KAAK,IAAU,OAE3G,CACIxc,MAAO,SACPU,IAAK,SACLiV,OAAQ,SAAC7J,EAAM+J,EAAQwI,GAAf,OACJ,kBAAC,KAAM1f,MAAP,CAAawU,aAAc0C,EAAO9b,OAAQuP,SAAU,SAAC1J,GAAD,OA7EhE,SAAwBA,EAAOiW,GAC3B5Z,QAAQC,IAAI0D,EAAMmE,OAAOnE,OACzB3D,QAAQC,IAAI2Z,GAEZ,IAAM9b,EAAS6F,EAAMmE,OAAOnE,MAE5B,IACqBhE,EAASnB,KAAK,mCAC3B,CACI5B,GAAIgd,EAAOnV,IACX3G,OAAQA,IAGlB,MAAMH,GACJqC,QAAQrC,MAAMA,IA+DqD0kB,CAAe1e,EAAOiW,IAAS0I,YAAY,SAC1G,kBAAC,KAAM1c,OAAP,CAAcjC,MAAM,YAApB,UACA,kBAAC,KAAMiC,OAAP,CAAcjC,MAAM,YAApB,aAIR,CACII,MAAO,UACP0V,UAAW,UACXhV,IAAK,UACLiV,OAAQ,SAAC7J,EAAK+J,EAAQwI,GAAd,OACP,yBAAKrf,MAAO,CAAEuR,WAAY,EAAGC,SAAU,MACpC,kBAAC,GAAD,CAAWxR,MAAO,CAAEC,MAAO,QAAUwR,SAAU,CAAEnH,SAAU,SAAC1J,GAAD,OAvEvE,SAAoBA,EAAOiW,GACvB,IAAMuG,EAAUxc,EAEhB,IACqBhE,EAASnB,KAAK,mCAC3B,CACI5B,GAAIgd,EAAOnV,IACX0b,QAASA,IAGjBP,EAAahN,GACf,MAAMjV,GACJqC,QAAQrC,MAAMA,IA2D4D4kB,CAAW5e,EAAOiW,MAAYA,EAAOuG,aAMvH,OACI,6BACG,kBAAC,KAAD,CAAO3G,QAASA,EAASjT,WAAY+I,MCrGxCxK,GAAU6I,IAAV7I,MAiEO0d,OA/Df,YAA6C,IAAT5P,EAAQ,EAARA,MAAQ,EACVzG,oBAAS,GADC,oBACjCiD,EADiC,KACxB6J,EADwB,OAEZ9M,mBAAS,IAFG,oBAEjCsK,EAFiC,KAEzBC,EAFyB,KAIlCG,EAAiBhV,sBAAW,sBAAC,8BAAAnE,EAAA,+EAEJiC,EAAS8M,IAAI,qBAAsB,CACtDgF,OAAQ,CACJmB,MAAOA,KAJY,OAErBpV,EAFqB,QAQrBa,EAAOb,EAASa,MACjBmG,KAAI,SAAAqD,GACLA,EAAEia,MAAS,IAAI/L,KAAKlO,EAAEiO,WAAYM,eAAe,QAASZ,GAC1D3N,EAAEka,MAAS,IAAIhM,KAAKlO,EAAEmO,SAAUI,eAAe,QAASZ,MAG5DkB,EAAUrY,GACV4a,GAAW,GAfgB,kDAiB3BjZ,QAAQrC,MAAR,MAjB2B,0DAmBhC,CAAC+Y,EAAW9D,IAEf1R,qBAAU,WACN2V,MACD,CAACjE,EAAOiE,IAEX,IAkBMrB,EAAU,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,WAG3F,OACI,kBAAC,IAAM1T,SAAP,KACI,kBAAC,GAAD,CAAO4C,MAAO,GAAd,8BACA,kBAAC,KAAD,CACIyU,QAzBI,CACZ,CACIzV,MAAO,QACP0V,UAAW,OACXhV,IAAK,QAET,CACIV,MAAO,aACP0V,UAAW,QACXhV,IAAK,SAET,CACIV,MAAO,WACP0V,UAAW,QACXhV,IAAK,UAYD8B,WAAYkQ,EACZrH,QAASA,EACT8L,kBAAoB,SAAAtB,GAAM,OACtB,kBAAC,GAAD,CAAmBhH,MAAOA,EAAO0O,IAAK1H,EAAOhd,UC1DzDoP,I,OAAaC,IAAbD,UAEAlH,GAAU6I,IAAV7I,MA4HO2d,OA1Hf,YAA4B,IAAT7P,EAAQ,EAARA,MAAQ,EACOzG,mBAAS,IADhB,oBAChB4M,EADgB,KACPC,EADO,OAEO7M,oBAAS,GAFhB,oBAEhBiD,EAFgB,KAEP6J,EAFO,OAGe9M,mBAAS,IAHxB,oBAGhBuW,EAHgB,KAGHC,EAHG,KAIjBjhB,EAAWC,cAEXwX,EAAatX,sBAAW,sBAAC,4BAAAnE,EAAA,+EAECiC,EAAS8M,IAAI,4BAA6B,CAC9DgF,OAAQ,CACJ+B,OAAQZ,KAJO,QAEjBpV,EAFiB,QAOda,KAAK+a,SAAQ,SAAApO,GAAM,OAAIA,EAAOvG,IAAMuG,EAAOpO,MACpDoc,EAAWxb,EAASa,MACpB4a,GAAW,GATY,gDAWvBjZ,QAAQrC,MAAR,MAXuB,yDAa5B,CAACiV,IAEJ1R,qBAAU,WACF0R,GACAuG,EAAWvG,KAEhB,CAACuG,EAAYvG,IAEhB,IAAMvF,EAAWxL,uBAAY,SAAC+gB,EAAkBC,GAC5CF,EAAeE,KAChB,IAiCGjhB,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,SAAApE,EAAA,6DACzBsC,QAAQC,IAAIyiB,GADa,kBAGf/iB,EAASnB,KAAK,gBAAiB,CACjCskB,QAAShhB,EAAOghB,QAChBC,KAAMjhB,EAAOihB,KACbC,YAAaN,IANI,OAQrBhhB,EAASpB,EAAS,aAAc,YARX,gDAWrBoB,EAASpB,EAAS,iBAAkB,UAXf,yDAAD,sDAazB,CAACoB,EAAUghB,IAGd,OACI,kBAAC,IAAMvgB,SAAP,KACI,kBAAC,GAAD,CAAO4C,MAAO,GAAd,iBAEA,kBAAC,KAAD,CACIzC,UAAY,eACZ2gB,aAAc,CAAE5V,YAChBmM,QArDI,CACZ,CACIzV,MAAO,QACP0V,UAAW,CAAC,OAAQ,cACpBhV,IAAK,QACLzB,MAAO,OAEX,CACIe,MAAO,OACP0V,UAAW,CAAC,OAAQ,aACpBhV,IAAK,OACLzB,MAAO,OAEX,CACIe,MAAO,QACP0V,UAAW,CAAC,OAAQ,SACpBhV,IAAK,QACLzB,MAAO,OAEX,CACIe,MAAO,OACP0V,UAAW,OACXhV,IAAK,OACLiV,OAAQ,SAACC,EAAGC,GAAJ,OACmB,IAAvBA,EAAO1M,YAAoB,QAAU,UAEzClK,MAAO,QA4BHuD,WAAYwS,EACZ3J,QAASA,IAEb,kBAAC,IAAD,CACI/M,KAAK,MACLC,UAAU,WACVC,cAAe,CAAEC,UAAU,GAC3BZ,SAAUA,GAEV,kBAAC,IAAKa,KAAN,CACIJ,KAAK,UACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,gCAEnC,kBAAC,IAAD,CAAO0C,YAAY,mBAGvB,kBAAC,IAAKR,KAAN,CACIJ,KAAK,OACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,6BAC/B,kBAAC,GAAD,CAAUiN,IAAK,EAAGzK,MAAO,CAAEC,MAAO,QAAUC,YAAY,wBAGhE,kBAAC,IAAKR,KAAN,KACA,kBAAC,IAAD,CAAQjG,KAAK,UAAUqH,SAAS,SAASvB,UAAU,mBAAnD,kBCrHRwC,GAAU6I,IAAV7I,MAkEOoe,OAhEf,YAA6B,IAATtQ,EAAQ,EAARA,MAAQ,EACUzG,mBAAS,IADnB,oBACjBuQ,EADiB,KACNyG,EADM,OAEMhX,oBAAS,GAFf,oBAEjBiD,EAFiB,KAER6J,EAFQ,KAIlBmK,EAAevhB,sBAAW,sBAAC,4BAAAnE,EAAA,+EAEDiC,EAAS8M,IAAI,uBAAwB,CACzDgF,OAAQ,CACJ+B,OAAQZ,KAJS,OAEnBpV,EAFmB,OAOzB2lB,EAAa3lB,EAASa,MACtB4a,GAAW,GARc,gDAUzBjZ,QAAQrC,MAAR,MAVyB,yDAY9B,CAACiV,IAEJ1R,qBAAU,WACNkiB,MACD,IAEH,IAiBM5N,EAAU,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,WAE3F,OACI,kBAAC,IAAM1T,SAAP,KACI,kBAAC,GAAD,CAAO4C,MAAO,GAAd,aACA,kBAAC,KAAD,CACIyU,QAvBI,CACZ,CACIzV,MAAO,iBACP0V,UAAW,eACXhV,IAAK,gBAET,CACIV,MAAO,YACP0V,UAAW,QACXhV,IAAK,SAET,CACIV,MAAO,MACP0V,UAAW,uBACXhV,IAAK,yBAUD8B,WAAYmW,EACZtN,QAASA,EACT8L,kBAAoB,SAAAtB,GAAM,OACtB,2BACI,4CAAoB,6BADxB,SAEWA,EAAOyJ,aAAa,6BAF/B,aAGezJ,EAAO0J,iBAAiB,6BAHvC,SAIY,IAAIvN,KAAK6D,EAAO2J,mBAAoBnN,eAAe,QAASZ,GAJxE,MAIsF,IAAIO,KAAK6D,EAAO4J,iBAAkBpN,eAAe,QAASZ,GAAS,6BAAK,6BAE1J,0CACCoE,EAAO8C,gBC9CxB5X,I,OAAU6I,IAAV7I,OACA4L,GAAYC,KAAZD,QA6EO+S,OA3Ef,YAAmC,IAAjBzY,EAAgB,EAAhBA,OAAQ4H,EAAQ,EAARA,MAAQ,EACRzG,mBAAS,MADD,oBACvBuL,EADuB,KAClBgM,EADkB,OAEIvX,mBAAS,QAFb,oBAEvBwX,EAFuB,KAEZC,EAFY,KAGxBlR,EAAkC,KAAlB,OAAN1H,QAAM,IAANA,OAAA,EAAAA,EAAQkC,aAgBxB,OATAhM,qBAAU,WACF0R,IACI5H,GACA0Y,EAAO1Y,EAAOM,cAElBsY,EAAa,WAElB,CAACA,EAAchR,EAAO5H,IAGrB,kBAAC,IAAM7I,SAAP,KACKuV,GAAO,kBAAC,GAAD,CAAO3U,MAAO,CAAE8gB,UAAW,UAAY9e,MAAO,GAAI2S,EAAIrV,MAC9D,kBAAC,KAAD,CAAMshB,UAAWA,EAAWtW,SAjBnB,SAAC5I,GACdmf,EAAanf,GACb5D,EAAa,IAAM4D,IAeiC1B,MAAO,CAAE6B,OAAQ,SAC7D,kBAAC,GAAD,CAASkM,IAAI,OAAOrM,IAAI,OAAO1B,MAAO,CAAE6B,OAAQ,SAC5C,kBAAC,GAAD,CAAS8S,IAAKA,KAEjBhF,GACI,kBAAC,GAAD,CAAS5B,IAAI,UAAUrM,IAAI,WACxB,kBAAC,GAAD,CAAYmO,MAAOA,KAG3B,kBAAC,GAAD,CAAS9B,IAAI,SAASrM,IAAI,UACtB,kBAAC,GAAD,CAAWmO,MAAOA,EAAOqC,UAAU,EAAOwM,SAAU,KAExD,kBAAC,GAAD,CAAS3Q,IAAI,mBAAmBrM,IAAI,aAChC,kBAAC,GAAD,CAAYiO,QAASA,EAASE,MAAOA,KAExCF,GACD,kBAAC,GAAD,CAAS5B,IAAI,YAAYrM,IAAI,aACzB,kBAAC,GAAD,CAAWmO,MAAOA,KAGrBF,GACG,kBAAC,GAAD,CAAS5B,IAAI,sBAAsBrM,IAAI,mBACnC,kBAAC,GAAD,CAA2BmO,MAAOA,KAG1C,kBAAC,GAAD,CAAS9B,IAAI,WAAWrM,IAAI,YACxB,kBAAC,GAAD,CAAaiO,QAAO,OAAE1H,QAAF,IAAEA,OAAF,EAAEA,EAAQkC,YAAa0F,MAAOA,KAErDF,GACD,kBAAC,GAAD,CAAS5B,IAAI,YAAYrM,IAAI,aACzB,kBAAC,GAAD,CAAWmO,MAAOA,KAGtB,kBAAC,GAAD,CAAS9B,IAAI,MAAMrM,IAAI,OACnB,kBAAC,GAAD,CAAWiO,QAASA,EAASE,MAAOA,KAEvCF,GACI,kBAAC,GAAD,CAAS5B,IAAI,UAAUrM,IAAI,WACxB,kBAAC,GAAD,CAAYmO,MAAOA,KAG1BF,GACG,kBAAC,GAAD,CAAS5B,IAAI,gBAAgBrM,IAAI,iBAC7B,kBAAC,GAAD,CAAUmO,MAAOA,QCxCxBkR,OA1CjB,YAA6C,IAARzlB,EAAO,EAAPA,KA+BjC,OACI,kBAAC,IAAM8D,SAAP,KACI,kBAAC,IAAW2C,MAAZ,CAAkBC,MAAO,GAAzB,qBACA,kBAAC,KAAD,CACIyU,QAjCI,CACZ,CACIzV,MAAO,QACP0V,UAAW,cACXhV,IAAK,eAET,CACIV,MAAO,YACP0V,UAAW,6BACXhV,IAAK,8BAET,CACIV,MAAO,SACP0V,UAAW,UACXhV,IAAK,UACL6V,OAAQ,SAAC5c,EAAGuM,GAAJ,OAAUvM,EAAEmd,QAAU5Q,EAAE4Q,SAChCgB,iBAAkB,WAEtB,CACI9X,MAAO,eACP0V,UAAW,eACXhV,IAAK,eACL6V,OAAQ,SAAC5c,EAAGuM,GAAJ,OAAUvM,EAAEod,aAAe7Q,EAAE6Q,cACrCe,iBAAkB,YAWdG,WAAY,CAAEC,SAAU,GACxB1V,WAAYlI,MCCX0lB,OAtCjB,YAAsC,IAAR1lB,EAAO,EAAPA,KA0B1B,OACI,kBAAC,IAAM8D,SAAP,KACI,kBAAC,IAAW2C,MAAZ,CAAkBC,MAAO,GAAzB,uBACA,kBAAC,KAAD,CACIyU,QA5BI,CACZ,CACIzV,MAAO,YACP0V,UAAW,8BACXhV,IAAK,+BAET,CACIV,MAAO,SACP0V,UAAW,QACXhV,IAAK,QACL6V,OAAQ,SAAC5c,EAAGuM,GAAJ,OAAUvM,EAAEoe,MAAQ7R,EAAE6R,OAC9BD,iBAAkB,WAEtB,CACI9X,MAAO,QACP0V,UAAW,QACXhV,IAAK,QACL6V,OAAQ,SAAC5c,EAAGuM,GAAJ,OAAUvM,EAAEsmB,MAAQ/Z,EAAE+Z,OAC9BnI,iBAAkB,YAWdG,WAAY,CAAEC,SAAU,GACxBf,kBAAqB,SAAAtB,GAAM,OAAI,uBAAG7W,MAAO,CAAE2Y,OAAQ,IAAK,gDAAyB9B,EAAOnD,SACxFlQ,WAAYlI,MCoBX4lB,OArDjB,YAAoC,IAAR5lB,EAAO,EAAPA,KAElBmb,EAAU,CACZ,CACIzV,MAAO,GACP0V,UAAW,QACXhV,IAAK,QACLoY,UAAU,EACVnD,OAAQ,SAAC7J,GAAD,OAAkB,2BAAIA,KAElC,CACE9L,MAAO,aACP0V,UAAW,aACXhV,IAAK,aACLoY,UAAU,GAEZ,CACE9Y,MAAO,SACP0V,UAAW,SACXhV,IAAK,SACLoY,UAAU,GAEZ,CACI9Y,MAAO,QACP0V,UAAW,QACXhV,IAAK,QACLoY,UAAU,IAOlB,OACI,kBAAC,IAAM1a,SAAP,KACI,kBAAC,IAAW2C,MAAZ,CAAkBC,MAAO,GAAzB,WACA,kBAAC,KAAD,CACIwB,WAAYlI,EACZmb,QAASA,EACT0B,kBAAqB,SAAAtB,GAAM,OACvB,uBAAG7W,MAAO,CAAE2Y,OAAQ,IAChB,2CAAoB9B,EAAOsK,gBAAgB,6BAC3C,uCAAgBtK,EAAOuK,YAAY,+BAG3CnI,YAAY,IAEhB,6BACA,+B,UCDKoI,OA/CjB,YAAkC,IAAR/lB,EAAO,EAAPA,KAEhBmb,EAAU,CACZ,CACIzV,MAAO,aACP0V,UAAW,YACXhV,IAAK,YACLoX,iBAAkB,WAEtB,CACI9X,MAAO,WACP0V,UAAW,UACXhV,IAAK,UACLoX,iBAAkB,UAEtB,CACI9X,MAAO,kBACP0V,UAAW,YACXhV,IAAK,aAET,CACIV,MAAO,aACP0V,UAAW,QACXhV,IAAK,SAET,CACIV,MAAO,WACP0V,UAAW,WACXhV,IAAK,WACLiV,OAAQ,SAACC,EAAGC,GAAJ,OACJ,kBAAC,KAAD,CAAUyK,QAASzK,EAAO0K,cAMtC,OACI,kBAAC,IAAMniB,SAAP,KACI,kBAAC,IAAW2C,MAAZ,CAAkBC,MAAO,GAAzB,SACA,kBAAC,KAAD,CACIyU,QAASA,EACTwC,WAAY,CAAEC,SAAU,GACxB1V,WAAYlI,MCiGXkmB,GAnIU,WAEvB,IAAM1W,EAAO7Q,aAAaC,QAAQ,WAFL,EAIWkP,mBAAS,IAJpB,oBAItBqY,EAJsB,KAIRC,EAJQ,OAKCtY,mBAAS,IALV,oBAKtBuY,EALsB,KAKbC,EALa,OAMHxY,mBAAS,IANN,oBAMtByY,EANsB,KAMfC,EANe,OAOO1Y,mBAAS,IAPhB,oBAOtB2Y,EAPsB,KAOVC,EAPU,OAQD5Y,mBAAS,IARR,oBAQtBsK,EARsB,KAQdC,EARc,KAUvBsO,EAAkBnjB,sBAAW,sBAAC,4BAAAnE,EAAA,+EAEJiC,EAAS8M,IAAI,+BAAgC,CACjEgF,OAAQ,CACJ5D,KAAMA,KAJc,OAEtBrQ,EAFsB,OAO5BinB,EAAgBjnB,EAASa,MAPG,gDAS5B2B,QAAQrC,MAAR,MAT4B,yDAWjC,CAACkQ,IAEJ3M,qBAAU,WACF8jB,MACL,IACH/jB,EAAY,wBAEZ,IAAMgkB,EAAapjB,sBAAW,sBAAC,4BAAAnE,EAAA,+EAECiC,EAAS8M,IAAI,+BAAgC,CACjEgF,OAAQ,CACJ5D,KAAMA,KAJS,OAEjBrQ,EAFiB,OAOvBmnB,EAAWnnB,EAASa,MAPG,gDASvB2B,QAAQrC,MAAR,MATuB,yDAW5B,CAACkQ,IAEJ3M,qBAAU,WACF+jB,MACL,IAEH,IAAMC,EAAWrjB,sBAAW,sBAAC,4BAAAnE,EAAA,+EAEGiC,EAAS8M,IAAI,iCAAkC,CACnEgF,OAAQ,CACJ5D,KAAMA,KAJO,OAEfrQ,EAFe,OAOrBqnB,EAASrnB,EAASa,MAPG,gDASrB2B,QAAQrC,MAAR,MATqB,yDAW1B,CAACkQ,IAEJ3M,qBAAU,WACFgkB,MACL,IAEH,IAAMC,EAAgBtjB,sBAAW,sBAAC,4BAAAnE,EAAA,+EAEFiC,EAAS8M,IAAI,iCAAkC,CACnEgF,OAAQ,CACJ5D,KAAMA,KAJY,OAEpBrQ,EAFoB,OAO1BunB,EAAcvnB,EAASa,MAPG,gDAS1B2B,QAAQrC,MAAR,MAT0B,yDAW/B,CAACkQ,IAEJ3M,qBAAU,WACFikB,MACL,IAEH,IAAM1H,EAAY5b,sBAAW,sBAAC,4BAAAnE,EAAA,+EAEEiC,EAAS8M,IAAI,yCAA0C,CAC3EgF,OAAQ,CACJ5D,KAAMA,KAJQ,OAEhBrQ,EAFgB,OAOtBkZ,EAAUlZ,EAASa,MAPG,gDAStB2B,QAAQrC,MAAR,MATsB,yDAW3B,CAACkQ,IAOJ,OALA3M,qBAAU,WACFuc,MACL,IAID,kBAAC,IAAMtb,SAAP,KACM,kBAAC,IAAW2C,MAAZ,CAAkBC,MAAO,GAAzB,aAEA,kBAAC,KAAD,CACI1G,KAAM,CAAC,CACH7B,KAAM,UACN4oB,OAAQ,CAAC/O,MAAO,QAChB9O,EAAGid,EAAa,GAChB/b,EAAG+b,EAAa,GAChBhX,IAAK,EACL6X,IAAK,GACL,CAAC7oB,KAAM,MACP4oB,OAAQ,CAAC/O,MAAO,QAChB9O,EAAGid,EAAa,GAChB/b,EAAG+b,EAAa,GAChBc,MAAO,KACPC,MAAO,KACP/X,IAAK,EACL6X,IAAK,IAET5J,OAAQ,CACJ+J,KAAM,CAAClW,KAAM,EACLkK,QAAS,EACTiM,QAAS,eACjBC,YAAY,EACZ3hB,MAAO,qBAEf,kBAAC,GAAD,CAAkB1F,KAAMqmB,IACxB,kBAAC,GAAD,CAAgBrmB,KAAMumB,IACtB,kBAAC,GAAD,CAAoBvmB,KAAMymB,IAC1B,kBAAC,GAAD,CAA2BzmB,KAAMoY,M,oBCvIrCjE,GAAc7E,IAAd6E,UAgHSmT,OA9GjB,YAAwC,IAAPvgB,EAAM,EAANA,KAAM,EACT+G,mBAAS,EAAC,IADD,oBAC5ByZ,EAD4B,KACvBC,EADuB,OAED1Z,oBAAS,GAFR,oBAE5B+E,EAF4B,KAEjBC,EAFiB,OAGNhF,oBAAS,GAHH,oBAG/B8I,EAH+B,KAGrBC,EAHqB,OAII/I,mBAAS,GAJb,oBAI/B2Z,EAJ+B,KAIhBC,EAJgB,KAM7BC,EAAgB,WAClBH,GAAYD,IAGVle,EAAU7F,sBAAW,uCAAC,WAAOsT,GAAP,SAAAzX,EAAA,6DAC9ByT,GAAa,GADiB,kBAGvBxR,EAASnB,KAAK,oBAAqB,CACxCM,QAAS9B,aAAaC,QAAQ,WAC9BoE,MAAO8T,IALqB,OAO7B5U,IAAQ4M,QAAQ,kBAPa,gDAUd,gBACf5M,IAAQ5C,MADO,iBAVc,QAa9BwT,GAAa,GAbiB,yDAAD,sDAcxB,IAEGmE,EAAkBzT,sBAAW,uCAAC,WAAOoT,GAAP,eAAAvX,EAAA,6DACtCyT,GAAa,GADyB,kBAGdxR,EAAS8M,IAAI,mCAAoC,CAC3DgF,OAAQ,CACnBpQ,MAAO+D,EAAK6gB,cALuB,OAG/BzoB,EAH+B,OAQrCuoB,EAAiBvoB,EAASa,MAC1B6W,GAAaD,GATwB,gDAYtB,kBACf1U,IAAQ5C,MADO,mBAZsB,QAetCwT,GAAa,GAfyB,yDAAD,sDAgBhC,IAEGqE,EAAU,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,WACrFC,EAAY,IAAIC,KAAK3Q,EAAKme,mBAC7BvN,EAAU,IAAID,KAAK3Q,EAAKoe,iBACrB7R,EAAUvM,EAAK8gB,gBAAkB,OAAS,MAEhD,OAAIjR,EAEL,kBAAC,KAAD,CACakR,QACI,6BACI,kBAAC,IAAWrhB,MAAZ,CAAkBC,MAAO,GAAIK,EAAKie,cAClC,kBAAC,GAAD,KAAW,yCAAkBje,EAAKke,kBAClC,kBAAC,GAAD,KAAW,qCAAcxN,EAAUM,eAAe,QAASZ,GAA3D,MAAwEQ,EAAQI,eAAe,QAASZ,IACxG,kBAAC,GAAD,KAAW,4CAAqBpQ,EAAKghB,qBACrC,kBAAC,GAAD,KAAW,wCAAiBzU,GAC5B,kBAAC,GAAD,KAAW,6CAAsBvM,EAAKihB,sBACtC,kBAAC,GAAD,KAAW,iDAA0BP,EAArC,IAAqD1gB,EAAKkhB,sBAC1D,uBAAGvjB,MAAO,CAACsT,MAAO,YAAlB,KAAgC,kBAAC,IAAD,CAAQ7Z,KAAK,OAAO8F,UAAU,6BAA6BoF,QAAS,kBAAM4N,EAAgBL,KAA1F,cAGhC,kBAAC,IAAD,CAAQzY,KAAK,UAAUqH,SAAS,SAASvB,UAAU,oBAAoBoF,QAAU,kBAAMA,EAAQtC,EAAK6gB,aAAa7W,QAAS8B,GAA1H,UAGA,uBAAGxJ,QAASse,GAAZ,UAIRO,QAAQ,QACR3H,SAAUgH,GAEV,kBAAC,IAAD,CAAQppB,KAAK,OAAO8F,UAAU,6BAA6BoF,QAASse,GAApE,KACO5gB,EAAKie,eAMzB,kBAAC,KAAD,CACa8C,QACI,6BACI,kBAAC,IAAWrhB,MAAZ,CAAkBC,MAAO,GAAIK,EAAKie,cAClC,kBAAC,GAAD,KAAW,yCAAkBje,EAAKke,kBAClC,kBAAC,GAAD,KAAW,qCAAcxN,EAAUM,eAAe,QAASZ,GAA3D,MAAwEQ,EAAQI,eAAe,QAASZ,IACxG,kBAAC,GAAD,KAAW,4CAAqBpQ,EAAKghB,oBAAoB9P,UAAU,EAAG,IAAtE,OACA,uBAAGvT,MAAO,CAACsT,MAAO,YAAY,kBAAC,IAAD,CAAQ7Z,KAAK,OAAO8F,UAAU,6BAA6BoF,QAAS,kBAAM4N,EAAgBL,KAA1F,cAG9B,kBAAC,IAAD,CAAQzY,KAAK,UAAUqH,SAAS,SAASvB,UAAU,oBAAoBoF,QAAU,kBAAMA,EAAQtC,EAAK6gB,aAAa7W,QAAS8B,GAA1H,UAGA,uBAAGxJ,QAASse,GAAZ,UAIRO,QAAQ,QACR3H,SAAUgH,GAEV,kBAAC,IAAD,CAAQppB,KAAK,OAAO8F,UAAU,6BAA6BoF,QAASse,GAApE,KACO5gB,EAAKie,gBCjBbmD,GArFW,WAAO,IAAD,EACAra,mBAAS,IADT,oBACrBsK,EADqB,KACbC,EADa,KAE5BzV,EAAY,aAEZ,IAAMwlB,EAAqB5kB,sBAAW,sBAAC,4BAAAnE,EAAA,+EAERiC,EAAS8M,IAAI,kCAAmC,CACnEgF,OAAQ,CACJ3S,QAAS9B,aAAaC,QAAQ,cAJP,OAEzBO,EAFyB,OAO/BkZ,EAAUlZ,EAASa,MAPY,gDAS/B2B,QAAQrC,MAAR,MAT+B,yDAWpC,IA8DH,OA5DAuD,qBAAU,WACNulB,MACD,IA2DC,yBAAKC,MAAM,UACP,kBAAC,IAAW5hB,MAAZ,CAAkBC,MAAO,GAAzB,kBACA,kBAAC,KAAD,CAAU4hB,eA7BlB,SAAwBhjB,GACpB,IAAMijB,EA/BV,SAAqBjjB,GAajB,OAXW8S,EAAO/Z,QAAO,SAAA+Z,GACrB,IAAMqL,EAAQ,IAAI/L,KAAKU,EAAO8M,mBACxBxB,EAAQ,IAAIhM,KAAKU,EAAO+M,iBAK9B,OAHAxjB,QAAQC,IAAI,cAAgB0D,EAAM8R,QAGzB9R,EAAM+R,SAAWqM,EAAM8E,YAAcljB,EAAM+R,SAAWoM,EAAM+E,YAC7DljB,EAAMkO,QAAUkQ,EAAM+E,WAAanjB,EAAMkO,QAAUiQ,EAAMgF,WACzDnjB,EAAM8R,QAAUsM,EAAMgF,eAAiBpjB,EAAM8R,QAAUqM,EAAMiF,kBAEtD,GAkBFC,CAAYrjB,GAC7B,OACE,wBAAIrB,UAAU,UACXskB,EAASpiB,KAAI,SAACY,EAAMC,GAAP,OACV,wBAAIZ,IAAKY,GACL,kBAAC,GAAD,CAAuBZ,IAAKY,EAAGD,KAAMA,UAuBH6hB,gBAhBlD,SAAyBtjB,GACrB,IAAMujB,EA5BV,SAAsBvjB,GAWlB,OATY8S,EAAO/Z,QAAO,SAAA+Z,GACtB,IAAMqL,EAAQ,IAAI/L,KAAKU,EAAO8M,mBACxBxB,EAAQ,IAAIhM,KAAKU,EAAO+M,iBAG9B,OAAS7f,EAAM+R,SAAWqM,EAAM8E,YAAcljB,EAAM+R,SAAWoM,EAAM+E,YAC7DljB,EAAM8R,QAAUsM,EAAMgF,eAAiBpjB,EAAM8R,QAAUqM,EAAMiF,kBAGrD,GAiBFI,CAAaxjB,GAC/B,OACI,wBAAIrB,UAAU,UACb4kB,EAAU1iB,KAAI,SAACY,EAAMC,GAAP,OACX,wBAAIZ,IAAKY,GACL,kBAAC,GAAD,CAAuBZ,IAAKY,EAAGD,KAAMA,cCpEjD2L,GAAgBC,KAAhBD,YAiDOqW,GA/CK,WAChB,IAAM1lB,EAAWC,cAEXC,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,SAAApE,EAAA,+EAEfiC,EAASnB,KAAK,oBAAqB,CACrCM,QAAS9B,aAAaC,QAAQ,WAC9B+mB,MAAOliB,EAAOkiB,MACdnS,KAAM/P,EAAO+P,OALI,OAOrBnQ,EAASpB,EAAS,eAAgB,YAPb,+CAUrBoB,EAASpB,EAAS,uBAAwB,UAVrB,wDAAD,sDAYzB,CAACoB,IAEJ,OACI,kBAAC,IAAD,CACIW,KAAK,OACLC,UAAU,YACVC,cAAe,CAAEC,UAAU,GAC3BZ,SAAUA,GAEV,kBAAC,IAAKa,KAAN,CACQJ,KAAK,QACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,6CAEnC,kBAAC,IAAD,CAAOwC,MAAO,CAAEC,MAAO,QAAUC,YAAY,kBAAkBzG,KAAK,SAE5E,kBAAC,IAAKiG,KAAN,CACIJ,KAAK,OACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,uBAEnC,kBAAC,GAAD,CAAawC,MAAO,CAAEC,MAAO,WAEjC,kBAAC,IAAKP,KAAN,KACI,kBAAC,IAAD,CAAQjG,KAAK,UAAUqH,SAAS,SAASvB,UAAU,mBAAnD,4BChCD+kB,I,OAXC,WAEZ,OADApmB,EAAY,aAER,yBAAKqB,UAAU,kBACX,kBAAC,IAAWwC,MAAZ,CAAkBC,MAAO,GAAzB,yBACA,kBAAC,GAAD,SCwBKuiB,GAzBG,SAAC,GAAuB,IAAtBtc,EAAqB,EAArBA,OAAQuc,EAAa,EAAbA,QAC1B,OAAOA,GACH,IAAK,aACD,OAAQ,kBAAC,GAAD,MACZ,IAAK,WACD,OAAQ,kBAAC,GAAD,MACZ,IAAK,eACD,OAAQ,kBAAC,GAAD,MACZ,IAAK,YACD,OAAQ,kBAAC,GAAD,MACZ,IAAK,WACD,OAAQ,kBAAC,GAAD,MACZ,IAAK,iBACD,OAAQ,kBAAC,GAAD,MACZ,QACI,IAAM3U,EAAQiH,SAAS0N,GACvB,GAAIC,MAAM5U,GACN,OAAQ,kBAAC,GAAD,MAER,IAAM6U,EAAYzc,EAAOtO,QAAO,SAAAgrB,GAAC,OAAIA,EAAEpc,aAAa1O,KAAOgW,KAAO,GAClE,OAAO,kBAAC,GAAD,CAAS5H,OAAQyc,EAAW7U,MAAOA,MCtBlD/N,GAAmB8iB,IAAnB9iB,QAAS+iB,GAAUD,IAAVC,MAmEFC,GAjEF,WAAO,IAAD,EACa1b,mBAAS,IADtB,oBACVob,EADU,KACDO,EADC,OAEW3b,mBAAS,IAFpB,oBAEVnB,EAFU,KAEF+c,EAFE,OAGuB5b,mBAAS,IAHhC,oBAGVtB,EAHU,KAGIC,EAHJ,KAOXzO,EAAS8H,aAAY,SAAA7H,GAAK,OAAIA,EAAMD,SAAQ+H,KAC5C1C,EAAWC,cAEX0C,EAAUxC,uBAAY,SAACjF,GAC3B0H,YAAW,kBAAM5C,EAASf,EAAY/D,MAAM,OAC3C,CAAC8E,IAEE6C,EAAYlI,EAAOmI,KAAI,SAAA7H,GAAK,OAChC,kBAAC,IAAD,CACE8H,IAAK9H,EAAMC,GACXJ,KAAMG,EAAM6D,WACZD,QAAS5D,EAAM4D,QACfmE,QAAM,EACNC,UAAQ,EACRN,QAAS,kBAAMA,EAAQ1H,EAAMC,UAI3BorB,EAAYnmB,sBAAW,sBAAC,kCAAAnE,EAAA,+EAEAiC,EAAS8M,IAAI,mBAAoB,CACpDgF,OAAQ,CACJ3S,QAAS9B,aAAaC,QAAQ,cAJf,OAEjBO,EAFiB,QAOlBwN,EAASxN,EAASa,MACbma,OAAS,GAChBuP,EAAU/c,GACVF,EAAgB,WAACE,EAAO,UAAR,iBAAC,EAAWM,oBAAZ,aAAC,EAAyB1O,GAAGiJ,cAE7CiF,EAAgB,CAAC,WAZG,gDAexB9K,QAAQrC,MAAR,MAfwB,yDAiB3B,CAACmN,EAAiBid,IAMrB,OAJA7mB,qBAAU,WACR8mB,MACC,CAACA,IAGF,kBAAC,IAAD,CAAQjlB,MAAO,CAAEklB,UAAU,UACzB,kBAACL,GAAD,CAAO5kB,MAAO,IAAKD,MAAO,CAAEmlB,WAAY,SACtC,kBAAC,GAAD,CAASrd,aAAcA,EAAcC,gBAAiBA,EAAiBE,OAAQA,EAAQD,eA/C/D,SAACod,GAC7BL,EAAWK,OAgDT,kBAAC,IAAD,KACG5jB,EACD,kBAAC,IAAD,CAAQxB,MAAO,CAAEqlB,QAAS,OAAQxjB,OAAQ,SACxC,kBAAC,GAAD,CAAS7B,MAAO,CAAEmlB,WAAY,OAAQE,QAAS,GAAI1M,OAAQ,EAAGxH,QAAS,OAAQmU,cAAe,WAC5F,kBAAC,GAAD,CAAard,OAAQA,EAAQuc,QAASA,S,6BC0BnCe,GApFQ,SAAC,GAAc,IAAbhK,EAAY,EAAZA,OACf9c,EAAUC,cAEVG,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,SAAApE,EAAA,+EAEfoC,EAAmBwe,EAAO/e,MAAOuC,EAAOlC,WAAYkC,EAAOjC,UAAWiC,EAAOpC,SAAU4e,EAAO1hB,IAF/E,OAGrB4E,EAAQQ,KAAK,UAHQ,+CAKrBhC,QAAQrC,MAAR,MALqB,wDAAD,sDAOzB,CAAC6D,EAAS8c,IAEf,OACE,kBAAC,IAAMnc,SAAP,KACI,kBAAC,IAAD,CACIE,KAAK,OACLC,UAAU,YACVC,cAAe,CAAEC,UAAU,GAC3BZ,SAAUA,GAEV,kBAAC,IAAKa,KAAN,KACI,kBAAC,IAAMC,MAAP,CAAaC,SAAO,GAChB,kBAAC,IAAKF,KAAN,CACIJ,KAAK,aACLO,SAAO,EACPC,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,4BAEnC,kBAAC,IAAD,CAAOwC,MAAO,CAAEC,MAAO,OAASC,YAAY,gBAEhD,kBAAC,IAAKR,KAAN,CACIJ,KAAK,YACLO,SAAO,EACPC,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,2BAEnC,kBAAC,IAAD,CAAOwC,MAAO,CAAEC,MAAO,OAASC,YAAY,iBAIxD,kBAAC,IAAKR,KAAN,CACIJ,KAAK,WACLa,aAAW,EACXL,MAAO,CACH,CAAEC,UAAU,EAAMvC,QAAS,iCAC3B,CAAE8C,IAAK,GAAI9C,QAAS,mDAGxB,kBAAC,IAAD,CACI4C,OAAQ,kBAACG,EAAA,EAAD,CAAchB,UAAU,wBAChC9F,KAAK,WACLyG,YAAY,cAGpB,kBAAC,IAAKR,KAAN,CACIJ,KAAK,UACLkB,aAAc,CAAC,YACfL,aAAW,EACXL,MAAO,CACH,CAAEC,UAAU,EAAMvC,QAAS,iCAC3B,gBAAGiD,EAAH,EAAGA,cAAH,MAAwB,CACpBC,UADoB,SACVC,EAAMC,GACZ,OAAKA,GAASH,EAAc,cAAgBG,EAGrCxF,QAAQC,OAAO,2BAFfD,QAAQyF,eAO3B,kBAAC,IAAD,CACIT,OAAQ,kBAACG,EAAA,EAAD,CAAchB,UAAU,wBAChC9F,KAAK,WACLyG,YAAY,sBAGpB,kBAAC,IAAKR,KAAN,KACI,kBAAC,IAAD,CAAQjG,KAAK,UAAUqH,SAAS,SAASvB,UAAU,oBAAnD,sBCTDimB,GAjEI,SAAC,GAAgC,IAAD,QAA9BhnB,EAA8B,EAA9BA,WAAY+c,EAAkB,EAAlBA,OAAQzQ,EAAU,EAAVA,KAC/B9J,EAAK,gCAAWua,QAAX,IAAWA,GAAX,UAAWA,EAAQhT,oBAAnB,aAAW,EAAsBjJ,YAAjC,QAAyC,gBAC9C8X,EAAI,UAAM5Y,EAAa,WAAa,aAAhC,yDAA4E+c,QAA5E,IAA4EA,GAA5E,UAA4EA,EAAQhT,oBAApF,aAA4E,EAAsBjJ,YAAlG,QAA0G,qBAA1G,oCACRd,EAAa,oCAAsC,0CAC/CC,EAAUC,cACVuC,EAAOzC,EAAa0C,KAAcC,IAElCskB,EAAe3mB,sBAAW,sBAAC,sBAAAnE,EAAA,+EAEFiC,EAASnB,KAAK,iBAAkB,CACnDuB,UAAWue,EAAO1hB,GAClBkC,QAAS+O,EAAKjR,KAJO,cAMzB4E,EAAQQ,KAAK,UANY,gDAQzBhC,QAAQrC,MAAR,MARyB,yDAU9B,CAACkQ,EAAMyQ,IAEJmK,EAAgB5mB,sBAAW,sBAAC,sBAAAnE,EAAA,+EAEHiC,EAASmU,OAAO,iBAAkB,CACrDrC,OAAQ,CACJ1R,UAAWue,EAAO1hB,MAJA,cAO1B4E,EAAQQ,KAAK,UAPa,gDAS1BhC,QAAQrC,MAAR,MAT0B,yDAW/B,CAACkQ,EAAMyQ,IAEV,OACI,kBAAC,IAAD,CAAQvb,MAAO,CAAE6B,OAAQ,UACrB,kBAAC,IAAOC,QAAR,CAAgBvC,UAAU,gBACtB,yBAAKA,UAAU,kBACX,kBAAC,KAAD,CAAU6M,QAAM,EAACC,SAAUkP,EAAQjP,WAAW,GAC1C,kBAAC,IAAWvK,MAAZ,CAAkBC,MAAO,GAAIhB,IAEjC,kBAAC,KAAD,CAAUoL,QAAM,EAACC,SAAUkP,EAAQva,OAAO,GACtC,kBAAC,IAAWyO,UAAZ,CAAsBzN,MAAO,GAAIoV,IAErC,yBACI7X,UAAU,YACV0C,IAAKhB,EACLiB,IAAKlB,EAAQ,UAEhBxC,EAEO,kBAAC,GAAD,CAAgB+c,OAAQA,IAGxB,kBAAC,KAAD,CAAOvb,MAAO,CAAEC,MAAO,SACnB,kBAAC,IAAD,CAAQD,MAAO,CAAEC,MAAO,KAAOxG,KAAK,UAAUkL,QAAS8gB,GAAvD,QACA,kBAAC,IAAD,CAAQzlB,MAAO,CAAEC,MAAO,KAAOxG,KAAK,UAAUsd,QAAM,EAACpS,QAAS+gB,GAA9D,2BCzD1BC,GACO,EADPA,GAEQ,EAFRA,GAGc,EAHdA,GAIO,EA0EEC,GAvEM,WAAO,IAAD,EAEiBxc,mBAASuc,IAF1B,oBAEhBE,EAFgB,KAEFC,EAFE,OAGC1c,mBAAS,MAHV,oBAGhB0B,EAHgB,KAGVkB,EAHU,OAIK5C,mBAAS,MAJd,oBAIhBmS,EAJgB,KAIRwK,EAJQ,KAMvB5nB,qBAAU,WACN6nB,MACD,IAEH,IAAMA,EAAWlnB,sBAAW,sBAAC,sCAAAnE,EAAA,+DAEfsrB,EAAchrB,OAAOC,SAASgrB,OAC9BxX,EAASuX,EAAYzI,MAAM,SAC7B2I,EAAQ,GACH7jB,EAAI,EALQ,YAKLA,EAAIoM,EAAO+G,OAAS,GALf,oBAMC,OAAd/G,EAAOpM,GANM,uBAOb6jB,EAAQzX,EAAOpM,EAAE,GAPJ,4BAKkBA,IALlB,0BAWP,KAAV6jB,EAXiB,wBAYXnrB,EAZW,0BAYcirB,GAZd,UAaMrpB,EAAS8M,IAAI1O,GAbnB,QAcO,OADlBP,EAbW,QAcJM,QACTkC,QAAQC,IAAIzC,EAASa,KAAKwP,MACO,KAA7BrQ,EAASa,KAAKwP,KAAKtO,OACnBspB,EAAgBH,IAChB3Z,EAAQvR,EAASa,KAAKwP,OAEtBgb,EAAgBH,IAEpBI,EAAUtrB,EAASa,KAAKigB,SAExBuK,EAAgBH,IAxBH,wBA4BjBG,EAAgBH,IA5BC,0DA+BrBG,EAAgBH,IA/BK,0DAiC1B,CAACG,IAEEM,EAAU,kBAACC,GAAA,EAAD,CAAiBrmB,MAAO,CAAEsmB,SAAU,IAAMC,MAAI,IAE9D,OAAOV,GACH,KAAKF,GACD,OACI,kBAAC,KAAD,CACI5qB,OAAO,QACPiG,MAAM,8BACNwlB,SAAS,6HACTC,MAAO,CACH,kBAAC,IAAD,CAAQ/kB,IAAI,OAAOvG,KAAK,KAAxB,kBAIhB,KAAKwqB,GACD,OACI,kBAAC,KAAD,CAAMe,UAAWN,IAEzB,QACI,OACI,kBAAC,GAAD,CAAY5nB,WAAYqnB,IAAiBF,GAAoBpK,OAAQA,EAAQzQ,KAAMA,MCzE7F6a,GACO,EADPA,GAEO,EAFPA,GAGO,EA4DEgB,GAzDE,WAAO,IAAD,EAEqBvd,mBAASuc,IAF9B,oBAEZE,EAFY,KAEEC,EAFF,KAInB3nB,qBAAU,WACNyoB,MACD,IAEH,IAAMA,EAAQ,uCAAG,8BAAAjsB,EAAA,sEAEHsrB,EAAchrB,OAAOC,SAASgrB,OAC9BlrB,EAHG,yBAGqBirB,GAHrB,SAIHrpB,EAAS8M,IAAI1O,GAJV,OAKT8qB,EAAgBH,IALP,gDAOTG,EAAgBH,IAPP,yDAAH,qDAWRS,EAAU,kBAACC,GAAA,EAAD,CAAiBrmB,MAAO,CAAEsmB,SAAU,IAAMC,MAAI,IAE9D,OAAOV,GACH,KAAKF,GACD,OACI,kBAAC,KAAD,CACI5qB,OAAO,UACPiG,MAAM,iCACNylB,MAAO,CACH,kBAAC,IAAD,CAAQhtB,KAAK,UAAUiI,IAAI,QAAQvG,KAAK,UAAxC,SAGA,kBAAC,IAAD,CAAQuG,IAAI,OAAOvG,KAAK,KAAxB,kBAIhB,KAAKwqB,GACD,OACI,kBAAC,KAAD,CACI5qB,OAAO,QACPiG,MAAM,6BACNwlB,SAAS,8DACTC,MAAO,CACH,kBAAC,IAAD,CAAQhtB,KAAK,UAAUiI,IAAI,SAASvG,KAAK,KAAzC,6BAGA,kBAAC,IAAD,CAAQuG,IAAI,OAAOvG,KAAK,KAAxB,kBAIhB,QACI,OACI,kBAAC,KAAD,CAAMurB,UAAWN,MCvD1Bnd,I,OAAYC,IAAZD,UAwKQ4d,GAtKW,WAAO,IAAD,EACMzd,oBAAS,GADf,oBACrB+E,EADqB,KACVC,EADU,KAEtBzP,EAAWC,cAEXC,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,SAAApE,EAAA,6DACzByT,GAAa,GADY,kBAGfxR,EAASnB,KAAK,wBAAyB,CACzC5B,GAAI,IAAIitB,gBAAgB7rB,OAAOC,SAASgrB,QAAQxc,IAAI,eACpDoO,QAAS/Y,EAAO+Y,QAChBC,aAAchZ,EAAOgZ,aACrBC,OAAQjZ,EAAOiZ,OACfC,aAAclZ,EAAOkZ,aACrBC,OAAQnZ,EAAOmZ,OACfK,OAAOxZ,EAAOwZ,OACdC,WAAWzZ,EAAOyZ,aAXD,OAarBvb,QAAQC,IAAI,iBACZyB,EAASpB,EAAS,qBAAsB,YAdnB,gDAiBrBoB,EAASpB,EAAS,6BAA8B,UAjB3B,QAmBzB6Q,GAAa,GAnBY,yDAAD,sDAoBzB,CAACzP,IAxBwB,EA0BJyK,mBAAS,IA1BL,oBA0BrBgO,EA1BqB,KA0BfC,EA1Be,KA4B5BlZ,qBAAU,WACN4oB,MACD,IAEH,IAAMA,EAAO,uCAAG,4BAAApsB,EAAA,+EAEeiC,EAAS8M,IAAI,yBAA0B,CACzDgF,OAAQ,CACJsY,YAAa,IAAIF,gBAAgB7rB,OAAOC,SAASgrB,QAAQxc,IAAI,kBAJ9D,OAEFjP,EAFE,OAOR4c,EAAQ5c,EAASa,KAAK,IAPd,gDASR2B,QAAQrC,MAAR,MATQ,yDAAH,qDAmCPqsB,EAAa,CACf,CAAErb,MAAO,MAAOhL,MAAO,OACvB,CAAEgL,MAAO,KAAMhL,MAAO,OAGpBsmB,EAAe,CAAExU,KAAM,UAAWC,MAAO,OAAQC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,WAElG,OAEG,kBAAC,IAAD,CACGxT,KAAK,iBACLC,UAAU,sBACVC,cAAe,CAAEC,UAAU,GAC3BZ,SAAUA,GAGV,2BACI,0CAAwBuY,EAAK+P,qBADjC,IACwD/P,EAAKgQ,oBAAoB,6BAC7E,2CAAyBhQ,EAAKM,gBAAgB,6BAC9C,kDAHJ,IAGqCN,EAAKiQ,4BAA4B,6BAClE,2CAAyBjQ,EAAKkJ,aAJlC,IAIgD,6BAC5C,8CAA4BlJ,EAAKmJ,iBAAiB,6BAClD,0CAAyB,IAAIvN,KAAKoE,EAAKoJ,mBAAoBnN,eAAe,QAAS6T,GANvF,MAM0G,IAAIlU,KAAKoE,EAAKqJ,iBAAkBpN,eAAe,QAAS6T,GAAc,8BAIhL,0EACA,kBAAC,IAAKxnB,KAAN,CACIJ,KAAK,UACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,yCAEvC,kBAAC,KAAMmC,MAAP,CACM8S,QAvDM,CACZ,CAAE7G,MAAO,OAAQhL,MAAO,GACxB,CAAEgL,MAAO,OAAQhL,MAAO,GACxB,CAAEgL,MAAO,UAAWhL,MAAO,GAC3B,CAAEgL,MAAO,OAAQhL,MAAO,GACxB,CAAEgL,MAAO,YAAahL,MAAO,IAmDvB0mB,WAAW,SACX/H,YAAY,WAGlB,6EACA,kBAAC,IAAK7f,KAAN,CACIJ,KAAK,eACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,oCAEvC,kBAAC,KAAMmC,MAAP,CACM8S,QA3DQ,CACd,CAAE7G,MAAO,oBAAqBhL,MAAO,GACrC,CAAEgL,MAAO,eAAgBhL,MAAO,GAChC,CAAEgL,MAAO,UAAWhL,MAAO,GAC3B,CAAEgL,MAAO,YAAahL,MAAO,GAC7B,CAAEgL,MAAO,iBAAkBhL,MAAO,IAuD5B0mB,WAAW,SACX/H,YAAY,WAGlB,8GACA,kBAAC,IAAK7f,KAAN,CACIJ,KAAK,SACLa,aAAW,EACXL,MAAO,CAAC,CAAEC,UAAU,EAAMvC,QAAS,gCAEvC,kBAAC,KAAMmC,MAAP,CACM8S,QAhEQ,CACd,CAAE7G,MAAO,gBAAiBhL,MAAO,GACjC,CAAEgL,MAAO,oBAAqBhL,MAAO,GACrC,CAAEgL,MAAO,UAAWhL,MAAO,GAC3B,CAAEgL,MAAO,kBAAmBhL,MAAO,GACnC,CAAEgL,MAAO,cAAehL,MAAO,IA4DzB0mB,WAAW,SACX/H,YAAY,WAGlB,yEACA,kBAAC,IAAK7f,KAAN,CACIJ,KAAK,eACLa,aAAW,EACXL,MAAS,CAAC,CAAEC,UAAU,EAAMvC,QAAS,mCACzC,kBAAC,KAAMmC,MAAP,CAAa8S,QAASwU,KAEtB,oFACA,kBAAC,IAAKvnB,KAAN,CACIJ,KAAK,SACLa,aAAW,EACXL,MAAS,CAAC,CAAEC,UAAU,EAAMvC,QAAS,6BACzC,kBAAC,KAAMmC,MAAP,CAAa8S,QAASwU,KAEtB,8DACA,kBAAC,IAAKvnB,KAAN,CACIJ,KAAK,SACLa,aAAW,GAEX,kBAAC,GAAD,CAAUsK,IAAK,EAAGzK,MAAO,CAAEC,MAAO,QAAUC,YAAY,mBAE5D,qGACA,kBAAC,IAAKR,KAAN,CACIJ,KAAK,aACLa,aAAW,GACX,kBAAC,GAAD,CAAUsK,IAAK,EAAGzK,MAAO,CAAEC,MAAO,QAAUC,YAAY,mBAE3D,kBAAC,IAAKR,KAAN,KACG,kBAAC,IAAD,CAAQjG,KAAK,UAAUqH,SAAS,SAASvB,UAAU,6BAA6B8M,QAAS8B,GAAzF,sBCtJGoZ,I,OAXO,WAElB,OADArpB,EAAY,kBAEV,yBAAKqB,UAAU,4BACT,kBAAC,IAAWwC,MAAZ,CAAkBC,MAAO,GAAzB,kBACA,kBAAC,GAAD,S,OC8BZ,IAAMwlB,GAAW,kBAAM,kBAAC,GAAD,CAAMhpB,YAAY,KACnCipB,GAAQ,kBAAM,kBAAC,GAAD,CAAMjpB,YAAY,KACvBkpB,GA/Bf,WAME,OAJAvpB,qBAAU,WACRwpB,SAAS3mB,MAAQ,mBAChB,IAGD,8BACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO4mB,OAAK,EAACC,KAAK,IAChBlR,OAAQ,kBhEgCJ1c,aAAaC,QAAQ,gBgE9BrB,kBAAC,GAAD,MAEA,kBAAC,GAAD,SAIN,kBAAC,IAAD,CAAO2tB,KAAK,SAAS1jB,UAAWsjB,KAChC,kBAAC,IAAD,CAAOI,KAAK,YAAY1jB,UAAWqjB,KACnC,kBAAC,IAAD,CAAOK,KAAK,YAAY1jB,UAAWwiB,KACnC,kBAAC,IAAD,CAAOkB,KAAK,UAAU1jB,UAAWyhB,KACjC,kBAAC,IAAD,CAAOiC,KAAK,YAAY1jB,UAAWojB,QCtBzBO,QACW,cAA7B7sB,OAAOC,SAAS6sB,UAEe,UAA7B9sB,OAAOC,SAAS6sB,UAEhB9sB,OAAOC,SAAS6sB,SAASrlB,MACvB,2DCPN,IAAMslB,GAAQC,YAAY7uB,GAC1B4E,IAAQkqB,WAAW,kBAEnBC,IAASxR,OACP,kBAAC,IAAD,CAAUqR,MAAOA,IACb,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGNL,SAASS,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA/tB,GACLqC,QAAQrC,MAAMA,EAAM4C,a","file":"static/js/main.5003258e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.303e4a67.svg\";","module.exports = __webpack_public_path__ + \"static/media/register.2c0812b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/landing.50e5cdde.svg\";","module.exports = __webpack_public_path__ + \"static/media/volunteersense.98bf0bb3.png\";","import { combineReducers } from 'redux';\n\nconst alerts = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_ALERT':\n            return state.concat([action])\n        case 'REMOVE_ALERT':\n            return state.filter(alert => alert.id !== action.id)\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    alerts,\n});\n\nexport default rootReducer;","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\nconst baseURL = `${process.env.REACT_APP_BACKEND_HOST}/api/`;\nconst accessToken = localStorage.getItem(\"access_token\");\n\nconst axiosInstance = axios.create({\n    baseURL: baseURL,\n    timeout: 20000,\n    headers: {\n        'Authorization': \"JWT \" + accessToken,\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n    }\n});\n\naxiosInstance.interceptors.response.use(\n    response => response,\n    async error => {\n      const originalRequest = error.config;\n    \n    if (error.response && error.response.status === 401 && originalRequest.url === axiosInstance.baseURL+'token/refresh/') {\n        window.location.href = '/login/';\n        return Promise.reject(error);\n    }\n      \n    if (error.response && error.response.status === 401 && error.response.data.code === \"token_not_valid\") {\n        const refresh_token = localStorage.getItem('refresh_token');\n\n        try {\n            const response = await axiosInstance\n                .post('/token/refresh/', { refresh: refresh_token });\n            localStorage.setItem('access_token', response.data.access);\n            localStorage.setItem('refresh_token', response.data.refresh);\n\n            axiosInstance.defaults.headers['Authorization'] = \"JWT \" + response.data.access;\n            originalRequest.headers['Authorization'] = \"JWT \" + response.data.access;\n            return axiosInstance(originalRequest);\n        } catch (_) {\n            window.location.href = '/login/';\n            return Promise.reject(error);\n        }\n      }\n      return Promise.reject(error);\n  }\n);\n\nconst retryDelay = () => {\n    const mSec = 1000;\n    const randomMSec = 1000 * Math.random();\n    return mSec + randomMSec;\n};\n\naxiosRetry(axiosInstance, {\n    retries: 0,\n    retryDelay,\n    retryCondition: axiosRetry.isRetryableError,\n});\n\nexport function setNewHeaders(response) {\n    axiosInstance.defaults.headers[\"Authorization\"] = \"JWT \" + response.data.access;\n    localStorage.setItem(\"access_token\", response.data.access);\n    localStorage.setItem(\"refresh_token\", response.data.refresh);\n    localStorage.setItem(\"user_id\", response.data.user_id);\n}\n\nexport default axiosInstance;","import axiosAPI, { setNewHeaders } from \"./axiosApi\";\n\nexport async function register(email, firstName, lastName, password) {\n  const response = await axiosAPI.post(\"users/create/\", {\n    email,\n    first_name: firstName,\n    last_name: lastName,\n    password,\n  });\n  localStorage.setItem(\"user\", response.data);\n  return response;\n}\n\nexport async function registerFromInvite(email, firstName, lastName, password, invite_id) {\n  console.log(email)\n  console.log(invite_id)\n  const response = await axiosAPI.post(\"users/create-from-invite/\", {\n    email,\n    first_name: firstName,\n    last_name: lastName,\n    password,\n    invite_id\n  });\n  localStorage.setItem(\"user\", response.data);\n  return response;\n}\n\nexport async function login(email, password) {\n  const response = await axiosAPI.post(\"token/obtain/\", {\n    email,\n    password,\n  });\n  localStorage.setItem(\"email\", email);\n  setNewHeaders(response);\n  return response;\n}\n\nexport async function reset_password(old_password, new_password) {\n  const user_id = localStorage.getItem(\"user_id\");\n  const response = await axiosAPI.post(\"users/reset-password/\", {\n    user_id,\n    old_password,\n    new_password,\n  });\n  return response;\n}\n\nexport function logout() {\n  localStorage.removeItem(\"access_token\");\n  localStorage.removeItem(\"refresh_token\");\n  localStorage.removeItem(\"user_id\");\n  axiosAPI.defaults.headers['Authorization'] = null;\n}\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem(\"access_token\");\n  return !!token;\n};","import shortid from 'shortid';\n\nexport function addAlert(message, alert_type) {\n    return {\n      type: 'ADD_ALERT',\n      id: shortid.generate(),\n      message,\n      alert_type\n    }\n  }\n  \n  export function removeAlert(id) {\n    return {\n      type: 'REMOVE_ALERT',\n      id\n    }\n  }","/* eslint no-undef: 0 */\n/* eslint arrow-parens: 0 */\nimport React from 'react';\nimport ReactGA from 'react-ga';\nimport { enquireScreen } from 'enquire-js';\n\nimport Nav3 from './Nav3';\nimport Banner5 from './Banner5';\nimport Feature0 from './Feature0';\nimport Footer2 from './Footer2';\n\nimport {\n  Nav30DataSource,\n  Banner50DataSource,\n  Feature00DataSource,\n  Footer20DataSource,\n} from './data.source';\nimport './less/antMotionStyle.less';\n\nlet isMobile;\nenquireScreen((b) => {\n  isMobile = b;\n});\n\nconst { location = {} } = typeof window !== 'undefined' ? window : {};\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMobile,\n      show: !location.port, // 如果不是 dva 2.0 请删除\n    };\n  }\n\n  componentDidMount() {\n    ReactGA.pageview(window.location.pathname + \"home\");\n    enquireScreen((b) => {\n      this.setState({ isMobile: !!b });\n    });\n    // dva 2.0 样式在组件渲染之后动态加载，导致滚动组件不生效；线上不影响；\n    /* 如果不是 dva 2.0 请删除 start */\n    if (location.port) {\n      // 样式 build 时间在 200-300ms 之间;\n      setTimeout(() => {\n        this.setState({\n          show: true,\n        });\n      }, 500);\n    }\n    /* 如果不是 dva 2.0 请删除 end */\n  }\n\n  render() {\n    const children = [\n      <Nav3\n        id=\"Nav3_0\"\n        key=\"Nav3_0\"\n        dataSource={Nav30DataSource}\n        isMobile={this.state.isMobile}\n      />,\n      <Banner5\n        id=\"Banner5_0\"\n        key=\"Banner5_0\"\n        dataSource={Banner50DataSource}\n        isMobile={this.state.isMobile}\n      />,\n      <Feature0\n        id=\"Feature0_0\"\n        key=\"Feature0_0\"\n        dataSource={Feature00DataSource}\n        isMobile={this.state.isMobile}\n      />,\n      <Footer2\n        id=\"Footer2_0\"\n        key=\"Footer2_0\"\n        dataSource={Footer20DataSource}\n        isMobile={this.state.isMobile}\n      />,\n    ];\n    return (\n      <div\n        className=\"templates-wrapper\"\n        ref={(d) => {\n          this.dom = d;\n        }}\n      >\n        {/* 如果不是 dva 2.0 替换成 {children} start */}\n        {this.state.show && children}\n        {/* 如果不是 dva 2.0 替换成 {children} end */}\n      </div>\n    );\n  }\n}\n","import { useEffect } from 'react';\nimport ReactGA from 'react-ga';\n\nexport const makePageView = (pageName) => \n ReactGA.pageview(pageName);\n\n export const usePageView = pageName =>\n    useEffect(() => {\n        makePageView(pageName);\n    }, [pageName]);\n\nexport const makeEvent = (args) => ReactGA.event(args);\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button, message } from 'antd';\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\nimport { register, login } from '../api/authenticationApi';\nimport { addAlert } from '../actionCreators.js';\nimport { makeEvent } from '../utils/googleAnalytics'\nimport \"antd/dist/antd.css\";\nimport \"./AuthForm.css\"\n\n\nconst AuthForm = ({isRegister}) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            if (isRegister) {\n                await register(values.email, values.first_name, values.last_name, values.password)\n                makeEvent({\n                    category: 'auth',\n                    action: 'registration_success'\n                })\n                dispatch(addAlert('Account created! Check your email to confirm your account.', 'success'));\n            } else {\n                await login(values.email, values.password);\n                history.push(\"/\");\n            }\n        } catch (error) {\n            if (isRegister) {\n                makeEvent({\n                    category: 'auth',\n                    action: 'registration_fail'\n                })\n                dispatch(addAlert('Account could not be created. Have you already created an account with this email?', 'error'));\n            } else {\n                message.error('Login failed. Email or password is incorrect.');\n            }\n        }\n    }, [isRegister, history]);\n\n    const submitButtonText = isRegister ? \"Create account\" : \"Log in\";\n    const switchAuthPages = isRegister ? (\n        <React.Fragment>\n            Already have an account? <Link to=\"/login\">Log in</Link>\n        </React.Fragment>\n    ) : (\n        <React.Fragment>\n            New user? <Link to=\"/register\">Create account</Link>\n        </React.Fragment> \n    );\n\n  return (\n    <React.Fragment>\n        <Form\n            name=\"auth\"\n            className=\"auth-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >   {isRegister &&\n                <Form.Item>\n                    <Input.Group compact>\n                        <Form.Item\n                            name=\"first_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'First name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"First name\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"last_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'Last name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"Last name\" />\n                        </Form.Item>\n                    </Input.Group>\n                </Form.Item>\n            }\n            <Form.Item\n                name=\"email\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Email is a required field.' },\n                    { type: 'email', message: 'Not a valid email.' }\n                ]}\n            >\n                <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                hasFeedback={isRegister}\n                rules={[\n                    { required: true, message: 'Password is a required field.' },\n                    ...isRegister ? [{ min: 12, message: \"Password must be at least 12 characters long.\"}] : [],\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n            </Form.Item>\n            {isRegister &&\n                <Form.Item\n                    name=\"confirm\"\n                    dependencies={['password']}\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Please confirm your password.' },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                                }\n                                return Promise.reject('Passwords do not match.');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                    />\n                </Form.Item>\n            }\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\">\n                    {submitButtonText}\n                </Button>\n                {switchAuthPages}\n                {!isRegister && <Link className=\"auth-form-forgot\" to=\"/register\">Forgot password?</Link>}\n            </Form.Item>\n        </Form>\n    </React.Fragment>\n  );\n};\n\nexport default AuthForm;","import React, { useEffect, useCallback } from 'react';\nimport { Layout, Typography, Alert } from 'antd';\nimport AuthForm from '../forms/AuthForm';\nimport LoginLogo from '../assets/login.svg';\nimport RegisterLogo from '../assets/register.svg';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { removeAlert } from '../actionCreators.js';\nimport { usePageView } from '../utils/googleAnalytics'\nimport './Auth.css';\n\nconst Auth = ({isRegister}) => {\n  const title = isRegister ? \"Create account\" : \"Log in\";\n  const logo = isRegister ? RegisterLogo: LoginLogo;\n  const alerts = useSelector(state => state.alerts, shallowEqual);\n  const dispatch = useDispatch();\n  usePageView(isRegister ? '/register' : '/login');\n\n  const onClose = useCallback((id) => {\n    setTimeout(() => dispatch(removeAlert(id)), 500);\n  }, [dispatch]);\n\n  const alertList = alerts.map(alert => \n    <Alert\n      key={alert.id}\n      type={alert.alert_type}\n      message={alert.message}\n      banner\n      closable\n      onClose={() => onClose(alert.id)}\n    />\n  );\n\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      {alertList}\n        <Layout.Content className=\"auth-content\">\n            <div className='auth-container'>\n                <Typography.Title level={2}>{title}</Typography.Title>\n                <img \n                    className=\"auth-logo\"\n                    src={logo} \n                    alt={title + \" logo\"}\n                />\n                <AuthForm isRegister={isRegister}/>\n            </div>\n        </Layout.Content>\n    </Layout>\n  );\n};\n\n\nexport default Auth;","\nimport React from 'react';\nimport { Button } from 'antd';\n\nexport const isImg = /^http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w-./?%&=]*)?/;\nexport const getChildrenToRender = (item, i) => {\n  let tag = item.name.indexOf('title') === 0 ? 'h1' : 'div';\n  tag = item.href ? 'a' : tag;\n  let children = typeof item.children === 'string' && item.children.match(isImg)\n    ? React.createElement('img', { src: item.children, alt: 'img' })\n    : item.children;\n  if (item.name.indexOf('button') === 0 && typeof item.children === 'object') {\n    children = React.createElement(Button, {\n      ...item.children\n    });\n  }\n  return React.createElement(tag, { key: i.toString(), ...item }, children);\n};\n","import React from 'react';\nimport TweenOne from 'rc-tween-one';\nimport { Menu } from 'antd';\nimport { getChildrenToRender } from './utils';\n\nconst { Item, SubMenu } = Menu;\n\nclass Header3 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phoneOpen: undefined,\n    };\n  }\n\n  phoneClick = () => {\n    const phoneOpen = !this.state.phoneOpen;\n    this.setState({\n      phoneOpen,\n    });\n  };\n\n  render() {\n    const { dataSource, isMobile, ...props } = this.props;\n    const { phoneOpen } = this.state;\n    const navData = dataSource.Menu.children;\n    const navChildren = navData.map((item) => {\n      const { children: a, subItem, ...itemProps } = item;\n      if (subItem) {\n        return (\n          <SubMenu\n            key={item.name}\n            {...itemProps}\n            title={\n              <div\n                {...a}\n                className={`header3-item-block ${a.className}`.trim()}\n              >\n                {a.children.map(getChildrenToRender)}\n              </div>\n            }\n            popupClassName=\"header3-item-child\"\n          >\n            {subItem.map(($item, ii) => {\n              const { children: childItem } = $item;\n              const child = childItem.href ? (\n                <a {...childItem}>\n                  {childItem.children.map(getChildrenToRender)}\n                </a>\n              ) : (\n                <div {...childItem}>\n                  {childItem.children.map(getChildrenToRender)}\n                </div>\n              );\n              return (\n                <Item key={$item.name || ii.toString()} {...$item}>\n                  {child}\n                </Item>\n              );\n            })}\n          </SubMenu>\n        );\n      }\n      return (\n        <Item key={item.name} {...itemProps}>\n          <a {...a} className={`header3-item-block ${a.className}`.trim()}>\n            {a.children.map(getChildrenToRender)}\n          </a>\n        </Item>\n      );\n    });\n    const moment = phoneOpen === undefined ? 300 : null;\n    return (\n      <TweenOne\n        component=\"header\"\n        animation={{ opacity: 0, type: 'from' }}\n        {...dataSource.wrapper}\n        {...props}\n      >\n        <div\n          {...dataSource.page}\n          className={`${dataSource.page.className}${phoneOpen ? ' open' : ''}`}\n        >\n          <TweenOne\n            animation={{ x: -30, type: 'from', ease: 'easeOutQuad' }}\n            {...dataSource.logo}\n          >\n            <img width=\"100%\" src={dataSource.logo.children} alt=\"img\" />\n          </TweenOne>\n          {isMobile && (\n            <div\n              {...dataSource.mobileMenu}\n              onClick={() => {\n                this.phoneClick();\n              }}\n            >\n              <em />\n              <em />\n              <em />\n            </div>\n          )}\n          <TweenOne\n            {...dataSource.Menu}\n            animation={\n              isMobile\n                ? {\n                    x: 0,\n                    height: 0,\n                    duration: 300,\n                    onComplete: (e) => {\n                      if (this.state.phoneOpen) {\n                        e.target.style.height = 'auto';\n                      }\n                    },\n                    ease: 'easeInOutQuad',\n                  }\n                : null\n            }\n            moment={moment}\n            reverse={!!phoneOpen}\n          >\n            <Menu\n              mode={isMobile ? 'inline' : 'horizontal'}\n              defaultSelectedKeys={['sub0']}\n              theme=\"light\"\n            >\n              {navChildren}\n            </Menu>\n          </TweenOne>\n        </div>\n      </TweenOne>\n    );\n  }\n}\n\nexport default Header3;\n","import React from 'react';\nimport QueueAnim from 'rc-queue-anim';\nimport TweenOne from 'rc-tween-one';\nimport { getChildrenToRender } from './utils';\n\nclass Banner5 extends React.PureComponent {\n  render() {\n    const { ...tagProps } = this.props;\n    const { dataSource } = tagProps;\n    delete tagProps.dataSource;\n    delete tagProps.isMobile;\n    const animType = {\n      queue: 'bottom',\n      one: {\n        y: '+=30',\n        opacity: 0,\n        type: 'from',\n        ease: 'easeOutQuad',\n      },\n    };\n    return (\n      <div {...tagProps} {...dataSource.wrapper}>\n        <div {...dataSource.page}>\n          <QueueAnim\n            key=\"text\"\n            type={animType.queue}\n            leaveReverse\n            ease={['easeOutQuad', 'easeInQuad']}\n            {...dataSource.childWrapper}\n            componentProps={{\n              md: dataSource.childWrapper.md,\n              xs: dataSource.childWrapper.xs,\n            }}\n          >\n            {dataSource.childWrapper.children.map(getChildrenToRender)}\n          </QueueAnim>\n          <TweenOne animation={animType.one} key=\"title\" {...dataSource.image}>\n            <img src={dataSource.image.children} width=\"100%\" alt=\"img\" />\n          </TweenOne>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Banner5;\n","import React from 'react';\nimport QueueAnim from 'rc-queue-anim';\nimport { Row, Col } from 'antd';\nimport OverPack from 'rc-scroll-anim/lib/ScrollOverPack';\nimport { getChildrenToRender } from './utils';\n\nclass Content extends React.PureComponent {\n  render() {\n    const { dataSource, isMobile, ...props } = this.props;\n    const {\n      wrapper,\n      titleWrapper,\n      page,\n      OverPack: overPackData,\n      childWrapper,\n    } = dataSource;\n    return (\n      <div {...props} {...wrapper}>\n        <div {...page}>\n          <div {...titleWrapper}>\n            {titleWrapper.children.map(getChildrenToRender)}\n          </div>\n          <OverPack {...overPackData}>\n            <QueueAnim\n              type=\"bottom\"\n              key=\"block\"\n              leaveReverse\n              component={Row}\n              componentProps={childWrapper}\n            >\n              {childWrapper.children.map((block, i) => {\n                const { children: item, ...blockProps } = block;\n                return (\n                  <Col key={i.toString()} {...blockProps}>\n                    <div {...item}>\n                      {item.children.map(getChildrenToRender)}\n                    </div>\n                  </Col>\n                );\n              })}\n            </QueueAnim>\n          </OverPack>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React from 'react';\nimport TweenOne from 'rc-tween-one';\nimport OverPack from 'rc-scroll-anim/lib/ScrollOverPack';\nimport { isImg } from './utils';\n\nclass Footer2 extends React.PureComponent {\n  render() {\n    const { ...props } = this.props;\n    const { dataSource } = props;\n    delete props.dataSource;\n    delete props.isMobile;\n    return (\n      <div {...props} {...dataSource.wrapper}>\n        <OverPack {...dataSource.OverPack}>\n          <TweenOne {...dataSource.links}>\n            {dataSource.links.children.map((item, i) => {\n              return (\n                <a key={i.toString()} {...item}>\n                  <img src={item.children} height=\"100%\" alt=\"img\" />\n                </a>\n              );\n            })}\n          </TweenOne>\n          <TweenOne\n            animation={{ x: '+=30', opacity: 0, type: 'from' }}\n            key=\"copyright\"\n            {...dataSource.copyright}\n          >\n            {dataSource.copyright.children.map((item, i) =>\n              React.createElement(\n                item.name.indexOf('title') === 0 ? 'h1' : 'div',\n                { key: i.toString(), ...item },\n                typeof item.children === 'string' && item.children.match(isImg)\n                  ? React.createElement('img', {\n                      src: item.children,\n                      alt: 'img',\n                    })\n                  : item.children\n              )\n            )}\n          </TweenOne>\n        </OverPack>\n      </div>\n    );\n  }\n}\n\nexport default Footer2;\n","import React from 'react';\nimport LandingLogo from '../../assets/landing.svg';\nimport logo from '../../assets/volunteersense.png';\nexport const Nav30DataSource = {\n  wrapper: { className: 'header3 home-page-wrapper jzih1dpqqrg-editor_css' },\n  page: { className: 'home-page' },\n  logo: {\n    className: 'header3-logo jzjgnya1gmn-editor_css',\n    children: logo,\n  },\n  Menu: {\n    className: 'header3-menu',\n    children: [\n      {\n        name: 'item1',\n        className: 'header3-item',\n        children: {\n          href: '/login',\n          children: [{ children: <p>Log in</p>, name: 'text' }],\n        },\n      },\n      {\n        name: 'item2',\n        className: 'header3-item',\n        children: {\n          href: '/register',\n          children: [{ children: <p>Register</p>, name: 'text' }],\n        },\n      },\n    ],\n  },\n  mobileMenu: { className: 'header3-mobile-menu' },\n};\nexport const Banner50DataSource = {\n  wrapper: { className: 'home-page-wrapper banner5' },\n  page: { className: 'home-page banner5-page' },\n  childWrapper: {\n    className: 'banner5-title-wrapper',\n    children: [\n      { name: 'title', children: 'Connect with your volunteers', className: 'banner5-title' },\n      {\n        name: 'explain',\n        className: 'banner5-explain',\n        children: 'Build and engage your community with our volunteer management system.',\n      },\n      {\n        name: 'button',\n        className: 'banner5-button-wrapper',\n        children: {\n          href: '#Feature0_0',\n          className: 'banner5-button',\n          type: 'primary',\n          children: 'Learn more',\n        },\n      },\n    ],\n  },\n  image: {\n    className: 'banner5-image',\n    children: LandingLogo,\n  },\n};\nexport const Feature00DataSource = {\n  wrapper: { className: 'home-page-wrapper content0-wrapper' },\n  page: { className: 'home-page content0' },\n  OverPack: { playScale: 0.3, className: '' },\n  titleWrapper: {\n    className: 'title-wrapper',\n    children: [\n      { name: 'title', children: 'About VolunteerSense' },\n      { name: 'explain', children: 'Our secret recipe for wrangling your volunteers.' }\n    ],\n  },\n  childWrapper: {\n    className: 'content0-block-wrapper',\n    children: [\n      {\n        name: 'block0',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children:\n                'https://zos.alipayobjects.com/rmsportal/WBnVOjtIlGWbzyQivuyq.png',\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Recruit',\n            },\n            { name: 'content', children: 'Easily onboard new volunteers and track their progress in signing required clearances.' },\n          ],\n        },\n      },\n      {\n        name: 'block1',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children:\n                'https://zos.alipayobjects.com/rmsportal/YPMsLQuCEXtuEkmXTTdk.png',\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Engage',\n            },\n            {\n              name: 'content',\n              children: 'Alert your community about new opportunities to get involved.',\n            },\n          ],\n        },\n      },\n      {\n        name: 'block2',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children:\n                'https://zos.alipayobjects.com/rmsportal/EkXWVvAaFJKCzhMmQYiX.png',\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Retain',\n            },\n            {\n              name: 'content',\n              children: 'Remind your volunteers about upcoming events and solicit their feedback.',\n            },\n          ],\n        },\n      },\n    ],\n  },\n};\nexport const Footer20DataSource = {\n  wrapper: { className: 'home-page-wrapper footer2-wrapper' },\n  OverPack: { className: 'home-page footer2', playScale: 0.05 },\n  copyright: {\n    className: 'copyright',\n    children: [\n      {\n        name: 'copyright',\n        children: 'Copyright © VolunteerSense',\n        className: 'copyright-text',\n      },\n    ],\n  },\n  links: {\n    className: 'links',\n    children: [],\n  },\n};\n","import React, { useCallback, useEffect } from 'react';\nimport { Menu } from 'antd';\nimport { BulbOutlined, LogoutOutlined, PlusSquareOutlined, CheckSquareOutlined, SettingOutlined, UsergroupAddOutlined, BarChartOutlined, CalendarOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nimport axiosAPI from '../api/axiosApi';\nimport { logout } from '../api/authenticationApi';\nimport './Sidebar.css';\n\nconst { Divider, Item, SubMenu } = Menu;\n\nconst Sidebar = ({selectedKeys, setSelectedKeys, setFeedContext, member}) =>  {\n    const history = useHistory();\n    const onSelect = (latestSelectedKey) => {\n        setSelectedKeys([latestSelectedKey.key]);\n    }\n\n    const onLogout = useCallback(async () => {\n        await axiosAPI.post(\"token/blacklist/\", {\n            refresh_token: localStorage.getItem(\"refresh_token\")\n        });\n        logout();\n        history.push(\"/login\");\n    }, [history]);\n\n    useEffect(() => {\n        setFeedContext(selectedKeys[0] ?? \"\");\n    }, [selectedKeys, setFeedContext]);\n\n\n    const organizationsList = (\n\t\tmember.map(member => \n\t\t\t<Item key={member?.organization?.id}>\n                {member?.organization?.name}\n            </Item>\n\t\t)\n    );\n\n    return (\n        <div className=\"menu-container\">\n            <Menu\n                mode=\"inline\"\n                theme=\"dark\"\n                selectedKeys={selectedKeys}\n                onSelect={onSelect}\n            >\n                <SubMenu title=\"Take action\" icon={<BulbOutlined />}>\n                    <Item className=\"action-submenu-item\" key=\"create-org\" icon={<UsergroupAddOutlined />}>\n                        Create an organization\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"create-event\" icon={<PlusSquareOutlined />}>\n                        Create event\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"set-goals\" icon={<CheckSquareOutlined />}>\n                        Set goals\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"calendar\" icon={<CalendarOutlined />}>\n                        View my events\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"view-analytics\" icon={<BarChartOutlined />}>\n                        View my analytics\n                    </Item>\n                </SubMenu>\n                <Divider/>\n            </Menu>\n            <Menu\n                mode=\"inline\"\n                theme=\"dark\"\n                selectedKeys={selectedKeys}\n                onSelect={onSelect}\n            >\n                {organizationsList}\n            </Menu>\n            <Menu\n                mode=\"inline\"\n                theme=\"dark\"\n                selectedKeys={selectedKeys}\n                onSelect={onSelect}\n            >\n                <Divider/>\n                <Item key=\"settings\" icon={<SettingOutlined />}>\n                    Manage user settings\n                </Item>\n                <Item key=\"logout\" icon={<LogoutOutlined />} onClick={onLogout}>\n                    Logout\n                </Item>\n            </Menu>\n        </div>\n    );\n}\n\nexport default Sidebar;\n","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { Form, Input, Button, Select, message } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport \"./NewOrgForm.css\";\n\nconst { TextArea } = Input;\n\nconst NewOrgForm = () => {\n    const [selectedCauses, setSelectedCauses] = useState([]);\n    const [causes, setCauses] = useState([]);\n\n    const getCauses = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"causes/get/\");\n            setCauses(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setCauses]);\n\n    useEffect(() => {\n        getCauses();\n    }, [getCauses]);\n\n    const filteredCauses = useMemo(() => {\n        return causes.filter(o => !selectedCauses.includes(o));\n    }, [selectedCauses, causes]);\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await axiosAPI.post(\"organization/create/\", {\n                name: values.name,\n                causes: values.causes,\n                description: values.description,\n                website: values.website,\n                phone: values.phone,\n                address: values.address,\n                email: values.email\n            });\n            await axiosAPI.post(\"member/create/\", {\n                user_id: localStorage.getItem(\"user_id\"),\n                organization: values.name,\n                member_type: 1,\n                status: 0,\n            });\n            message.success('Organization created');\n        }\n        catch {\n            message.error('Organization creation failed');\n        }\n    }, []);\n\n    return (\n        <Form\n            name=\"org\"\n            className=\"org-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >   \n            <Form.Item\n                name=\"name\"\n                hasFeedback\n                rules={[{ required: true, message: 'Organization name is required.' }]}\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Organization name\" maxLength={128} />\n            </Form.Item>\n            <Form.Item\n                name=\"causes\"\n                hasFeedback\n            >\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Charitable cause(s)\"\n                    value={selectedCauses}\n                    onChange={setSelectedCauses}\n                >\n                    \n                {filteredCauses.map(item => (\n                    <Select.Option key={item.id} value={item.id}>\n                        {item.name}\n                    </Select.Option>\n                ))}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"website\"\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Website\" />\n            </Form.Item>\n            <Form.Item\n                name=\"phone\"\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Telephone\" />\n            </Form.Item>\n            <Form.Item\n                name=\"email\"\n                hasFeedback\n                rules={[\n                    { type: 'email', message: 'Not a valid email.' }\n                ]}\n            >\n                <Input placeholder=\"Email\" />\n            </Form.Item>\n            <Form.Item\n                name=\"address\"\n            >\n                <TextArea style={{ width: '100%' }} placeholder=\"Street Address\" autoSize />\n            </Form.Item>\n            <Form.Item\n                name=\"description\"\n                hasFeedback\n                rules={[{ required: true, message: 'Organization description is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Describe your organization...\" />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"org-form-button\">\n                    Create\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default NewOrgForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport NewOrgForm from '../forms/NewOrgForm';\nimport { usePageView } from '../utils/googleAnalytics'\nimport './NewOrg.css';\n\nconst NewOrg = () => {\n    usePageView('/create-organization')\n    return (\n        <div className='org-container'>\n            <Typography.Title level={2}>Create organization</Typography.Title>\n            <NewOrgForm />\n        </div>\n    );\n};\n\n\nexport default NewOrg;","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button, Typography, Row, Col } from 'antd';\nimport { addAlert } from '../actionCreators.js';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport { useEffect } from 'react';\n\nconst { Text } = Typography\n\nconst ProfileForm = ({user}) => {\n    const dispatch = useDispatch();\n    const [isEditable, setIsEditable] = useState(false);\n    const [firstName, setFirstName] = useState(user?.first_name);\n    const [lastName, setLastName] = useState(user?.last_name);\n    const [email, setEmail] = useState(user?.email);\n\n    useEffect(() => {\n        setFirstName(user?.first_name);\n        setLastName(user?.last_name);\n        setEmail(user?.email);\n     }, [user])\n\n\n    const onFinish = useCallback(async (values) => {\n        if (isEditable) {\n            try {\n                await axiosAPI.post(\"users/update/\", {\n                    user_id: localStorage.getItem('user_id'),\n                    first_name: firstName,\n                    last_name: lastName,\n                    email,\n                });\n                setIsEditable(false);\n                dispatch(addAlert('Profile update success', 'success'));\n            } \n            catch {\n                dispatch(addAlert('Profile update failed', 'error'));\n            }\n        }\n        else {\n            setIsEditable(true);\n        }\n    }, [isEditable, setIsEditable, dispatch, email, firstName, lastName]);\n\n    const layout = {\n        labelCol: { span: 4 },\n        labelAlign: 'left'\n    }\n    \n    const textPlaceholder = (fieldName, fieldValue) => (\n        <Row style={{ marginBottom: '8px'}}>\n            <Col span={4}>\n                <Text>{fieldName}:</Text>\n            </Col>\n            <Col span={20}>\n                <Text>{fieldValue}</Text>\n            </Col>\n        </Row>\n    )\n\n    return (\n        <React.Fragment>\n            <Form\n                name=\"update-profile\"\n                onFinish={onFinish}\n                requiredMark={false}\n                initialValues={{\n                    first_name: firstName,\n                    last_name: lastName,\n                    email: email,\n                  }}\n                {...layout}\n            > \n                {isEditable ? (\n                <Form.Item \n                    label=\"Name\"\n                >  \n                    <Input.Group compact>\n                        <Form.Item\n                            name=\"first_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'First name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"First name\" value={firstName} onChange={(e) => {setFirstName(e.target.value)}}/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"last_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'Last name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"Last name\" value={lastName} onChange={(e) => {setLastName(e.target.value)}}/>\n                        </Form.Item>\n                    </Input.Group>\n                </Form.Item>) : (\n                    textPlaceholder(\"Name\", `${firstName} ${lastName}`)\n                )}\n                {isEditable ? (\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Email is a required field.' },\n                        { type: 'email', message: 'Not a valid email.' }\n                    ]}\n                >\n                    <Input placeholder=\"Email\" value={email} onChange={(e) => {setEmail(e.target.value)}} />\n                </Form.Item>) : (\n                    textPlaceholder(\"Email\", email)\n                )}\n                {/* {isEditable ? (\n                <Form.Item\n                    label=\"Birthdate\"\n                    name=\"birthdate\"\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Birthdate is a required field.' },\n                    ]}\n                >\n                    <DatePicker \n                        onChange={() => {}} \n                        style={{ width: '100%'}}\n                    />\n                </Form.Item>) : (\n                    textPlaceholder(\"Birthdate\", \"04/14/1999\")\n                )} */}\n                <Form.Item>\n                    <Button.Group style={{ width: '100%' }}>\n                        <Button style={{ width: isEditable ? '50%' : '100%', transition: 'none' }} type=\"primary\" htmlType=\"submit\">\n                            {isEditable ? \"Update\" : \"Edit\"}\n                        </Button>\n                        <Button style={{ width: '50%', transition: 'none' }} type=\"secondary\" onClick={() => {setIsEditable(false)}} hidden={!isEditable}>\n                            Cancel\n                        </Button>\n                    </Button.Group>\n                </Form.Item>\n            </Form>\n        </React.Fragment>\n    );\n};\n\nexport default ProfileForm;","import React, {useState, useEffect} from 'react';\nimport ProfileForm from '../forms/ProfileForm';\nimport { Divider, Typography, Skeleton } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nfunction ProfileSettings() {\n\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        getUser();\n     }, [])\n\n    const getUser = async () => {\n        const userId = localStorage.getItem(\"user_id\");\n        const url = `users/get/?user_id=${userId}`;\n        const response = await axiosAPI.get(url);\n        setUser(response.data);\n    }\n\n    return (\n        <React.Fragment>\n            <div style={{ maxWidth: '600px' }}>\n                <Typography.Title level={4}>Update Profile</Typography.Title>\n                <Skeleton active loading={!user} paragraph={{ rows: 3, width: 'auto' }} title={false}>\n                    <ProfileForm user={user}/>\n                </Skeleton>\n            </div>\n            <Divider/>\n        </React.Fragment>\n    );\n}\n\nexport default ProfileSettings;","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { LockOutlined } from '@ant-design/icons';\nimport { reset_password } from '../api/authenticationApi';\nimport { addAlert } from '../actionCreators.js';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport \"./AuthForm.css\"\n\nconst ResetPasswordForm = () => {\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await reset_password(values.old_password, values.new_password);\n            dispatch(addAlert('Password reset success', 'success'));\n        } catch (error) {\n            dispatch(addAlert('Old password incorrect', 'error'));\n        }\n    }, [dispatch]);\n\n    const sendForgotPasswordEmail = useCallback(async () => {\n        try {\n            const url = \"users/forgot-password/?user_id=\" + localStorage.getItem(\"user_id\")\n            await axiosAPI.get(url);\n            dispatch(addAlert('Password reset link sent to email', 'success'));\n        } catch (error) {\n            dispatch(addAlert('Password reset email failed to send', 'error'));\n        }\n    }, [dispatch]);\n\n  return (\n    <React.Fragment>\n        <Form\n            name=\"reset-password\"\n            className=\"reset-password-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        > \n            <Form.Item\n                name=\"old_password\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Old password is a required field.' },\n                ]}\n                \n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Old password\"\n                />\n            </Form.Item>\n            <Form.Item\n                name=\"new_password\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'New password is a required field.' },\n                    { min: 12, message: \"Password must be at least 12 characters long.\"}\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"New password\"\n                />\n            </Form.Item>\n            <Form.Item\n                    name=\"confirm\"\n                    dependencies={['new_password']}\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Please confirm your new password.' },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('new_password') === value) {\n                                return Promise.resolve();\n                                }\n                                return Promise.reject('Passwords do not match.');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                    />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\">\n                    Submit\n                </Button>\n                Forgot password? \n                <Button type=\"link\" style={{ paddingLeft: 4, paddingRight: 4}} onClick={sendForgotPasswordEmail}>\n                    Send a password reset email\n                </Button>\n            </Form.Item>\n        </Form>\n    </React.Fragment>\n  );\n};\n\nexport default ResetPasswordForm;","import React from 'react';\nimport { Divider, Typography } from 'antd';\nimport ResetPasswordForm from '../forms/ResetPasswordForm';\n\nfunction SecuritySettings() {\n    return (\n        <React.Fragment>\n            <div style={{ maxWidth: '600px' }}>\n                <Typography.Title level={4}>Reset password</Typography.Title>\n                <ResetPasswordForm />\n            </div>\n            <Divider/>\n        </React.Fragment>\n    );\n}\n\nexport default SecuritySettings;","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button, Typography, Row, Col, Checkbox } from 'antd';\nimport { addAlert } from '../actionCreators.js';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport { useEffect } from 'react';\n\nconst { Text } = Typography\n\nconst UserNotificationsForm = ({user}) => {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState(user?.email);\n    const [text, setText] = useState(user?.text);\n    const [phoneNumber, setPhoneNumber] = useState(user?.phone_number);\n\n    useEffect(() => {\n        setEmail(user?.email);\n        setText(user?.text);\n        setPhoneNumber(user?.phone_number);\n        console.log('phoneNumber', phoneNumber)\n     }, [phoneNumber, user])\n\n\n    const onFinish = useCallback(async (values) => {\n            try {\n                await axiosAPI.post(\"user/submit-notification-settings/\", {\n                    user_id: localStorage.getItem('user_id'),\n                    email,\n                    text,\n                    phone_number: values.phone_number,\n                });\n                dispatch(addAlert('Settings update success', 'success'));\n            } \n            catch {\n                dispatch(addAlert('Settings update failed', 'error'));\n            }\n    }, [email, text, dispatch]);\n\n    const layout = {\n        labelCol: { span: 4 },\n        labelAlign: 'left'\n    }\n\n    const [form] = Form.useForm()\n\n    useEffect(() => {\n        form.setFieldsValue({\n            email: email,\n            text: text,\n            phone_number: phoneNumber,\n          })\n       }, [form, email, text, phoneNumber])\n\n    return (\n        <React.Fragment>\n            <Form\n                form={form}\n                name=\"update-profile\"\n                onFinish={onFinish}\n                initialValues={{\n                    email: email,\n                    text: text,\n                    phone_number: phoneNumber,\n                  }}\n                {...layout}\n            > \n                <Form.Item\n                    name=\"email\"\n                >\n                    <Checkbox checked={email} onChange={(e) => {setEmail(e.target.checked)}}>Send email notifications</Checkbox>\n                </Form.Item>\n                <Form.Item\n                    name=\"text\"\n                >\n                    <Checkbox checked={text} onChange={(e) => {setText(e.target.checked)}} disabled = {true}>Send text notifications</Checkbox>\n                </Form.Item>\n                <Form.Item\n                    name=\"phone_number\"\n                    hasFeedback = {text}\n                    rules={[\n                        { required: text, message: 'Phone is a required field.' },\n                    ]}\n                >\n                    <Input addonBefore=\"Phone Number\" placeholder=\"Phone Number\" disabled={true}/>\n                    {/* <Input addonBefore=\"Phone Number\" placeholder=\"Phone Number\" disabled={!text}/> */}\n                </Form.Item>\n                <Form.Item>\n                        <Button style={{ width: '100%'}} type=\"primary\" htmlType=\"submit\">\n                            Update\n                        </Button>\n                </Form.Item>\n            </Form>\n        </React.Fragment>\n    );\n};\n\nexport default UserNotificationsForm;","import React, {useEffect, useState} from 'react';\nimport UserNotificationsForm from '../forms/UserNotificationsForm';\nimport { Divider, Typography, Skeleton } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nfunction UserNotifications() {\n\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        getUser();\n     }, [])\n\n    const getUser = async () => {\n        const userId = localStorage.getItem(\"user_id\");\n        const url = `user/get-notification-settings/?user_id=${userId}`;\n        const response = await axiosAPI.get(url);\n        setUser(response.data);\n    }\n\n\n    return (\n        <React.Fragment>\n            <div style={{ maxWidth: '600px' }}>\n                <Typography.Title level={4}>Update Notifications</Typography.Title>\n                <Skeleton active loading={false} paragraph={{ rows: 3, width: 'auto' }} title={false}>\n                    <UserNotificationsForm user={user}/>\n                </Skeleton>\n            </div>\n            <Divider/>\n        </React.Fragment>\n    );\n}\n\nexport default UserNotifications;","import React from \"react\";\nimport ProfileSettings from \"../pages/ProfileSettings\";\nimport SecuritySettings from \"../pages/SecuritySettings\";\nimport UserNotifications from \"../pages/UserNotifications\";\nimport { usePageView } from '../utils/googleAnalytics'\nimport { Tabs, Typography } from 'antd';\n\nconst { TabPane } = Tabs;\n\nconst Settings = () => {\n    usePageView('/settings')\n    return (\n        <React.Fragment>\n            <Typography.Title level={3}>Manage user settings</Typography.Title>\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"Profile\" key=\"1\">\n                    <ProfileSettings />\n                </TabPane>\n                <TabPane tab=\"Security\" key=\"2\">\n                    <SecuritySettings />\n                </TabPane>\n                <TabPane tab=\"Notifications\" key=\"3\">\n                    <UserNotifications />\n                </TabPane>\n            </Tabs>\n        </React.Fragment>\n    );\n}\n\nexport default Settings;","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { Form, Input, Button, Select, Switch, DatePicker, InputNumber, message } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport { useDispatch } from 'react-redux';\nimport { addAlert } from '../actionCreators.js';\nimport \"antd/dist/antd.css\";\nimport \"./NewEventForm.css\"\n\nconst { TextArea } = Input;\nconst { RangePicker } = DatePicker;\n\nconst NewEventForm = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedCauses, setSelectedCauses] = useState([]);\n    const [causes, setCauses] = useState([]);\n    const [selectedOrgs, setSelectedOrgs] = useState([]);\n    const [orgs, setOrgs] = useState([]);\n    const dispatch = useDispatch();\n\n    const getCauses = useCallback(async () => {\n        try{\n            const response = await axiosAPI.get(\"causes/get/\");\n            setCauses(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setCauses]);\n\n    const getOrgs = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"admin/get-orgs/\", {\n                 params: {\n                     user_id: localStorage.getItem(\"user_id\"),  \n                 }\n             });\n            setOrgs(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setOrgs]);\n\n    useEffect(() => {\n        getCauses();\n        getOrgs();\n    }, [getCauses, getOrgs]);\n    \n    const filteredOrgs = useMemo(() => {\n        return orgs.filter(o => !selectedOrgs.includes(o));\n    }, [selectedOrgs, orgs]);\n\n    const filteredCauses = useMemo(() => {\n        return causes.filter(o => !selectedCauses.includes(o));\n    }, [selectedCauses, causes]);\n\n\n    const onFinish = useCallback(async (values) => {\n        setIsLoading(true);\n        try {\n            await axiosAPI.post(\"event/create/\", {\n                name: values.name,\n                virtual: values.virtual,\n                location: values.location,\n                causes: values.causes,\n                organizations: values.organizations,\n                date:values.date,\n                description: values.description,\n                instructions: values.instructions,\n                attendee_cap: values.attendeeCap,\n\n            });\n            message.success('Event created');\n        }\n        catch {\n            message.success('Event creation failed');\n        }\n        setIsLoading(false);\n    }, [dispatch, setIsLoading]);\n\n    return (\n        <Form\n            name=\"event\"\n            className=\"event-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >   \n            <Form.Item\n                name=\"organizations\"\n                hasFeedback\n                rules={[{ required: true, message: 'Organization name is required.' }]}\n            >\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Organization(s)\"\n                    value={selectedOrgs}\n                    onChange={setSelectedOrgs}\n                    style={{ width: '100%' }}\n                >\n                    \n                {filteredOrgs.map(item => (\n                    <Select.Option key={item.id} value={item.id}>\n                        {item.name}\n                    </Select.Option>\n                ))}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"name\"\n                hasFeedback\n                rules={[{ required: true, message: 'Event name is required.' }]}\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Event name\" />\n            </Form.Item>\n            <Form.Item\n                name=\"virtual\"\n                hasFeedback\n                valuePropName=\"checked\"\n            >\n                <Switch checkedChildren=\"Virtual\" unCheckedChildren=\"Non-virtual\" defaultChecked />\n            </Form.Item>\n            <Form.Item\n                name=\"location\"\n                hasFeedback\n                rules={[{ required: true, message: 'Location is required.' }]}\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Location\" />\n            </Form.Item>\n            <Form.Item\n                name=\"date\"\n                hasFeedback\n                rules={[{ required: true, message: 'Date is required.' }]}\n            >\n                <RangePicker style={{ width: '100%' }}  showTime={{ format: 'HH:mm' }}\n      format=\"YYYY-MM-DD HH:mm\" />\n            </Form.Item>\n            <Form.Item\n                name=\"causes\"\n                hasFeedback\n                rules={[{ required: true, message: 'Causes are required.' }]}\n            >\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Charitable cause(s)\"\n                    value={selectedCauses}\n                    onChange={setSelectedCauses}\n                    style={{ width: '100%' }}\n                >\n                    \n                {filteredCauses.map(item => (\n                    <Select.Option key={item.id} value={item.id}>\n                        {item.name}\n                    </Select.Option>\n                ))}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"attendeeCap\"\n                hasFeedback\n                rules={[{ required: true, message: 'Max number of attendees is required and must be a number.'}]}\n            >\n                \n                <InputNumber style={{ width: '100%' }} placeholder=\"Maximum number of attendees\"/>\n            </Form.Item>\n            <Form.Item\n                name=\"description\"\n                hasFeedback\n                rules={[{ required: true, message: 'Description is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Event description\" />\n            </Form.Item>\n            <Form.Item\n                name=\"instructions\"\n                hasFeedback\n                rules={[{ required: true, message: 'Instructions is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Provide volunteers with instructions (i.e. how to get there, what to bring, etc.)\" />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" loading={isLoading}>\n                    Create\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\n\nexport default NewEventForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport NewEventForm from '../forms/NewEventForm';\nimport { usePageView } from '../utils/googleAnalytics'\nimport './NewEvent.css';\n\nconst NewEvent = () => {\n    usePageView('/new-event')\n\n    return (\n      <div className='event-container'>\n            <Typography.Title level={2}>Create an event</Typography.Title>\n            <NewEventForm />\n        </div>\n    );\n};\n\n\nexport default NewEvent;  \n\n","import React, {useState} from 'react';\nimport { Typography, Card, Switch, message } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport axiosAPI from '../api/axiosApi';\nimport './QAndA.css';\nconst { Paragraph } = Typography;\n\n\nfunction QAndA ({isAdmin, item, removeFaq, orgId}) {\n    const [questionStr, setQuestionStr] = useState(item?.question || \"\");\n    const [answerStr, setAnswerStr] = useState(item?.answer || \"\");\n    const [isPublic, setIsPublic] = useState(!!item?.is_public);\n\n    const updateQ = async (newQuestionStr) => {\n        setQuestionStr(newQuestionStr)\n        try {\n            await axiosAPI.post(\"faq/upsert/\", {\n                id: item?.id, question: newQuestionStr, answer: answerStr, org_id: orgId\n            });\n            message.success('Question updated');\n        }\n        catch {\n            message.error('Question failed to update');\n        }\n    }\n    const updateA = async (newAnswerStr) => {\n        setAnswerStr(newAnswerStr)\n        try {\n            await axiosAPI.post(\"faq/upsert/\", {\n                id: item?.id, question: questionStr, answer: newAnswerStr, is_public: isPublic, org_id: orgId\n            });\n            message.success('Answer updated');\n        }\n        catch {\n            message.error('Answer failed to update');\n        }\n    }\n    const updatePublic = async (newIsPublic) => {\n        setIsPublic(newIsPublic)\n        try {\n            await axiosAPI.post(\"faq/upsert/\", {\n                id: item?.id, question: questionStr, answer: answerStr, is_public: newIsPublic, org_id: orgId\n            });\n            message.success('FAQ updated');\n        }\n        catch {\n            message.error('FAQ failed to update');\n        }\n    }\n    const onDelete = async () => {\n        try {\n            await axiosAPI.delete(\"faq/delete/\", {\n                params: {\n                    id: item?.id,\n                }\n            });\n            removeFaq(item?.id)\n            message.success('FAQ deleted');\n        }\n        catch {\n            message.error('FAQ failed to delete');\n        }\n    }\n\n    return (\n\n        <Card style={{ marginTop: 8, marginBottom: 8 }} loading={!item} actions={isAdmin && [<DeleteOutlined onClick={onDelete} key=\"delete\" />]}>\n            <div style={{ display: \"flex\" }}>\n                <Paragraph style={{ float: \"left\", verticalAlign: \"top\", fontWeight: 700 }}>Question: </Paragraph>\n                {'  '}\n                <div style={{ marginLeft: 4, flexGrow: 100 }}>\n                    <Paragraph style={{ width: \"100%\" }} editable={isAdmin ? { onChange: (newQuestionStr) => updateQ(newQuestionStr) }: false}>{questionStr}</Paragraph>\n                </div>\n            </div>\n            <div style={{ display: \"flex\" }}>\n                <Paragraph style={{ float: \"left\", verticalAlign: \"top\", fontWeight: 700 }}>Answer: </Paragraph>\n                {'  '}\n\n                <div style={{ marginLeft: 4, flexGrow: 100 }}>\n                    <Paragraph style={{ width: \"100%\" }} editable={isAdmin ? { onChange: (newAnswerStr) => updateA(newAnswerStr) }: false}>{answerStr}</Paragraph>\n                </div>\n            </div>\n            {isAdmin &&\n                <Switch checkedChildren=\"Public\" unCheckedChildren=\"Hidden\" onChange={(newIsPublic) => updatePublic(newIsPublic)} defaultChecked={item?.is_public}/>\n            }\n        </Card>\n    )\n\n}\nexport default QAndA;","import React, {useState, useEffect} from 'react';\nimport { Button, Typography } from 'antd';\nimport QAndA from '../components/QAndA';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\n\nfunction QAndAPage({isAdmin, orgId}) {\n    const [qA, setQA] = useState([]);\n    const getQA = async (orgId) => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-faq/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setQA(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }\n\n    const removeFaq = (id) => {\n        setQA(qA.filter(faq => faq.id !== id));\n    }\n\n    useEffect(() => {\n        if (orgId) {\n            getQA(orgId);\n        }\n    }, [orgId]);\n\n    const addQAField = async () => {\n        const response = await axiosAPI.post(\"faq/upsert/\", {\n            org_id: orgId, question: \"question\", answer: \"answer\"\n        });\n        setQA([...qA, {id: response.data.id, question: \"question\", answer: \"answer\"}]);\n    }\n\n\n    return (\n        <div>\n            <Title level={4}>Frequently asked questions</Title>\n            {qA.map(item => \n                <QAndA isAdmin={isAdmin} key={item.id} item={item} removeFaq={removeFaq} orgId={orgId}/>\n            )}\n            {isAdmin && (<Button style={{ width: '100%' }} type=\"primary\" onClick={() => {addQAField()}}>Add New FAQ</Button>)}\n        </div>\n    );\n};\n\n\nexport default QAndAPage;","import React, {useCallback, useEffect, useState} from 'react';\nimport {Card, Button, Typography, message} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport './EventCard.css';\n\nconst { Paragraph } = Typography;\n\nfunction EventCard ({item}){\n\tconst [register, setRegister] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [viewmore, setViewmore] = useState(false);\n\t\n\tconst onClick = useCallback(async (event_id, register) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tif (register) {\n\t\t\t\tawait axiosAPI.post(\"attendees/delete/\", {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\tevent: event_id,\n\t\t\t\t});\n\t\t\t\tmessage.success(\"Unjoined event\")\n\t\t\t} else {\n\t\t\t\tawait axiosAPI.post(\"attendees/create/\", {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\tevent: event_id,\n\t\t\t\t});\n\t\t\t\tmessage.success(\"Joined event\");\n\t\t\t}\n\t\t\tsetRegister(!register)\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = register ? \"Join failed\" : \"Unjoin failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, []);\n\n\tconst getRegisterStatus = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get-register-status/\", {\n                params: {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\tevent: item.id\n                }\n            });\n\t\t\tsetRegister(false);\n\t\t\tif (response.data == 1) {\n\t\t\t\tsetRegister(true);\n\t\t\t}\n        } catch (error) {\n            console.error(error);\n        }\n    }, []);\n\t\n\tuseEffect(() => {\n        getRegisterStatus();\n\t}, [getRegisterStatus]);\n\t\n\tconst onClickViewmore = useCallback(async (event_id, viewmore) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tsetViewmore(!viewmore);\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = \"Viewmore failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, []);\n\t\n\tconst buttonText = register ? \"Unjoin\" : \"Join\";\n\tconst options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\tconst begindate = new Date(item.begindate)\n\tconst enddate = new Date(item.enddate)\n\tconst virtual = item.virtual ? \"Yes.\" : \"No.\";\n\n\tconst joinButton = (item.attendee_count < item.attendee_cap) ? \n\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.id, register)} loading={isLoading}>\n\t\t\t{buttonText}\n\t\t</Button> :\n\t\t(register ? \n\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.id, register)} loading={isLoading}>\n\t\t\t{buttonText}\n\t\t</Button> : \n\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"event-unjoinable-form-button\" disabled={true}>\n\t\t \t{buttonText}\n\t\t</Button>)\n\n\tif (viewmore) {\n\t\t\treturn (\n\t\t\t\t<Card className=\"event-card\" title={item.name} bordered={true}>\n\t\t\t\t\t\t<Paragraph><b>Location: </b>{item.location}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>Description: </b>{item.description}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>Virtual? </b>{virtual}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>Instructions: </b>{item.instructions}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>No. of Attendees: </b>{item.attendee_count}/{item.attendee_cap}</Paragraph>\n\t\t\t\t\t<p style={{color: '#1890ff'}}>>><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(item.id, viewmore)}>\n\t\t\t\t\t\tView Less\n\t\t\t\t\t</Button></p>\n\t\t\t\t\t{joinButton}\n\t\t\t\t</Card>\n\t\t\t);\n\t\t// }\n\t} else {\n\t\treturn (\n\t\t\t<Card className=\"event-card\" title={item.name} bordered={true}>\n\t\t\t\t\t<Paragraph><b>Location: </b>{item.location}</Paragraph>\n\t\t\t\t\t<Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n\t\t\t\t\t<Paragraph><b>Description: </b>{item.description.substring(0, 50)}...</Paragraph>\n\t\t\t\t<p style={{color: '#1890ff'}}>>><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(item.id, viewmore)}>\n\t\t\t\t\tView More\n\t\t\t\t</Button></p>\n\t\t\t\t{joinButton}\n\t\t\t</Card>\n\t\t);\n\t}\n\n} export default EventCard; \n\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {Button, Typography, message, Select, Space} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './Event.css';\nimport EventCard from '../components/EventCard';\nimport axiosAPI from \"../api/axiosApi\";\n\nconst { Option } = Select;\n\nconst OrgEvents = ({orgId}) => {\n    const [events, setEvents] = useState([]); \n    const [filterDisplay, setFilterDisplay] = useState([]);\n    const [attendeeCount, setAttendeeCount] = useState([]); \n    \n    const getEventsByOrg = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get-by-org/\", {\n                params: {\n                    orgId: orgId,\n                }\n            });\n            setEvents(response.data);\n            setFilterDisplay(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setEvents, orgId]);\n\n    useEffect(() => {\n        getEventsByOrg();\n    }, [orgId, getEventsByOrg]);\n\n    const handleChange = e => {\n        let oldList = events;\n        if (e !== \"\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                event.name.toLowerCase().includes(e.toLowerCase())\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const virtualFilterChange = value => {\n        let oldList = events;\n        if (value == \"virtual\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                event.virtual\n            );\n            setFilterDisplay(newList);\n        } else if (value == \"inperson\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                !event.virtual\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const openFilterChange = value => {\n        let oldList = events;\n        if (value == \"open\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                    (event.attendee_count < event.attendee_cap)\n            );\n            setFilterDisplay(newList);\n        } else if (value == \"filled\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                !(event.attendee_count < event.attendee_cap)\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={4}>Upcoming events</Typography.Title>\n            <Space>\n                <input onChange={e => handleChange(e.target.value)} placeholder=\"Search for events\" className=\"search\"/>\n                Filter by Virtual:<Select defaultValue=\"none\" style={{ width: 120 }} onChange={value => virtualFilterChange(value)} size=\"small\">\n                    <Option value=\"none\">Select All</Option>\n                    <Option value=\"virtual\">Virtual</Option>\n                    <Option value=\"inperson\">Not Virtual</Option>\n                </Select>\n                Filter by Open:<Select defaultValue=\"none\" style={{ width: 120 }} onChange={value => openFilterChange(value)} size=\"small\">\n                    <Option value=\"none\">Select All</Option>\n                    <Option value=\"open\">Open</Option>\n                    <Option value=\"filled\">Filled</Option>\n                </Select>\n            </Space> \n            <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-between\", overflowY: \"scroll\" }}>\n                {filterDisplay.map((item, i) => \n                    <EventCard key={i} item={item}/>\n                )}\n            </div>\n            \n        </React.Fragment>\n    );\n}; export default OrgEvents;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { Typography, Skeleton, Tag, Descriptions, PageHeader, Input } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport { PlusOutlined } from '@ant-design/icons';\nimport { useRef } from 'react';\n\nconst { Paragraph, Title } = Typography;\n\nconst AboutUs = ({org}) => {\n    const [causes, setCauses] = useState([]);\n    const [inputVisible, setInputVisible] = useState(false);\n    const [inputValue, setInputValue] = useState('');\n    const inputRef = useRef();\n\n    const getCausesByOrg = useCallback(async () => {\n        if (org?.id) {\n            try {\n                const response = await axiosAPI.get(\"organization/get-causes/\", {\n                    params: {\n                        orgId: org?.id\n                    }\n                });\n                setCauses(response.data);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    }, [setCauses, org]);\n\n    useEffect(() => {\n        getCausesByOrg();\n    }, [org, getCausesByOrg]);\n\n    const handleClose = useCallback(async (removedTag) => {\n        const tags = causes.filter(cause => cause.id !== removedTag);\n        setCauses(tags);\n    }, [causes, setCauses]);\n    \n    const handleInputConfirm = useCallback(() => {\n        const newCauses = \n            (inputValue && causes.map(cause => cause.name).indexOf(inputValue) === -1)\n                ? [...causes, {name: inputValue, id: newCauses.length}]\n                : causes;\n        setCauses(newCauses);\n        setInputVisible(false);\n        setInputValue(\"\");\n    }, [setCauses, setInputValue, setInputVisible, causes]);\n\n    const showInput = () => {\n        setInputVisible(true);\n    }\n\n    const tags = (\n        <React.Fragment>\n            {causes.map(c => \n                <Tag \n                    key={c.id} \n                    color=\"blue\" \n                    closable \n                    onClose={e => {\n                        e.preventDefault();\n                        handleClose(c.id);\n                    }}\n                >\n                    {c.name}\n                </Tag>\n            )}\n            {inputVisible && (\n                <Input\n                    ref={inputRef}\n                    type=\"text\"\n                    size=\"small\"\n                    style={{ width: 78 }}\n                    value={inputValue}\n                    onChange={(e) => {setInputValue(e.target.value)}}\n                    onBlur={handleInputConfirm}\n                    onPressEnter={handleInputConfirm}\n                />\n            )}\n            {!inputVisible && (\n                <Tag onClick={showInput} className=\"site-tag-plus\">\n                    <PlusOutlined /> New Tag\n                </Tag>\n            )}\n        </React.Fragment>\n    );\n\n    return (\n        <Skeleton loading={!org} active>\n            <PageHeader\n                title={`About ${org?.name}`}\n                className=\"site-page-header\"\n                tags={tags}\n            >\n                  <Descriptions>\n                    {org?.website && <Descriptions.Item label=\"Website\"><a href={org.website}>{org.website}</a></Descriptions.Item>}\n                    {org?.phone && <Descriptions.Item label=\"Telephone\">{org.phone}</Descriptions.Item>}\n                    {org?.email && <Descriptions.Item label=\"Email\"><a href={`mailto:${org.email}`}>{org.email}</a></Descriptions.Item>}\n                    {org?.address && <Descriptions.Item label=\"Street Address\">{org.address}</Descriptions.Item>}\n                </Descriptions>\n                <Paragraph editable>{org?.description}</Paragraph>\n            </PageHeader>\n        </Skeleton>\n    );\n}; \n\nexport default AboutUs;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Button, Popconfirm, Tooltip, message, Select } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nfunction MemberPage({orgId}) {\n    const [members, setMembers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const currentUser = localStorage.getItem(\"user_id\");\n    \n    const getMembers = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-members/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            response.data.forEach(member => member.key = member.id);\n            setMembers(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n\n    const deleteMember = useCallback(async (memberId) => {\n        try {\n            const response =  await axiosAPI.delete(\"member/delete/\", {\n                params: {\n                    member_id: memberId,\n                }\n            });\n            setMembers(members.filter(member => member.key !== memberId));\n            message.success(\"Member deleted\");\n        } catch(error) {\n            console.error(error);\n            message.error(\"Member could not be deleted.\");\n        }\n    }, [members]);\n\n    useEffect(() => {\n        if (orgId) {\n            getMembers(orgId);\n        }\n    }, [orgId]);\n\n    const columns = [\n        {\n            title: 'First',\n            dataIndex: ['user', 'first_name'],\n            key: 'first',\n        },\n        {\n            title: 'Last',\n            dataIndex: ['user', 'last_name'],\n            key: 'last',\n        },\n        {\n            title: 'Email',\n            dataIndex: ['user', 'email'],\n            key: 'email',\n        },\n        {\n            title: 'Role',\n            dataIndex: 'role',\n            key: 'role',\n            render: (_, record) => (\n                record.member_type === 1 ? \"Admin\" : \"Member\"\n            ),\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: (_, record) => (\n                \"Active\"\n            ),\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (_, record) => (\n                parseInt(currentUser) === record.user.id ?\n                (\n                    <Tooltip title=\"Cannot delete your own user.\">\n                        <Button type=\"primary\" danger disabled>\n                            Delete\n                        </Button>\n                    </Tooltip>\n                ) : (\n                    <Popconfirm title=\"Are you sure you want to delete this member?\" onConfirm={() => deleteMember(record.key)} okText=\"Yes\" cancelText=\"No\" disabled={parseInt(currentUser) === record.user.id}>\n                        <Button type=\"primary\" danger>\n                            Delete\n                        </Button>\n                    </Popconfirm>\n                )\n            )\n        }\n    ];\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Members</Title>\n            <Table columns={columns} dataSource={members} loading={loading}/>\n        </React.Fragment>\n    );\n};\n\n\nexport default MemberPage;","import React, {useState, useEffect, useCallback} from 'react';\nimport {Typography, Table} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\n\n\nconst OrgFeedback = ({isAdmin, orgId}) => {\n\n    const [info, setInfo] = useState([]); \n\n    const getFeedbackByOrg = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"eventFeedback/get-by-org/\", {\n                params: {\n                    orgId: orgId,\n                    isAdmin: isAdmin,\n                    userId: localStorage.getItem(\"user_id\"), \n                }\n            });\n            setInfo(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [orgId, isAdmin]);\n\n    useEffect(() => {\n        getFeedbackByOrg();\n    }, [getFeedbackByOrg, orgId]);\n\n    const columns = [\n    {\n    title: 'Event Name',\n    dataIndex: 'event__name',\n    key: 'event__name',\n    sorter: (a, b) => a.event__name.localeCompare(b.event__name),\n    },\n    {\n    title: 'Volunteer Name',\n    dataIndex: 'name',\n    key: 'name',\n    sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n    title: 'Volunteer Email',\n    dataIndex: 'username__email',\n    key: 'username__email',\n    sorter: (a, b) => a.username__email.localeCompare(b.username__email),\n    },\n    {\n    title: 'Overall Experience',\n    dataIndex: 'overall',\n    key: 'overall',\n    filters: [\n        {\n            text: 'Poor',\n            value: 'Poor',\n        },\n        {\n            text: 'Fair',\n            value: 'Fair',\n        },\n        {\n            text: 'Average',\n            value: 'Average',\n        },\n        {\n            text: 'Good',\n            value: 'Good',\n        },\n        {\n            text: 'Excellent',\n            value: 'Excellent',\n        },\n        ],\n            filterMultiple: true,\n            onFilter: (value, record) => record.overall === value,\n    },\n    {\n    title: 'Satisfaction',\n    dataIndex: 'satisfaction',\n    key: 'satisfaction',\n    filters: [\n        {\n            text: 'Very Dissatisfed',\n            value: 'Very Dissatisfied',\n        },\n        {\n            text: 'Dissatisfied',\n            value: 'Dissatisfied',\n        },\n        {\n            text: 'Neutral',\n            value: 'Neutral',\n        },\n        {\n            text: 'Satisfied',\n            value: 'Satisfied',\n        },\n        {\n            text: 'Very Satisfied',\n            value: 'Very Satisfied',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.satisfaction === value,\n    },\n    {\n    title: 'Recommend Likelihood',\n    dataIndex: 'likely',\n    key: 'likely',\n    filters: [\n        {\n            text: 'Very Unlikely',\n            value: 'Very Unlikely',\n        },\n        {\n            text: 'Somewhat Unlikely',\n            value: 'Somewhat Unlikely',\n        },\n        {\n            text: 'Neutral',\n            value: 'Neutral',\n        },\n        {\n            text: 'Somewhat Likely',\n            value: 'Somewhat Likely',\n        },\n        {\n            text: 'Very Likely',\n            value: 'Very Likely',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.likely === value,\n    },\n    {\n    title: 'Met Expectations',\n    dataIndex: 'expectations',\n    key: 'expectations',\n    filters: [\n        {\n            text: 'Yes',\n            value: 'Yes',\n        },\n        {\n            text: 'No',\n            value: 'No',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.expectations === value,\n    },\n    {\n    title: 'Future Volunteer',\n    dataIndex: 'future',\n    key: 'future',\n    filters: [\n        {\n            text: 'Yes',\n            value: 'Yes',\n        },\n        {\n            text: 'No',\n            value: 'No',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.future === value,\n    },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={4}>Event Feedback</Typography.Title>\n            <Table \n            dataSource={info} \n            columns={columns}\n            expandedRowRender= {record =>\n                <p>\n                    <b>Event Details</b><br/>\n                    Name: {record.event__name}<br/>\n                    Location: {record.event__location}<br/>\n                    Date: {(new Date(record.event__begindate)).toLocaleString('en-US', options)} - {(new Date(record.event__enddate)).toLocaleString('en-US', options)}<br/><br/>\n                    <b>Additional Feedback</b><br/>\n                    What could we have done better?<br/>\n                    {record.better}<br/><br/>\n                    Is there anything else we should know about your volunteer experience?<br/>\n                    {record.experience}<br/>\n                </p>\n            }        \n            />\n        </React.Fragment>\n    );\n}; export default OrgFeedback;\n","import React from 'react';\nimport { Typography} from 'antd';\nimport Plotly from 'react-plotly.js';\n\nfunction NonprofitFunnel({ data}) {\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Summary</Typography.Title>\n                <Plotly data={[{\n                    type: 'funnel', \n                    y: [\"Number of Members\", \"Members who Attended Events\", \"Members who Provided Feedback\"], \n                    x: data}]} layout={{margin: {l: 250}, width:800}}/>\n        </React.Fragment>\n    )\n\n} export default NonprofitFunnel;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerLeaderboard({ data}) {\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        },\n        {\n            title: 'Events Attended',\n            dataIndex: 'count',\n            key: 'count',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.count - b.count,\n        },\n        {\n            title: 'Volunteer Hours',\n            dataIndex: 'total',\n            key: 'total',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.total - b.total,\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Volunteer Leaderboard</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                expandedRowRender = {record => <p style={{ margin: 0 }}><b>Events Attended: </b>{record.event_list}</p>}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default VolunteerLeaderboard;","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nfunction EventLeaderboard({data}) {\n    return (\n        <React.Fragment>      \n            <Plot\n                data={[\n                {type: 'pie', labels: data.ratings_arr[0], values: data.ratings_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Rating'} }\n            />\n\n            <Plot\n                data={[\n                {type: 'pie', labels: data.satisfactions_arr[0], values: data.satisfactions_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Satisfaction'} }\n            />\n            <Plot\n                data={[\n                {type: 'pie', labels: data.likely_arr[0], values: data.likely_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Recommend Likelihood'} }\n            />\n            <Plot\n                data={[\n                {type: 'pie', labels: data.expectations_arr[0], values: data.expectations_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Met Expectations'} }\n            />\n            <Plot\n                data={[\n                {type: 'pie', labels: data.future_arr[0], values: data.future_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Future Volunteer'} }\n            />\n        </React.Fragment>\n    )\n\n\n} export default EventLeaderboard;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\nimport EventLeaderboardPlots from '../components/EventLeaderboardPlots';\n\nfunction EventLeaderboard({ data}) {\n\n    const columns = [\n        {\n            title: 'Event',\n            dataIndex: 'event__name',\n            key: 'event__name',\n        },\n        {\n            title: 'Volunteers',\n            dataIndex: 'count',\n            key: 'count',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.count - b.count,\n        },\n        {\n            title: 'Average Rating',\n            dataIndex: 'avg_rating',\n            key: 'avg_rating',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.count - b.count,\n        },\n        {\n            title: 'Average Satisfaction',\n            dataIndex: 'avg_satisfaction',\n            key: 'avg_satisfaction',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.total - b.total,\n        },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Event Leaderboard</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                expandedRowRender= {record => \n                    <p>\n                        <b>Event Details</b><br/>\n                        Name: {record.event__name}<br/>\n                        Location: {record.event__location}<br/>\n                        Date: {(new Date(record.event__begindate)).toLocaleString('en-US', options)} - {(new Date(record.event__enddate)).toLocaleString('en-US', options)}<br/><br/>\n\n                        <b>Attendes: </b>\n                        {record.attendees}<br/><br/>\n\n                        <EventLeaderboardPlots data={record}/>\n                    </p>\n                }\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default EventLeaderboard;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerBreakdown({ data}) {\n\n    const columns = [\n        { \n            title: '',\n            dataIndex: 'label',\n            key: 'label',\n            ellipsis: true,\n            render: (text: string) => <b>{text}</b>,\n        },\n        {\n          title: 'Count',\n          dataIndex: 'count',\n          key: 'count',\n          ellipsis: true,\n        },\n        {\n          title: 'Hours',\n          dataIndex: 'hours',\n          key: 'hours',\n          ellipsis: true,\n        },\n      ];\n\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Volunteer Breakdown</Typography.Title>\n            <Table \n                dataSource={data} \n                columns={columns}\n                expandedRowRender = {record => <p style={{ margin: 0 }}><b>Volunteer Names: </b>{record.name}</p>}\n                rowExpandable = {record => record.label !== 'Total'}\n                pagination={false}\n            />\n            <br/>\n            <br/>\n        </React.Fragment>\n    )\n\n\n} export default VolunteerBreakdown;","import React, {useState, useEffect, useCallback} from 'react';\nimport {Typography} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\nimport NonprofitFunnel from '../components/NonprofitFunnel.jsx';\nimport VolunteerLeaderboard from '../components/VolunteerLeaderboard';\nimport EventLeaderboard from '../components/EventLeaderboard';\nimport VolunteerBreakdown from '../components/VolunteerBreakdown';\n\nconst Analytics = ({orgId}) => {\n\n    const [funnel, setFunnel] = useState([0, 0, 0, 0])\n    const [breakdown, setBreakdown] = useState([]);\n    const [volunteers, setVolunteers] = useState([]);\n    const [events, setEvents] = useState([]);\n\n    const getFunnel = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-funnel/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setFunnel(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]); \n\n    useEffect(() => {\n        if (orgId) {\n            getFunnel(orgId);\n        }\n    }, []);\n    \n    const getBreakdown = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-breakdown/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setBreakdown(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        if (orgId) {\n            getBreakdown(orgId);\n        }\n    }, []);\n    \n    const getVolunteers = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-leaderboard/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setVolunteers(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        if (orgId) {\n            getVolunteers(orgId);\n        }\n    }, []); \n\n    const getEvents = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/event-leaderboard/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setEvents(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        if (orgId) {\n            getEvents(orgId);\n        }\n    }, []);\n\n    return (\n      <React.Fragment>\n            <Typography.Title level={4}>Analytics</Typography.Title>\n                <NonprofitFunnel data ={funnel}/>\n                <VolunteerBreakdown data={breakdown}/>\n                <VolunteerLeaderboard data={volunteers}/>\n                <EventLeaderboard data={events}/>\n        </React.Fragment>\n    );\n};export default Analytics;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Button, Popconfirm, message, Row, Modal, Select } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nfunction InvitePage({orgId}) {\n    const [invites, setInvites] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const currentUser = localStorage.getItem(\"user_id\");\n    const [showModal, setShowModal] = useState(false);\n    const [modalButtonLoading, setModalButtonLoading] = useState(false);\n    const [invitedMembers, setInvitedMembers] = useState([]);\n    const [memberType, setMemberType] = useState(0);\n    \n    const getInvites = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-invites/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            response.data.forEach(invite => invite.key = invite.id);\n            setInvites(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    const inviteMembers = useCallback(async () => {\n        try {\n            setModalButtonLoading(true);\n            await axiosAPI.post(\"member/invite/\", {\n                emails: invitedMembers,\n                member_type: memberType,\n                org_id: orgId,\n            });\n            setInvitedMembers([]);\n            getInvites();\n            message.success(\"Invitation sent\");\n        } catch(error) {\n            console.error(error);\n            message.error(\"Invitations could not be sent.\");\n        }\n        setModalButtonLoading(false);\n    }, [invitedMembers, getInvites, setInvitedMembers, memberType, orgId, setModalButtonLoading]);\n\n    const deleteInvite = useCallback(async (inviteId) => {\n        try {\n            const response =  await axiosAPI.delete(\"invite/delete/\", {\n                params: {\n                    invite_id: inviteId,\n                }\n            });\n            setInvites(invites.filter(invite => invite.key !== inviteId));\n            message.success(\"Invitation deleted\");\n        } catch(error) {\n            console.error(error);\n            message.error(\"Invitation could not be deleted.\");\n        }\n    }, [invites]);\n\n    useEffect(() => {\n        if (orgId) {\n            getInvites(orgId);\n        }\n    }, [orgId]);\n\n    const columns = [\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        },\n        {\n            title: 'Role',\n            dataIndex: 'role',\n            key: 'role',\n            render: (_, record) => (\n                record.member_type === 1 ? \"Admin\" : \"Member\"\n            ),\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: (_, record) => (\n                \"Active\"\n            ),\n        },\n        {\n            title: 'Resend',\n            key: 'resend',\n            render: (_, record) => (\n                <Popconfirm title=\"Are you sure you want to delete this member?\" onConfirm={() => {}} okText=\"Yes\" cancelText=\"No\">\n                    <Button type=\"primary\">\n                        Resend\n                    </Button>\n                </Popconfirm>\n            )\n        },\n        {\n            title: 'Delete',\n            key: 'delete',\n            render: (_, record) => (\n                <Popconfirm title=\"Are you sure you want to delete this invitation?\" onConfirm={() => deleteInvite(record.key)} okText=\"Yes\" cancelText=\"No\">\n                    <Button type=\"primary\" danger>\n                        Delete\n                    </Button>\n                </Popconfirm>\n            )\n        }\n    ];\n\n    return (\n        <React.Fragment>\n            <div>\n                <Row justify=\"space-between\">\n                    <Title level={4}>Outstanding invites</Title>\n                    <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => setShowModal(true)}>\n                        Invite new members\n                    </Button>\n                </Row>\n                <Table columns={columns} dataSource={invites} loading={loading}/>\n            </div>\n            <Modal\n                visible={showModal}\n                title=\"Invite new members\"\n                onOk={() => {}}\n                onCancel={() => setShowModal(false)}\n                footer={[\n                    <Button key=\"back\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>,\n                    <Button key=\"submit\" type=\"primary\" loading={modalButtonLoading} onClick={inviteMembers}>\n                        Send\n                    </Button>,\n                ]}\n            >\n                <Select title=\"hello:\" defaultValue={0} style={{ width: '100%', marginBottom: 8 }} onChange={setMemberType} placeholder=\"Member Type\">\n                    <Option value={0}>Member</Option>\n                    <Option value={1}>Admin</Option>\n                </Select>\n                <Select mode=\"tags\" style={{ width: '100%' }} onChange={value => setInvitedMembers(value)} tokenSeparators={[',']} placeholder=\"Emails\" allowClear>\n                    {[]}\n                </Select>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\n\nexport default InvitePage;","import React from \"react\";\nimport Tag from \"antd/lib/tag\";\nimport \"antd/lib/tag/style/css\";\n\nconst statusMap = {\n  Complete: <Tag color=\"green\">Complete</Tag>,\n  Rejected: <Tag color=\"red\">Rejected</Tag>,\n  Pending: <Tag color=\"orange\">Pending Approval</Tag>,\n  None: <p></p>\n};\n\nexport const StatusTag = ({ status }) => statusMap[status];","import React, {useState, useCallback, useEffect} from 'react';\nimport { Upload, Button, Table, message } from 'antd';\nimport {StatusTag} from '../components/StatusTag';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nimport { UploadOutlined } from '@ant-design/icons';\n\nfunction UserFilesTable({orgId, fileList}) {\n    const [userFileList, setUserFileList] = useState([]);\n    const getUserFiles = useCallback(async (orgId) => {\n        try {\n             const response = await axiosAPI.get(\"clearances/get-user-files/\", {\n                 params: {\n                     userId: localStorage.getItem(\"user_id\"), \n                     orgId: orgId\n                 }\n             });\n            const files = response.data;\n            const formattedFiles = files.map(file => ({\n                uid: file.id, \n                orgFormId: file.org_file,\n                status: file.status,\n                url: file.url,\n                comment: file.comment\n            }));\n            setUserFileList(formattedFiles);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        getUserFiles(orgId)\n    }, [orgId]);\n\n    const props = {\n        listType: 'text',\n        fileList: [],\n        onChange(info) {\n            let fl = [...info.fileList];\n            fl = fl.map(file => {\n                if (file.response) {\n                    // Component will show file.url as link\n                    file.url = file.response.data.filled_form;\n                }\n                return file;\n            });\n                \n            setUserFileList(fl);\n        },\n    };\n    \n    const columns = [\n        {\n            title: 'Incomplete File',\n            dataIndex: 'incomplete_file',\n            key: 'incomplete_file',\n            render: url => !!url ? <a target=\"_blank\" href={url}>{url.split('/').slice(-1)[0].split('?')[0]}</a> : null,\n        },\n        {\n            title: 'Your Uploaded File',\n            dataIndex: 'uploaded_file',\n            key: 'uploaded_file',\n            render: url => !!url ? <a target=\"_blank\" href={url}>{url.split('/').slice(-1)[0].split('?')[0]}</a> : null,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: (_text, record) => <StatusTag status={record.status} />\n        },\n        {\n            title: 'Comment',\n            dataIndex: 'comment',\n            key: 'comment',\n            render: (text, _record) => <p>{text}</p> \n        },\n        {\n            title: 'Upload New File',\n            key: 'upload',\n            render: (record) => (\n                <Upload {...props} \n                    customRequest={async (options) => {\n                            const formData = new FormData();\n                            formData.append('org_file_id', record.key);\n                            formData.append('user_id', localStorage.getItem(\"user_id\"))\n                            formData.append('filled_form', options.file, options.file.name);\n                            formData.append('status', 'Pending');\n                            formData.append('comment', 'N/A');\n                            try {\n                                let data = await axiosAPI.post('clearances/upload-user-file', formData, {\n                                    headers: {\n                                    'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW'\n                                    }\n                                });\n                                options.onSuccess(data, options.file);\n                                getUserFiles(orgId);\n                                message.success('File uploaded');\n                            } catch (error) {\n                                message.success('File failed to upload');\n                                console.log(error)\n                            }\n                        }\n                    }\n                >\n                    <Button icon={<UploadOutlined/>}> Upload </Button>  \n                </Upload>\n            ),\n        },\n    ];\n\n    function getUserFileForOrgFile(infoType, oFormId) {\n        if ((userFileList.filter(ufile => ufile.orgFormId == oFormId)).length > 0) {\n            const userFile = userFileList.filter(ufile => ufile.orgFormId == oFormId)[0]\n            return userFile[infoType]\n        }\n\n        if (infoType == \"status\") {\n            return \"None\";\n        }\n\n        return null\n    }\n    \n    const data = fileList.map((file,i) => ({\n        \"key\": file.uid, \n        \"incomplete_file\": file.url,\n        \"uploaded_file\": getUserFileForOrgFile(\"url\", file.uid),\n        \"status\": getUserFileForOrgFile(\"status\", file.uid),\n        \"comment\": getUserFileForOrgFile(\"comment\", file.uid),\n    }))\n    \n    console.log(data)\n\n    return (\n        <div>\n           <Table columns={columns} dataSource={data}/>\n        </div>\n    );\n};\nexport default UserFilesTable;","import React, {useState, useCallback, useEffect} from 'react';\nimport { Upload, Button, message, Typography, Table } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport UserFilesTable from '../pages/UserFilesTable';\nimport { UploadOutlined } from '@ant-design/icons';\nconst { Title } = Typography;\n\nfunction ClearanceUpload({isAdmin, orgId, eId}) {\n    const [fileList, setFileList] = useState([]);\n\n    const getOrgFiles = useCallback(async (orgId) => {\n        try {\n            const response = await axiosAPI.get(\"clearances/get-org-files-for-event/\", {\n                params: {\n                    orgId: orgId, \n                    eventId: eId\n                }\n            });\n            const files = response.data;\n            console.log('files', files);\n            \n            const formattedFiles = files.map(file => ({\n                key: file.id, \n                uid: file.id, \n                name: file.url.split('/').slice(-1)[0].split('?')[0], \n                status: \"done\", \n                url: file.url,\n                event: file.event,\n                eventName: file.event__name\n            }));\n            console.log(formattedFiles)\n            setFileList(formattedFiles);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        getOrgFiles(orgId)\n    }, [orgId]);\n\n    const orgProps = {\n        listType: 'picture',\n        fileList: fileList,\n        onChange(info) {\n            let fl = [...info.fileList];\n            fl = fl.map(file => {\n                if (file.response) {\n                    // Component will show file.url as link\n                    file.url = file.response.data.empty_form;\n                }\n                return file;\n            });\n                \n            setFileList(fl);\n        },\n        customRequest: async function(options) {\n            const formData = new FormData();\n            formData.append('empty_form', options.file, options.file.name);\n            formData.append('orgId', orgId);\n            formData.append('eventId', eId);\n            try {\n                let data = await axiosAPI.post('clearances/upload-org-file', formData, {\n                    headers: {\n                    'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW'\n                    }\n                });\n                options.onSuccess(data, options.file);\n                message.success('File uploaded');\n            } catch (error) {\n                message.success('File failed to upload');\n                console.log(error)\n            }\n        },\n    };\n\n    return (\n        <div>\n            {isAdmin ? \n                <>\n                    <Upload {...orgProps}>\n                        <Button icon={<UploadOutlined/>}>Upload New Form</Button>  \n                    </Upload>\n                </> :\n                <UserFilesTable orgId={orgId} fileList={fileList} />\n            }\n           \n        </div>\n    );\n};\nexport default ClearanceUpload;\n\n    ","import React, {useState, useCallback, useEffect} from 'react';\nimport { Upload, Button, message, Typography, Table } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nimport ClearanceUpload from '../components/ClearanceUpload';\nconst { Title } = Typography;\n\nfunction Clearances({isAdmin, orgId}) {\n    const [loading, setLoading] = useState(true);\n    const [events, setEvents] = useState([]); \n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    const getEventsByOrg = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get-by-org/\", {\n                params: {\n                    orgId: orgId,\n                }\n            });\n\n            const data = response.data;\n            data.map(e => {\n                e.bdate = (new Date(e.begindate)).toLocaleString('en-US', options);\n                e.edate = (new Date(e.enddate)).toLocaleString('en-US', options);\n            });\n\n            setEvents(data);\n            setLoading(false);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setEvents, orgId]);\n\n    useEffect(() => {\n        getEventsByOrg();\n    }, [orgId, getEventsByOrg]);\n\n    const columns = [\n        {\n            title: 'Event',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Start Date',\n            dataIndex: 'bdate',\n            key: 'bdate',\n        },\n        {\n            title: 'End Date',\n            dataIndex: 'edate',\n            key: 'edate',\n        }\n    ];\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Manage clearances for upcoming events</Title>\n            <Table \n                columns={columns}\n                dataSource={events} \n                loading={loading}\n                expandedRowRender= {record => \n                    <ClearanceUpload isAdmin={isAdmin} orgId={orgId} eId={record.id} />\n            }/>\n        </React.Fragment>\n    );\n};\n\nexport default Clearances;","import React, {useState, useCallback, useEffect} from 'react';\nimport { Table, Radio, Typography } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nconst { Paragraph } = Typography;\n\nfunction OrgClearanceTable({orgId, eId}) {\n    const [rows, setRows] = useState([]);\n\n    function acceptOrReject(value, record) {\n        console.log(value.target.value)\n        console.log(record)\n\n        const status = value.target.value\n\n        try {\n            const response = axiosAPI.post(\"clearances/set-status-user-file/\", \n                {\n                    id: record.key, \n                    status: status,\n                }\n        );\n        } catch(error){\n            console.error(error)\n        }\n    };\n\n    function addComment(value, record) {\n        const comment = value\n\n        try {\n            const response = axiosAPI.post(\"clearances/set-status-user-file/\", \n                {\n                    id: record.key, \n                    comment: comment,\n                }\n            );\n            getUserFiles(orgId)\n        } catch(error) {\n            console.error(error)\n        }\n    };\n\n    const getUserFiles = useCallback(async (orgId) => {\n        try {\n            const response = await axiosAPI.get(\"clearances/get-user-files-for-org/\", {\n                params: {\n                    orgId: orgId, \n                    eventId: eId\n                }\n            });\n            const files = response.data;\n            const result = files.map((file,i) => ({\n                key: file.id, \n                user: file.user__email, \n                url: file.url, \n                status: file.status,\n                comment: file.comment\n            }))\n            setRows(result)\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        getUserFiles(orgId)\n    }, [orgId]);\n   \n    const columns = [\n        {\n            title: 'User',\n            dataIndex: 'user',\n            key: 'user',\n            render: text => <p>{text}</p>,\n        },\n        {\n            title: 'File',\n            dataIndex: 'url',\n            key: 'url',\n            render: url => !!url ? <a target=\"_blank\" href={url}>{url.split('/').slice(-1)[0].split('?')[0]}</a> : null,\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record, index) => (\n                <Radio.Group defaultValue={record.status} onChange={(value) => acceptOrReject(value, record)} buttonStyle=\"solid\">\n                <Radio.Button value=\"Complete\">Accept</Radio.Button>\n                <Radio.Button value=\"Rejected\">Reject</Radio.Button>\n                </Radio.Group>\n            ),\n        },\n        {\n            title: 'Comment',\n            dataIndex: 'comment',\n            key: 'comment',\n            render: (text,record, index) => ( \n            (<div style={{ marginLeft: 4, flexGrow: 100 }}>\n                <Paragraph style={{ width: \"100%\" }} editable={{ onChange: (value) => addComment(value, record) }}>{record.comment}</Paragraph>\n            </div>))\n           \n        },\n    ];\n    \n    return (\n        <div>\n           <Table columns={columns} dataSource={rows} />\n        </div>\n    );\n};\nexport default OrgClearanceTable;","import React, {useState, useCallback, useEffect} from 'react';\nimport { Upload, Button, message, Typography, Table } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nimport OrgClearanceTable from './OrgClearanceTable';\nconst { Title } = Typography;\n\nfunction ManageVolunteerClearances({orgId}) {\n    const [loading, setLoading] = useState(true);\n    const [events, setEvents] = useState([]); \n\n    const getEventsByOrg = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get-by-org/\", {\n                params: {\n                    orgId: orgId,\n                }\n            });\n\n            const data = response.data;\n            data.map(e => {\n                e.bdate = (new Date(e.begindate)).toLocaleString('en-US', options);\n                e.edate = (new Date(e.enddate)).toLocaleString('en-US', options);\n            });\n\n            setEvents(data);\n            setLoading(false);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setEvents, orgId]);\n\n    useEffect(() => {\n        getEventsByOrg();\n    }, [orgId, getEventsByOrg]);\n\n    const columns = [\n        {\n            title: 'Event',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Start Date',\n            dataIndex: 'bdate',\n            key: 'bdate',\n        },\n        {\n            title: 'End Date',\n            dataIndex: 'edate',\n            key: 'edate',\n        }\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Manage uploaded clearances</Title>\n            <Table \n                columns={columns}\n                dataSource={events} \n                loading={loading}\n                expandedRowRender= {record => \n                    <OrgClearanceTable orgId={orgId} eId={record.id} />\n            }/>\n        </React.Fragment>\n    );\n};\nexport default ManageVolunteerClearances;","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Form, Input, Button} from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport { addAlert } from '../actionCreators.js';\nimport { useDispatch } from 'react-redux';\nimport './NewEmail.css';\n\nconst { TextArea } = Input;\n\nconst { Title } = Typography;\n\nfunction NewEmail({orgId}) {\n    const [members, setMembers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [checkedList, setCheckedList] = useState([]); \n    const dispatch = useDispatch();\n\n    const getMembers = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-members/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            response.data.forEach(member => member.key = member.id);\n            setMembers(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        if (orgId) {\n            getMembers(orgId);\n        }\n    }, [getMembers, orgId]);\n\n    const onChange = useCallback((_selectedRowKeys, selectedRows) => {\n        setCheckedList(selectedRows);\n    }, []);\n\n    \n    const columns = [\n        {\n            title: 'First',\n            dataIndex: ['user', 'first_name'],\n            key: 'first',\n            width: '25%',\n        },\n        {\n            title: 'Last',\n            dataIndex: ['user', 'last_name'],\n            key: 'last',\n            width: '25%',\n        },\n        {\n            title: 'Email',\n            dataIndex: ['user', 'email'],\n            key: 'email',\n            width: '25%',\n        },\n        {\n            title: 'Role',\n            dataIndex: 'role',\n            key: 'role',\n            render: (_, record) => (\n                record.member_type === 1 ? \"Admin\" : \"Member\"\n            ),\n            width: '25%',\n        },\n    ];\n\n    const onFinish = useCallback(async (values) => {\n        console.log(checkedList)\n        try {\n            await axiosAPI.post(\"member/email/\", {\n                subject: values.subject,\n                body: values.body,\n                membersList: checkedList,\n            });\n            dispatch(addAlert('Email sent', 'success'));\n        }\n        catch {\n            dispatch(addAlert('Email not sent', 'error'));\n        }\n    }, [dispatch, checkedList]);\n\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Email members</Title>\n\n            <Table \n                className = \"member-table\"\n                rowSelection={{ onChange }}\n                columns={columns} \n                dataSource={members} \n                loading={loading}/>  \n\n            <Form\n                name=\"org\"\n                className=\"org-form\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}> \n\n                <Form.Item\n                    name=\"subject\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Email subject is required.' }]}\n                >\n                    <Input placeholder=\"Email subject\" />\n                </Form.Item>\n            \n                <Form.Item\n                    name=\"body\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Email body is required.' }]}>\n                        <TextArea row={6} style={{ width: '100%' }} placeholder=\"Email body here...\" />\n                </Form.Item>\n\n                <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"org-form-button\">\n                    Send email\n                </Button>\n                </Form.Item>\n\n            </Form>\n        </React.Fragment>\n    );\n};\n\n\nexport default NewEmail;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Button, Popconfirm, Tooltip, message, Select } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\n\nfunction Attendees({orgId}) {\n    const [attendees, setAttendees] = useState([]);\n    const [loading, setLoading] = useState(true);\n    \n    const getAttendees = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"event/get-attendees/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setAttendees(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        getAttendees();\n    }, []);\n\n    const columns = [\n        {\n            title: 'Upcoming Event',\n            dataIndex: 'events__name',\n            key: 'events__name',\n        },\n        {\n            title: 'Attendees',\n            dataIndex: 'count',\n            key: 'count',\n        },\n        {\n            title: 'Cap',\n            dataIndex: 'events__attendee_cap',\n            key: 'events__attendee_cap',\n        },\n    ];\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Attendees</Title>\n            <Table \n                columns={columns}\n                dataSource={attendees} \n                loading={loading}\n                expandedRowRender= {record => \n                    <p>\n                        <b>Event Details</b><br/>\n                        Name: {record.events__name}<br/>\n                        Location: {record.events__location}<br/>\n                        Date: {(new Date(record.events__begindate)).toLocaleString('en-US', options)} - {(new Date(record.events__enddate)).toLocaleString('en-US', options)}<br/><br/>\n                        \n                        <b>Attendees: </b>\n                        {record.attendees}\n                    </p>\n            }/>\n        </React.Fragment>\n    );\n};\n\n\nexport default Attendees;","import React, {useState, useEffect} from 'react';\nimport { Typography, Tabs } from 'antd';\nimport QAndAPage from './QAndAPage';\nimport OrgEvents from './OrgEvents';\nimport AboutUs from './AboutUs';\nimport MemberPage from './MemberPage';\nimport OrgFeedback from './OrgFeedback'; \nimport Analytics from './Analytics'; \nimport InvitePage from './InvitePage'; \nimport Clearances from './Clearances';\nimport ManageVolunteerClearances from './ManageVolunteerClearances'\nimport NewEmail from './NewEmail'\nimport Attendees from './Attendees';\nimport \"./OrgPage.css\";\nimport { makePageView } from '../utils/googleAnalytics';\n// import EventLandingPage from './EventLandingPage';\n\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nfunction OrgPage({member, orgId}) {\n    const [org, setOrg] = useState(null);\n    const [activeKey, setActiveKey] = useState(\"home\");\n    const isAdmin = member?.member_type === 1;\n\n    const onChange = (key) => {\n        setActiveKey(key);\n        makePageView('/' + key);\n    }\n\n    useEffect(() => {\n        if (orgId) {\n            if (member) {\n                setOrg(member.organization);\n            }\n            setActiveKey(\"home\")\n        }\n    }, [setActiveKey, orgId, member]);\n\n    return (\n        <React.Fragment>\n            {org && <Title style={{ textAlign: \"center\" }} level={2}>{org.name}</Title>}\n            <Tabs activeKey={activeKey} onChange={onChange} style={{ height: \"100%\" }}>\n                <TabPane tab=\"Home\" key=\"home\" style={{ height: \"100%\" }}>\n                    <AboutUs org={org} />\n                </TabPane>\n                {isAdmin &&\n                     <TabPane tab=\"Invites\" key=\"invites\">\n                        <InvitePage orgId={orgId} />\n                    </TabPane>\n                }\n                <TabPane tab=\"Events\" key=\"events\">\n                    <OrgEvents orgId={orgId} viewmore={false} eventId={-1}/>\n                </TabPane>\n                <TabPane tab=\"Event Clearances\" key=\"clearance\">\n                    <Clearances isAdmin={isAdmin} orgId={orgId} />\n                </TabPane>\n                {isAdmin &&\n                <TabPane tab=\"Attendees\" key=\"attendees\">\n                    <Attendees orgId={orgId} />\n                </TabPane>\n                }\n                {isAdmin &&\n                    <TabPane tab=\"Attendee Clearances\" key=\"clearance_table\">\n                        <ManageVolunteerClearances orgId={orgId} />\n                    </TabPane> \n                }\n                <TabPane tab=\"Feedback\" key=\"feedback\">\n                    <OrgFeedback isAdmin={member?.member_type} orgId={orgId} />\n                </TabPane>\n                {isAdmin &&\n                <TabPane tab=\"Analytics\" key=\"analytics\">\n                    <Analytics orgId={orgId} />\n                </TabPane>\n                }\n                <TabPane tab=\"FAQ\" key=\"faq\">\n                    <QAndAPage isAdmin={isAdmin} orgId={orgId} />\n                </TabPane>\n                {isAdmin &&\n                     <TabPane tab=\"Members\" key=\"members\">\n                        <MemberPage orgId={orgId} />\n                    </TabPane>\n                }\n                {isAdmin &&\n                    <TabPane tab=\"Communication\" key=\"member_emails\">\n                        <NewEmail orgId={orgId} />\n                    </TabPane> \n                }\n            </Tabs>\n        </React.Fragment>\n    );\n    \n};\n\n\nexport default OrgPage;","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerEventLeaderboard({ data}) {\n\n    const columns = [\n        {\n            title: 'Event',\n            dataIndex: 'event__name',\n            key: 'event__name',\n        },\n        {\n            title: 'Nonprofit',\n            dataIndex: 'event__organizations__name',\n            key: 'event__organizations__name',\n        },\n        {\n            title: 'Rating',\n            dataIndex: 'overall',\n            key: 'overall',\n            sorter: (a, b) => a.overall - b.overall,\n            defaultSortOrder: 'descend',\n        },\n        {\n            title: 'Satisfaction',\n            dataIndex: 'satisfaction',\n            key: 'satisfaction',\n            sorter: (a, b) => a.satisfaction - b.satisfaction,\n            defaultSortOrder: 'descend',\n        },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Event Leaderboard</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default VolunteerEventLeaderboard;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction NonprofitBreakdown({ data}) {\n\n    const columns = [\n        {\n            title: 'Nonprofit',\n            dataIndex: 'events__organizations__name',\n            key: 'events__organizations__name',\n        },\n        {\n            title: 'Events',\n            dataIndex: 'count',\n            key: 'count',\n            sorter: (a, b) => a.count - b.count,\n            defaultSortOrder: 'descend',\n        },\n        {\n            title: 'Hours',\n            dataIndex: 'hours',\n            key: 'hours',\n            sorter: (a, b) => a.hours - b.hours,\n            defaultSortOrder: 'descend',\n        },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Nonprofit Breakdown</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                expandedRowRender = {record => <p style={{ margin: 0 }}><b>Events Attended: </b>{record.events}</p>}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default NonprofitBreakdown;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerSummary({ data}) {\n\n    const columns = [\n        {\n            title: '',\n            dataIndex: 'label',\n            key: 'label',\n            ellipsis: true,\n            render: (text: string) => <b>{text}</b>,\n        },\n        {\n          title: 'Nonprofits',\n          dataIndex: 'nonprofits',\n          key: 'nonprofits',\n          ellipsis: true,\n        },\n        {\n          title: 'Events',\n          dataIndex: 'events',\n          key: 'events',\n          ellipsis: true,\n        },\n        {\n            title: 'Hours',\n            dataIndex: 'hours',\n            key: 'hours',\n            ellipsis: true,\n          },\n      ];\n\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Summary</Typography.Title>\n            <Table \n                dataSource={data} \n                columns={columns}\n                expandedRowRender = {record => \n                    <p style={{ margin: 0 }}>\n                        <b>Nonprofits: </b>{record.nonprofits_list}<br/>\n                        <b>Events: </b>{record.events_list}<br/>\n                    </p>\n                }\n                pagination={false}\n            />\n            <br/>\n            <br/>\n        </React.Fragment>\n    )\n\n\n} export default VolunteerSummary;","import React from 'react';\nimport { Typography, Table, Progress} from 'antd';\n\nfunction VolunteerGoals({ data}) {\n\n    const columns = [\n        {\n            title: 'Start Date',\n            dataIndex: 'begindate',\n            key: 'begindate',\n            defaultSortOrder: 'descend'\n        },\n        {\n            title: 'End Date',\n            dataIndex: 'enddate',\n            key: 'enddate',\n            defaultSortOrder: 'ascend'\n        },\n        {\n            title: 'Hours Completed',\n            dataIndex: 'completed',\n            key: 'completed',\n        },\n        {\n            title: 'Goal Hours',\n            dataIndex: 'hours',\n            key: 'hours',\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: (_, record) => (\n                <Progress percent={record.progress}/>\n            ),\n        },\n    ];\n\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Goals</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default VolunteerGoals;\n\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {Typography} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\nimport VolunteerEventLeaderboard from '../components/VolunteerEventLeaderboard';\nimport NonprofitBreakdown from '../components/NonprofitBreakdown';\nimport VolunteerSummary from '../components/VolunteerSummary';\nimport VolunteerGoals from '../components/VolunteerGoals';\nimport Plotly from 'react-plotly.js';\nimport { usePageView } from '../utils/googleAnalytics'\n\nconst VolunteerAnalytics = () => {\n\n    const user = localStorage.getItem(\"user_id\");\n\n    const [monthlyHours, setMonthlyHours] = useState([]); \n    const [summary, setSummary] = useState([]);\n    const [goals, setGoals] = useState([]);\n    const [nonprofits, setNonprofits] = useState([]);\n    const [events, setEvents] = useState([]);\n    \n    const getMonthlyHours = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/get-monthly-hours/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setMonthlyHours(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n            getMonthlyHours();\n    }, []);\n    usePageView('/volunteer-analytics');\n\n    const getSummary = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-summary/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setSummary(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n            getSummary();\n    }, []);\n\n    const getGoals = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/get-volunteer-goals/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setGoals(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n            getGoals();\n    }, []);\n    \n    const getNonprofits = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/nonprofit-breakdown/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setNonprofits(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n            getNonprofits();\n    }, []);\n    \n    const getEvents = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-event-leaderboard/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setEvents(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n            getEvents();\n    }, []);\n      \n\n    return (\n      <React.Fragment>\n            <Typography.Title level={2}>Analytics</Typography.Title>\n            \n            <Plotly \n                data={[{\n                    type: 'scatter', \n                    marker: {color: 'blue'},\n                    x: monthlyHours[0],\n                    y: monthlyHours[1],\n                    row: 1,\n                    col: 1},\n                    {type: 'bar', \n                    marker: {color: 'blue'},\n                    x: monthlyHours[2],\n                    y: monthlyHours[3],\n                    xaxis: 'x2',\n                    yaxis: 'y2',\n                    row: 1,\n                    col: 2},\n                    ]}\n                layout={{\n                    grid: {rows: 1, \n                            columns: 2,\n                            pattern: 'independent'},\n                    showlegend: false,\n                    title: 'Volunteer Hours'}}/>\n\n            <VolunteerSummary data={summary}/>\n            <VolunteerGoals data={goals} />\n            <NonprofitBreakdown data={nonprofits}/>\n            <VolunteerEventLeaderboard data={events}/> \n        </React.Fragment>\n    );\n};export default VolunteerAnalytics;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport { Calendar, Typography , Button, Popover, message} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nconst { Paragraph } = Typography;\n\nfunction VolunteerCalendarCard ({item}){\n    const [vis, setVisible] = useState([false]); \n    const [isLoading, setIsLoading] = useState(false);\n\tconst [viewmore, setViewmore] = useState(false);\n\tconst [attendeeCount, setAttendeeCount] = useState(0);\n    \n    const toggleVisible = () => {\n        setVisible(!vis);\n    };\n\n    const onClick = useCallback(async (event_id) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tawait axiosAPI.post(\"attendees/delete/\", {\n\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\tevent: event_id,\n\t\t\t});\n\t\t\tmessage.success(\"Unjoined event\")\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = \"Unjoin failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, []);\n\n    const onClickViewmore = useCallback(async (viewmore) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tconst response = await axiosAPI.get(\"events/get-event-attendee-count/\", {\n                params: {\n\t\t\t\t\tevent: item.events__id\n                }\n\t\t\t});\n\t\t\tsetAttendeeCount(response.data);\n\t\t\tsetViewmore(!viewmore);\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = \"Viewmore failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, []);\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    const begindate = new Date(item.events__begindate)\n\tconst enddate = new Date(item.events__enddate)\n    const virtual = item.events__virtual ? \"Yes.\" : \"No.\";\n    \n    if (viewmore) {\n    \treturn (\n\t\t\t<Popover \n                content={\n                    <div>\n                        <Typography.Title level={4}>{item.events__name}</Typography.Title>\n                        <Paragraph><b>Location: </b>{item.events__location}</Paragraph>\n                        <Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n                        <Paragraph><b>Description: </b>{item.events__description}</Paragraph>\n                        <Paragraph><b>Virtual? </b>{virtual}</Paragraph>\n                        <Paragraph><b>Instructions: </b>{item.events__instructions}</Paragraph>\n                        <Paragraph><b>No. of Attendees: </b>{attendeeCount}/{item.events__attendee_cap}</Paragraph>\n                        <p style={{color: '#1890ff'}}>>><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(viewmore)}>\n                            View Less\n                        </Button></p>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.events__id)} loading={isLoading}>\n                            Unjoin\n                        </Button>\n                        <a onClick={toggleVisible}>\n                            Close\n                        </a>\n                    </div>}\n                trigger=\"click\"\n                visible={!vis}\n            >\n                <Button type=\"link\" className=\"event-viewmore-form-button\" onClick={toggleVisible}>\n                    > {item.events__name}\n                </Button>\n            </Popover>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Popover \n                content={\n                    <div>\n                        <Typography.Title level={4}>{item.events__name}</Typography.Title>\n                        <Paragraph><b>Location: </b>{item.events__location}</Paragraph>\n                        <Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n                        <Paragraph><b>Description: </b>{item.events__description.substring(0, 50)}...</Paragraph>\n                        <p style={{color: '#1890ff'}}><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(viewmore)}>\n                            View More\n                        </Button></p>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.events__id)} loading={isLoading}>\n                            Unjoin\n                        </Button>\n                        <a onClick={toggleVisible}>\n                            Close\n                        </a>\n                    </div>}\n                trigger=\"click\"\n                visible={!vis}\n            >\n                <Button type=\"link\" className=\"event-viewmore-form-button\" onClick={toggleVisible}>\n                    > {item.events__name}\n                </Button>\n            </Popover>\n\t\t);\n\t}\n\t\n\n\n} export default VolunteerCalendarCard; \n\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Calendar, Typography , Button, Popover} from 'antd';\nimport { usePageView } from '../utils/googleAnalytics'\nimport axiosAPI from \"../api/axiosApi\";\nimport VolunteerCalendarCard from './VolunteerCalendarCard';\n\nconst VolunteerCalendar = () => {\n    const [events, setEvents] = useState([]); \n    usePageView('/calendar')\n\n    const getVolunteerEvents = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"attendees/get-volunteer-events/\", {\n                params: {\n                    user_id: localStorage.getItem(\"user_id\"),\n                }\n            });\n            setEvents(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, []);\n\n    useEffect(() => {\n        getVolunteerEvents();\n    }, []);\n\n    function getListData(value) {\n        let listData;\n        listData = events.filter(events => {\n            const bdate = new Date(events.events__begindate);\n            const edate = new Date(events.events__enddate);\n\n            console.log(\"date issue \" + value.year());\n            // console.log(\"edate \" + edate.getFullYear());\n\n            return ((value.month() <= edate.getMonth() && value.month() >= bdate.getMonth())\n                && (value.date() <= edate.getDate() && value.date() >= bdate.getDate())\n                && (value.year() <= edate.getFullYear() && value.year() >= bdate.getFullYear()));\n        })\n        return listData || [];\n    }\n\n    function getMonthData(value) {\n        let monthData;\n        monthData = events.filter(events => {\n            const bdate = new Date(events.events__begindate);\n            const edate = new Date(events.events__enddate);\n            // console.log(\"date issue \" + value.year());\n            // console.log(\"edate \" + edate.getFullYear());\n            return ((value.month() <= edate.getMonth() && value.month() >= bdate.getMonth())\n                && (value.year() <= edate.getFullYear() && value.year() >= bdate.getFullYear()));\n        })\n\n        return monthData || [];\n    }\n\n    function dateCellRender(value) {\n        const listData = getListData(value);\n        return (\n          <ul className=\"events\">\n            {listData.map((item, i) => (\n                <li key={i}>\n                    <VolunteerCalendarCard key={i} item={item}/>\n                </li>\n            ))}\n          </ul>\n        );\n      }\n\n    function monthCellRender(value) {\n        const monthData = getMonthData(value);\n        return (\n            <ul className=\"events\">\n            {monthData.map((item, i) => (\n                <li key={i}>\n                    <VolunteerCalendarCard key={i} item={item}/>\n                </li>\n            ))}\n          </ul>\n        );\n      }\n\n    return (\n        <div align=\"center\">\n            <Typography.Title level={2}>View My Events</Typography.Title>\n            <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\n        </div>\n    );\n};\n\nexport default VolunteerCalendar;  \n\n","import React, { useCallback } from 'react';\nimport { Form, Input, Button, DatePicker} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport { addAlert } from '../actionCreators.js';\nimport { useDispatch } from 'react-redux';\nimport \"antd/dist/antd.css\";\nimport \"./NewOrgForm.css\";\n\nconst { RangePicker } = DatePicker;\n\nconst NewGoalForm = () => {\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await axiosAPI.post(\"user/create-goal/\", {\n                user_id: localStorage.getItem(\"user_id\"),\n                hours: values.hours,\n                date: values.date,\n            });\n            dispatch(addAlert('Goal created', 'success'));\n        }\n        catch {\n            dispatch(addAlert('Goal creation failed', 'error'));\n        }\n    }, [dispatch]);\n\n    return (\n        <Form\n            name=\"goal\"\n            className=\"goal-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        > \n            <Form.Item\n                    name=\"hours\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Hours is required and must be a number.'}]}\n                >\n                    <Input style={{ width: '100%' }} placeholder=\"Volunteer Hours\" type=\"tel\"/>\n            </Form.Item>\n            <Form.Item\n                name=\"date\"\n                hasFeedback\n                rules={[{ required: true, message: 'Date is required.' }]}\n            >\n                <RangePicker style={{ width: '100%' }} />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"org-form-button\">\n                    Set volunteering goal\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default NewGoalForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport NewGoalForm from '../forms/NewGoalForm';\nimport { usePageView } from '../utils/googleAnalytics'\nimport './NewGoal.css';\n\nconst NewGoal = () => {\n    usePageView('/set-goal')\n    return (\n        <div className='goal-container'>\n            <Typography.Title level={2}>Set volunteering goal</Typography.Title>\n            <NewGoalForm />\n        </div>\n    );\n};\n\n\nexport default NewGoal;","import React from \"react\";\nimport NewOrg from \"../pages/NewOrg\";\nimport Settings from \"../pages/Settings\";\nimport NewEvent from \"../pages/NewEvent\";\nimport OrgPage from \"../pages/OrgPage\"\nimport VolunteerAnalytics from \"../pages/VolunteerAnalytics\"\nimport VolunteerCalendar from \"../pages/VolunteerCalendar\"\nimport NewGoal from \"../pages/NewGoal\"\n\n\nconst FeedContent = ({member, context}) => {\n    switch(context) {\n        case \"create-org\":\n            return (<NewOrg />);\n        case \"settings\":\n            return (<Settings />);\n        case \"create-event\":\n            return (<NewEvent />);\n        case \"set-goals\":\n            return (<NewGoal />);\n        case \"calendar\":\n            return (<VolunteerCalendar />); \n        case \"view-analytics\":\n            return (<VolunteerAnalytics />); \n        default:\n            const orgId = parseInt(context)\n            if (isNaN(orgId)) {\n                return (<NewOrg />);\n            } else {\n                const orgMember = member.filter(m => m.organization.id === orgId)[0]\n                return <OrgPage member={orgMember} orgId={orgId}/>\n            } \n    }\n  }\n  \n  export default FeedContent;","import React, { useState, useCallback, useEffect } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { Alert, Layout } from 'antd';\nimport { removeAlert } from '../actionCreators.js';\nimport Sidebar from \"../components/Sidebar\";\nimport FeedContent from \"../components/FeedContent\";\nimport axiosAPI from '../api/axiosApi';\n\nconst { Content, Sider } = Layout;\n\nconst Feed = () => {\n  const [context, setContext] = useState([]);\n  const [member, setMember] = useState([]);\n  const [selectedKeys, setSelectedKeys] = useState([]);\n  const setContextFromSidebar = (newContext) => {\n    setContext(newContext);\n  }\n  const alerts = useSelector(state => state.alerts, shallowEqual);\n  const dispatch = useDispatch();\n\n  const onClose = useCallback((id) => {\n    setTimeout(() => dispatch(removeAlert(id)), 500);\n  }, [dispatch]);\n\n  const alertList = alerts.map(alert => \n    <Alert\n      key={alert.id}\n      type={alert.alert_type}\n      message={alert.message}\n      banner\n      closable\n      onClose={() => onClose(alert.id)}\n    />\n  );\n\n  const getMember = useCallback(async () => {\n    try {\n         const response = await axiosAPI.get(\"user/get-member/\", {\n             params: {\n                 user_id: localStorage.getItem(\"user_id\"), \n             }\n         });\n        const member = response.data;\n        if (member.length > 0) {\n            setMember(member)\n            setSelectedKeys([member[0]?.organization?.id.toString()])\n        } else {\n            setSelectedKeys([\"create\"])\n        }\n    } catch(error) {\n        console.error(error);\n    }\n  }, [setSelectedKeys, setMember])\n\n  useEffect(() => {\n    getMember()\n  }, [getMember]);\n\n  return (\n    <Layout style={{ minHeight:\"100vh\" }}>\n      <Sider width={240} style={{ background: '#fff' }}>\n        <Sidebar selectedKeys={selectedKeys} setSelectedKeys={setSelectedKeys} member={member} setFeedContext={setContextFromSidebar}/>\n      </Sider>\n      <Layout>\n        {alertList}\n        <Layout style={{ padding: '24px', height: \"100%\"  }}>\n          <Content style={{ background: '#fff', padding: 24, margin: 0, display: \"flex\", flexDirection: \"column\" }}>\n            <FeedContent member={member} context={context}/>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Feed;","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport { LockOutlined } from '@ant-design/icons';\nimport { registerFromInvite } from '../api/authenticationApi';\nimport \"antd/dist/antd.css\";\nimport \"./AuthForm.css\"\n\n\nconst InviteAuthForm = ({invite}) => {\n    const history = useHistory();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await registerFromInvite(invite.email, values.first_name, values.last_name, values.password, invite.id)\n            history.push('/login')\n        } catch (error) {\n            console.error(error)\n        }\n    }, [history, invite]);\n\n  return (\n    <React.Fragment>\n        <Form\n            name=\"auth\"\n            className=\"auth-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >  \n            <Form.Item>\n                <Input.Group compact>\n                    <Form.Item\n                        name=\"first_name\"\n                        noStyle\n                        rules={[{ required: true, message: 'First name is required' }]}\n                    >\n                        <Input style={{ width: '50%' }} placeholder=\"First name\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"last_name\"\n                        noStyle\n                        rules={[{ required: true, message: 'Last name is required' }]}\n                    >\n                        <Input style={{ width: '50%' }} placeholder=\"Last name\" />\n                    </Form.Item>\n                </Input.Group>\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Password is a required field.' },\n                    { min: 12, message: \"Password must be at least 12 characters long.\"},\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n            </Form.Item>\n            <Form.Item\n                name=\"confirm\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Please confirm your password.' },\n                    ({ getFieldValue }) => ({\n                        validator(rule, value) {\n                            if (!value || getFieldValue('password') === value) {\n                            return Promise.resolve();\n                            }\n                            return Promise.reject('Passwords do not match.');\n                        },\n                    }),\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\">\n                    Create Account\n                </Button>\n            </Form.Item>\n        </Form>\n    </React.Fragment>\n  );\n};\n\nexport default InviteAuthForm;","import React, { useCallback } from 'react';\nimport { Layout, Typography, Button, Space, Skeleton } from 'antd';\nimport InviteAuthForm from '../forms/InviteAuthForm';\nimport { isAuthenticated } from '../api/authenticationApi';\nimport { useHistory } from 'react-router-dom';\nimport LoginLogo from '../assets/login.svg';\nimport RegisterLogo from '../assets/register.svg';\nimport axiosAPI from '../api/axiosApi';\nimport './Auth.css';\n\nconst InviteAuth = ({isRegister, invite, user}) => {\n    const title = `Join ${invite?.organization?.name ?? \"Organization\"}`;\n    const info = `${isRegister ? \"Welcome!\" : \"Hey there!\"} You've been invited to join ${invite?.organization?.name ?? \"a new organization\"} on VolunteerSense.\n    ${isRegister ? \"Get started my making an account.\" : \"Do you want to join this organization?\"}`;\n    const history = useHistory();\n    const logo = isRegister ? RegisterLogo: LoginLogo;\n\n    const acceptInvite = useCallback(async () => {\n        try {\n            const response = await axiosAPI.post(\"invite/accept/\", {\n                invite_id: invite.id,\n                user_id: user.id\n            });\n            history.push(\"/login\")\n        } catch (error) {\n            console.error(error);\n        }\n    }, [user, invite]);\n\n    const declineInvite = useCallback(async () => {\n        try {\n            const response = await axiosAPI.delete(\"invite/reject/\", {\n                params: {\n                    invite_id: invite.id,\n                }\n            });\n            history.push(\"/login\")\n        } catch (error) {\n            console.error(error);\n        }\n    }, [user, invite]);\n\n    return (\n        <Layout style={{ height: \"100vh\" }}>\n            <Layout.Content className=\"auth-content\">\n                <div className='auth-container'>\n                    <Skeleton active loading={!invite} paragraph={false}>\n                        <Typography.Title level={2}>{title}</Typography.Title>\n                    </Skeleton>\n                    <Skeleton active loading={!invite} title={false}>\n                        <Typography.Paragraph level={2}>{info}</Typography.Paragraph>\n                    </Skeleton>\n                    <img \n                        className=\"auth-logo\"\n                        src={logo} \n                        alt={title + \" logo\"}\n                    />\n                    {isRegister ? \n                        (\n                            <InviteAuthForm invite={invite}/>\n                        ) :\n                        (\n                            <Space style={{ width: '100%'}}>\n                                <Button style={{ width: 196 }} type=\"primary\" onClick={acceptInvite}>Join</Button>\n                                <Button style={{ width: 196 }} type=\"primary\" danger onClick={declineInvite}>Decline Invitation</Button>\n                            </Space>\n                        )\n                    }\n                </div>\n            </Layout.Content>\n        </Layout>\n    );\n};\n\n\nexport default InviteAuth;","import React, {useState, useEffect, useCallback} from 'react';\nimport { Result, Button, Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\nimport InviteAuth from '../pages/InviteAuth';\n\nconst AuthState = {\n    LOADING: 1,\n    NEW_USER: 2,\n    RETURNING_USER: 3,\n    FAILURE: 4\n };\n\nconst InviteNoAuth = () => {\n\n    const [loadingState, setLoadingState] = useState(AuthState.LOADING); \n    const [user, setUser] = useState(null);\n    const [invite, setInvite] = useState(null);\n\n    useEffect(() => {\n        validate();\n    }, []);\n\n    const validate = useCallback(async () => {\n        try {\n            const queryString = window.location.search;\n            const params = queryString.split(/[?&=]/);\n            var token = \"\";\n            for (var i = 0; i < params.length - 1; i++) {\n                if (params[i] === \"rt\") {\n                    token = params[i+1];\n                    break;\n                }\n            }\n            if (token !== \"\") {\n                const url = `invite/validate/${queryString}`;\n                const response = await axiosAPI.get(url);\n                if (response.status === 200) {\n                    console.log(response.data.user)\n                    if (response.data.user.email !== \"\") {\n                        setLoadingState(AuthState.RETURNING_USER);\n                        setUser(response.data.user)\n                    } else {\n                        setLoadingState(AuthState.NEW_USER);\n                    }\n                    setInvite(response.data.invite)\n                } else {\n                    setLoadingState(AuthState.FAILURE);\n                }\n            }\n            else {\n                setLoadingState(AuthState.FAILURE);\n            }\n        } catch (error) {\n            setLoadingState(AuthState.FAILURE);\n        }\n    }, [setLoadingState])\n\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n    switch(loadingState) {\n        case AuthState.FAILURE:\n            return (\n                <Result\n                    status=\"error\"\n                    title=\"Failed to join organization\"\n                    subTitle=\"Your invitation token may be expired, or otherwise invalid. Contact the group administrator to receive another invitation.\"\n                    extra={[\n                        <Button key=\"home\" href=\"/\">Return home</Button>,\n                    ]}\n                />\n            );\n        case AuthState.LOADING:\n            return (\n                <Spin indicator={antIcon} />\n            );\n        default:\n            return (\n                <InviteAuth isRegister={loadingState === AuthState.NEW_USER} invite={invite} user={user}/>\n            );\n    }\n\n}\n\nexport default InviteNoAuth;\n","import React, {useState, useEffect} from 'react';\nimport { Result, Button, Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\n\nconst AuthState = {\n    LOADING: 1,\n    SUCCESS: 2,\n    FAILURE: 3\n };\n\nconst Activate = () => {\n\n    const [loadingState, setLoadingState] = useState(AuthState.LOADING); \n\n    useEffect(() => {\n        activate();\n    }, []);\n\n    const activate = async () => {\n        try {\n            const queryString = window.location.search;\n            const url = `users/activate/${queryString}`;\n            await axiosAPI.get(url);\n            setLoadingState(AuthState.SUCCESS);\n        } catch (error) {\n            setLoadingState(AuthState.FAILURE);\n        }\n    }\n\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n    switch(loadingState) {\n        case AuthState.SUCCESS:\n            return (\n                <Result\n                    status=\"success\"\n                    title=\"Successfully activated account\"\n                    extra={[\n                        <Button type=\"primary\" key=\"login\" href=\"/login\">\n                            Login\n                        </Button>,\n                        <Button key=\"home\" href=\"/\" >Return home</Button>,\n                    ]}\n                />\n            );\n        case AuthState.FAILURE:\n            return (\n                <Result\n                    status=\"error\"\n                    title=\"Failed to activate account\"\n                    subTitle=\"Your activation token may be expired, or otherwise invalid.\"\n                    extra={[\n                        <Button type=\"primary\" key=\"resend\" href=\"/\">\n                            Resend confirmation email\n                        </Button>,\n                        <Button key=\"home\" href=\"/\">Return home</Button>,\n                    ]}\n                />\n            );\n        default:\n            return (\n                <Spin indicator={antIcon} />\n            );\n    }\n\n}\n\nexport default Activate;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button, Radio} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport { useDispatch } from 'react-redux';\nimport { addAlert } from '../actionCreators.js';\nimport \"antd/dist/antd.css\";\nimport \"./EventFeedbackForm.css\"\n\nconst {TextArea} = Input;\n\nconst EventFeedbackForm = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        setIsLoading(true);\n        try {\n            await axiosAPI.post(\"eventFeedback/create/\", {\n                id: new URLSearchParams(window.location.search).get('attendee_id'),\n                overall: values.overall,\n                satisfaction: values.satisfaction,\n                likely: values.likely,\n                expectations: values.expectations,\n                future: values.future,\n                better:values.better,\n                experience:values.experience,\n            });\n            console.log('here feedback'); \n            dispatch(addAlert('Feedback submitted', 'success'));\n        }\n        catch {\n            dispatch(addAlert('Feedback submission failed', 'error'));\n        }\n        setIsLoading(false);\n    }, [dispatch]);\n\n    const [info, setInfo] = useState([]);\n\n    useEffect(() => {\n        getInfo();\n    }, []);\n\n    const getInfo = async () => {\n        try{\n            const response = await axiosAPI.get(\"event/get-event-by-id/\", {\n                 params: {\n                     attendee_id: new URLSearchParams(window.location.search).get('attendee_id'),  \n                 }\n             });\n            setInfo(response.data[0]); \n        } catch (error) {\n            console.error(error)\n        }\n    } \n\n    const options = [\n        { label: 'Poor', value: 1},\n        { label: 'Fair', value: 2 },\n        { label: 'Average', value: 3},\n        { label: 'Good', value: 4},\n        { label: 'Excellent', value: 5},\n    ];\n\n    const s_options = [\n        { label: 'Very Dissatisfied', value: 1},\n        { label: 'Dissatisfied', value: 2},\n        { label: 'Neutral', value: 3},\n        { label: 'Satisfied', value: 4},\n        { label: 'Very Satisfied', value: 5},\n    ];\n    const l_options = [\n        { label: 'Very Unlikely', value: 1},\n        { label: 'Somewhat Unlikely', value: 2},\n        { label: 'Neutral', value: 3},\n        { label: 'Somewhat Likely', value: 4},\n        { label: 'Very Likely', value: 5},\n    ];\n    const yn_options = [\n        { label: 'Yes', value: 'Yes'},\n        { label: 'No', value: 'No'},\n    ];\n\n    const date_options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n  return (\n\n     <Form\n        name=\"event-feedback\"\n        className=\"event-feedback-form\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n    >\n\n        <p>\n            <strong>Name: </strong>{info.username__first_name} {info.username__last_name}<br/>\n            <strong>Email: </strong>{info.username__email}<br/>\n            <strong>Organization: </strong> {info.events__organizations__name}<br/>\n            <strong>Event: </strong>{info.events__name} <br/>\n            <strong>Location: </strong>{info.events__location}<br/>\n            <strong>Date: </strong>{(new Date(info.events__begindate)).toLocaleString('en-US', date_options)} - {(new Date(info.events__enddate)).toLocaleString('en-US', date_options)}<br/>\n        </p>\n        \n\n        <p>How would you rate your overall experience?</p>\n        <Form.Item\n            name=\"overall\"\n            hasFeedback\n            rules={[{ required: true, message: 'Overall experience rating required.' }]}\n        >\n        <Radio.Group\n              options={options}\n              optionType=\"button\"\n              buttonStyle=\"solid\"\n        />\n        </Form.Item>\n        <p>How satisfied did you feel after volunteering?</p>\n        <Form.Item\n            name=\"satisfaction\"\n            hasFeedback\n            rules={[{ required: true, message: 'Satisfiaction rating required.' }]}\n        >\n        <Radio.Group\n              options={s_options}\n              optionType=\"button\"\n              buttonStyle=\"solid\"\n        />\n        </Form.Item>\n        <p>How likely are you to recommend future volunteer opportunities to your friends?</p>\n        <Form.Item\n            name=\"likely\"\n            hasFeedback\n            rules={[{ required: true, message: 'Recommend rating required.' }]}\n        >\n        <Radio.Group\n              options={l_options}\n              optionType=\"button\"\n              buttonStyle=\"solid\"\n        />\n        </Form.Item>\n        <p>Did the experience meet your expectations?</p>\n        <Form.Item\n            name=\"expectations\"\n            hasFeedback\n            rules = {[{ required: true, message: 'Expectations rating required.' }]}>\n        <Radio.Group options={yn_options}/>\n        </Form.Item>\n        <p>Do you plan to volunteer with us again in the future?</p>\n        <Form.Item\n            name=\"future\"\n            hasFeedback\n            rules = {[{ required: true, message: 'Future rating required.' }]}>\n        <Radio.Group options={yn_options}/>\n        </Form.Item>\n        <p>What could we have done better?</p>\n        <Form.Item\n            name=\"better\"\n            hasFeedback\n        >\n            <TextArea row={6} style={{ width: '100%' }} placeholder=\"Response here\" />\n        </Form.Item>\n        <p>Is there anything else we should know about your volunteer experience?</p>\n        <Form.Item\n            name=\"experience\"\n            hasFeedback        >\n            <TextArea row={6} style={{ width: '100%' }} placeholder=\"Response here\" />\n        </Form.Item>\n         <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"event-feedback-form-button\" loading={isLoading}>\n                Submit feedback\n            </Button>\n        </Form.Item>\n    </Form>\n  );\n};\n\n\nexport default EventFeedbackForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport EventFeedbackForm from '../forms/EventFeedbackForm';\nimport { usePageView } from '../utils/googleAnalytics'\nimport './EventFeedback.css';\n\nconst EventFeedback = () => {\n    usePageView('/feedback-form');\n    return (\n      <div className='event-feedback-container'>\n            <Typography.Title level={2}>Event Feedback</Typography.Title>\n            <EventFeedbackForm /> \n        </div>\n    );\n};\n\n\nexport default EventFeedback;  \n\n","import React, {useEffect} from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { isAuthenticated } from './api/authenticationApi';\nimport Auth from './pages/Auth';\nimport Home from './pages/Home/Home';\nimport Feed from './pages/Feed';\nimport InviteNoAuth from './pages/InviteNoAuth';\nimport Activate from './pages/Activate';\n// import ForgotPassword from './pages/ForgotPassword';\nimport EventFeedback from './pages/EventFeedback'\nimport './App.css';\n\nfunction App() {\n\n  useEffect(() => {\n    document.title = \"VolunteerSense\"\n  }, []);\n\n  return (\n    <main>\n      <Switch>\n          <Route exact path=\"/\" \n            render={() =>\n              isAuthenticated() ? (\n                <Feed/>\n              ) : (\n                <Home/>\n              )\n            }\n          />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/activate\" component={Activate} />\n          <Route path=\"/invite\" component={InviteNoAuth} />\n          <Route path=\"/feedback\" component={EventFeedback} />\n      </Switch> \n  </main>\n  );\n}\n\n\nconst Register = () => <Auth isRegister={true}/>;\nconst Login = () => <Auth isRegister={false}/>;\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport ReactGA from 'react-ga';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\nReactGA.initialize('UA-189701909-1');\n\nReactDOM.render(\n  <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter> \n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}