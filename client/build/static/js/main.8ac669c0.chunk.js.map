{"version":3,"sources":["assets/login.svg","assets/register.svg","assets/landing.svg","assets/volunteersense.png","reducers.js","api/axiosApi.js","api/authenticationApi.js","actionCreators.js","pages/Home/Home.jsx","forms/AuthForm.jsx","pages/Auth.jsx","pages/Home/utils.js","pages/Home/Nav3.jsx","pages/Home/Banner5.jsx","pages/Home/Feature0.jsx","pages/Home/Footer2.jsx","pages/Home/data.source.js","components/Sidebar.jsx","forms/NewOrgForm.jsx","pages/NewOrg.jsx","forms/ProfileForm.jsx","pages/ProfileSettings.jsx","forms/ResetPasswordForm.jsx","pages/SecuritySettings.jsx","forms/UserNotificationsForm.jsx","pages/UserNotifications.jsx","pages/Settings.jsx","components/EventCard.jsx","pages/Event.jsx","forms/NewEventForm.jsx","pages/NewEvent.jsx","components/QAndA.jsx","pages/QAndAPage.jsx","pages/OrgEvents.jsx","pages/AboutUs.jsx","pages/MemberPage.jsx","pages/OrgFeedback.jsx","pages/EventsPerVolunteer.jsx","components/VolunteerLeaderboard.jsx","components/EventLeaderboardPlots.jsx","components/EventLeaderboard.jsx","components/VolunteerBreakdown.jsx","pages/Analytics.jsx","pages/InvitePage.jsx","components/StatusTag.jsx","pages/UserFilesTable.jsx","pages/Clearances.jsx","pages/OrgClearanceTable.jsx","pages/NewEmail.jsx","pages/Attendees.jsx","pages/OrgPage.jsx","components/VolunteerEventLeaderboard.jsx","components/NonprofitBreakdown.jsx","components/VolunteerSummary.jsx","pages/VolunteerAnalytics.jsx","pages/VolunteerCalendarCard.jsx","pages/VolunteerCalendar.jsx","components/FeedContent.jsx","pages/Feed.jsx","forms/InviteAuthForm.jsx","pages/InviteAuth.jsx","pages/InviteNoAuth.jsx","pages/Activate.jsx","forms/EventFeedbackForm.jsx","pages/EventFeedback.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","rootReducer","combineReducers","alerts","state","action","type","concat","filter","alert","id","baseURL","process","accessToken","localStorage","getItem","axiosInstance","axios","create","timeout","headers","interceptors","response","use","a","error","originalRequest","config","status","url","window","location","href","Promise","reject","data","code","refresh_token","post","refresh","setItem","access","defaults","setNewHeaders","user_id","axiosRetry","retries","retryDelay","Math","random","retryCondition","isRetryableError","register","email","firstName","lastName","password","axiosAPI","first_name","last_name","registerFromInvite","invite_id","console","log","login","reset_password","old_password","new_password","addAlert","message","alert_type","shortid","generate","removeAlert","isMobile","AuthForm","isRegister","history","useHistory","dispatch","useDispatch","onFinish","useCallback","values","push","submitButtonText","switchAuthPages","Fragment","to","name","className","initialValues","remember","Item","Group","compact","noStyle","rules","required","style","width","placeholder","hasFeedback","prefix","MailOutlined","min","LockOutlined","dependencies","getFieldValue","validator","rule","value","resolve","htmlType","Auth","title","logo","RegisterLogo","LoginLogo","useSelector","shallowEqual","onClose","setTimeout","alertList","map","key","banner","closable","height","Content","Title","level","src","alt","isImg","getChildrenToRender","item","i","tag","indexOf","children","match","React","createElement","Button","toString","Menu","SubMenu","Header3","props","phoneClick","phoneOpen","setState","undefined","this","dataSource","navChildren","subItem","itemProps","trim","popupClassName","$item","ii","childItem","child","moment","component","animation","opacity","wrapper","page","x","ease","mobileMenu","onClick","duration","onComplete","e","target","reverse","mode","defaultSelectedKeys","theme","Component","Banner5","tagProps","animType","queue","one","y","leaveReverse","childWrapper","componentProps","md","xs","image","PureComponent","titleWrapper","overPackData","OverPack","Row","block","blockProps","Footer2","links","copyright","Nav30DataSource","Banner50DataSource","LandingLogo","Feature00DataSource","playScale","Footer20DataSource","enquireScreen","b","Home","show","port","ReactGA","pageview","pathname","Nav3","Feature0","ref","d","dom","Divider","Sidebar","selectedKeys","setSelectedKeys","setFeedContext","member","onSelect","latestSelectedKey","onLogout","removeItem","useEffect","organizationsList","organization","icon","BulbOutlined","PlusSquareOutlined","UsergroupAddOutlined","CalendarOutlined","BarChartOutlined","SettingOutlined","LogoutOutlined","TextArea","Input","NewOrgForm","useState","selectedCauses","setSelectedCauses","causes","setCauses","getCauses","get","filteredCauses","useMemo","o","includes","description","website","phone","address","member_type","success","maxLength","onChange","Option","autoSize","row","NewOrg","Text","Typography","ProfileForm","user","isEditable","setIsEditable","setFirstName","setLastName","setEmail","textPlaceholder","fieldName","fieldValue","marginBottom","span","requiredMark","labelCol","labelAlign","label","transition","hidden","ProfileSettings","setUser","getUser","userId","maxWidth","active","loading","paragraph","rows","ResetPasswordForm","sendForgotPasswordEmail","paddingLeft","paddingRight","SecuritySettings","UserNotificationsForm","text","setText","phone_number","phoneNumber","setPhoneNumber","Form","useForm","form","setFieldsValue","checked","addonBefore","disabled","UserNotifications","TabPane","Tabs","Settings","defaultActiveKey","tab","Paragraph","EventCard","setRegister","isLoading","setIsLoading","viewmore","setViewmore","event_id","event","errMsg","getRegisterStatus","params","onClickViewmore","buttonText","options","year","month","day","hour","minute","begindate","Date","enddate","virtual","joinButton","attendee_count","attendee_cap","bordered","toLocaleString","instructions","color","substring","Event","events","setEvents","filterDisplay","setFilterDisplay","getEvents","textAlign","oldList","newList","toLowerCase","handleChange","display","flexWrap","justifyContent","overflowY","RangePicker","DatePicker","NewEventForm","selectedOrgs","setSelectedOrgs","orgs","setOrgs","getOrgs","filteredOrgs","organizations","date","attendeeCap","valuePropName","checkedChildren","unCheckedChildren","defaultChecked","showTime","format","NewEvent","QAndA","isAdmin","removeFaq","question","questionStr","setQuestionStr","answer","answerStr","setAnswerStr","is_public","isPublic","setIsPublic","updateQ","newQuestionStr","updateA","newAnswerStr","updatePublic","newIsPublic","onDelete","delete","marginTop","actions","DeleteOutlined","float","verticalAlign","fontWeight","marginLeft","flexGrow","editable","QAndAPage","orgId","qA","setQA","getQA","org_id","faq","addQAField","Select","OrgEvents","getEventsByOrg","class","defaultValue","virtualFilterChange","size","openFilterChange","AboutUs","org","inputVisible","setInputVisible","inputValue","setInputValue","inputRef","useRef","getCausesByOrg","handleClose","removedTag","tags","cause","handleInputConfirm","newCauses","length","c","preventDefault","onBlur","onPressEnter","PlusOutlined","MemberPage","members","setMembers","setLoading","currentUser","getMembers","forEach","deleteMember","memberId","member_id","columns","dataIndex","render","_","record","parseInt","danger","onConfirm","okText","cancelText","OrgFeedback","info","setInfo","getFeedbackByOrg","sorter","event__name","localeCompare","username__email","filters","filterMultiple","onFilter","overall","satisfaction","likely","expectations","future","expandedRowRender","event__location","event__begindate","event__enddate","better","experience","EventsPerVolunteer","getUniqueAttendees","getUniqueMembers","getVolunteersWhoGaveFeedback","getAvgEventsPerVolunteer","uniqueAttendees","setUniqueAttendees","uniqueMembers","setUniqueMembers","setUniqueEvents","uniqueVolunteersWithFeedback","setUniqueVolunteersWithFeedback","avgEventsPerVolunteer","setAvgEventsPerVolunteer","layout","margin","l","VolunteerLeaderboard","defaultSortOrder","count","total","pagination","pageSize","event_list","EventLeaderboard","labels","ratings_arr","satisfactions_arr","likely_arr","expectations_arr","future_arr","attendees","EventLeaderboardPlots","VolunteerBreakdown","ellipsis","rowExpandable","Analytics","breakdown","setBreakdown","orgCount","setOrgCount","attendeeCount","setAttendeeCount","getBreakdown","getAnalyticsByOrg","getAnalyticsByEvent","volunteers","setVolunteers","getVolunteers","InvitePage","invites","setInvites","showModal","setShowModal","modalButtonLoading","setModalButtonLoading","invitedMembers","setInvitedMembers","memberType","setMemberType","getInvites","invite","inviteMembers","emails","deleteInvite","inviteId","justify","visible","onOk","onCancel","footer","tokenSeparators","allowClear","statusMap","Complete","Rejected","Pending","None","StatusTag","UserFilesTable","fileList","messageHandler","userFileList","setUserFileList","getUserFiles","files","formattedFiles","file","uid","orgFormId","org_file","filled_form","split","slice","pop","comment","listType","origin","beforeUpload","formData","FormData","append","then","thumbnail","UploadOutlined","getUserFileForOrgFile","infoType","oFormId","ufile","userFile","Clearances","setFileList","hostname","getOrgFiles","empty_form","orgProps","fl","customRequest","onSuccess","OrgClearanceTable","setRows","result","user__email","index","acceptOrReject","buttonStyle","addComment","NewEmail","checkedList","setCheckedList","_selectedRowKeys","selectedRows","subject","body","membersList","rowSelection","Attendees","setAttendees","getAttendees","events__name","events__location","events__begindate","events__enddate","OrgPage","setOrg","activeKey","setActiveKey","eventId","VolunteerEventLeaderboard","NonprofitBreakdown","hours","VolunteerSummary","nonprofits_list","events_list","VolunteerAnalytics","summary","setSummary","getSummary","nonprofits","setNonprofits","getNonprofits","VolunteerCalendarCard","vis","setVisible","toggleVisible","events__id","events__virtual","content","events__description","events__instructions","events__attendee_cap","trigger","VolunteerCalendar","getVolunteerEvents","align","dateCellRender","listData","bdate","edate","getMonth","getDate","getListData","monthCellRender","monthData","getMonthData","FeedContent","context","isNaN","orgMember","m","Layout","Sider","Feed","setContext","setMember","getMember","minHeight","background","newContext","padding","flexDirection","InviteAuthForm","InviteAuth","acceptInvite","declineInvite","AuthState","InviteNoAuth","loadingState","setLoadingState","setInvite","validate","queryString","search","token","antIcon","LoadingOutlined","fontSize","spin","subTitle","extra","indicator","Activate","activate","EventFeedbackForm","URLSearchParams","getInfo","attendee_id","yn_options","date_options","username__first_name","username__last_name","events__organizations__name","optionType","EventFeedback","Register","Login","App","exact","path","Boolean","store","createStore","initialize","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8ac669c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.303e4a67.svg\";","module.exports = __webpack_public_path__ + \"static/media/register.2c0812b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/landing.50e5cdde.svg\";","module.exports = __webpack_public_path__ + \"static/media/volunteersense.98bf0bb3.png\";","import { combineReducers } from 'redux';\n\nconst alerts = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_ALERT':\n            return state.concat([action])\n        case 'REMOVE_ALERT':\n            return state.filter(alert => alert.id !== action.id)\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    alerts,\n});\n\nexport default rootReducer;","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\nconst baseURL = `${process.env.REACT_APP_BACKEND_HOST}/api/`;\nconst accessToken = localStorage.getItem(\"access_token\");\n\nconst axiosInstance = axios.create({\n    baseURL: baseURL,\n    timeout: 20000,\n    headers: {\n        'Authorization': \"JWT \" + accessToken,\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n    }\n});\n\naxiosInstance.interceptors.response.use(\n    response => response,\n    async error => {\n      const originalRequest = error.config;\n    \n    if (error.response && error.response.status === 401 && originalRequest.url === axiosInstance.baseURL+'token/refresh/') {\n        window.location.href = '/login/';\n        return Promise.reject(error);\n    }\n      \n    if (error.response && error.response.status === 401 && error.response.data.code === \"token_not_valid\") {\n        const refresh_token = localStorage.getItem('refresh_token');\n\n        try {\n            const response = await axiosInstance\n                .post('/token/refresh/', { refresh: refresh_token });\n            localStorage.setItem('access_token', response.data.access);\n            localStorage.setItem('refresh_token', response.data.refresh);\n\n            axiosInstance.defaults.headers['Authorization'] = \"JWT \" + response.data.access;\n            originalRequest.headers['Authorization'] = \"JWT \" + response.data.access;\n            return axiosInstance(originalRequest);\n        } catch (_) {\n            window.location.href = '/login/';\n            return Promise.reject(error);\n        }\n      }\n      return Promise.reject(error);\n  }\n);\n\nconst retryDelay = () => {\n    const mSec = 1000;\n    const randomMSec = 1000 * Math.random();\n    return mSec + randomMSec;\n};\n\naxiosRetry(axiosInstance, {\n    retries: 0,\n    retryDelay,\n    retryCondition: axiosRetry.isRetryableError,\n});\n\nexport function setNewHeaders(response) {\n    axiosInstance.defaults.headers[\"Authorization\"] = \"JWT \" + response.data.access;\n    localStorage.setItem(\"access_token\", response.data.access);\n    localStorage.setItem(\"refresh_token\", response.data.refresh);\n    localStorage.setItem(\"user_id\", response.data.user_id);\n}\n\nexport default axiosInstance;","import axiosAPI, { setNewHeaders } from \"./axiosApi\";\n\nexport async function register(email, firstName, lastName, password) {\n  const response = await axiosAPI.post(\"users/create/\", {\n    email,\n    first_name: firstName,\n    last_name: lastName,\n    password,\n  });\n  localStorage.setItem(\"user\", response.data);\n  return response;\n}\n\nexport async function registerFromInvite(email, firstName, lastName, password, invite_id) {\n  console.log(email)\n  console.log(invite_id)\n  const response = await axiosAPI.post(\"users/create-from-invite/\", {\n    email,\n    first_name: firstName,\n    last_name: lastName,\n    password,\n    invite_id\n  });\n  localStorage.setItem(\"user\", response.data);\n  return response;\n}\n\nexport async function login(email, password) {\n  const response = await axiosAPI.post(\"token/obtain/\", {\n    email,\n    password,\n  });\n  localStorage.setItem(\"email\", email);\n  setNewHeaders(response);\n  return response;\n}\n\nexport async function reset_password(old_password, new_password) {\n  const user_id = localStorage.getItem(\"user_id\");\n  const response = await axiosAPI.post(\"users/reset-password/\", {\n    user_id,\n    old_password,\n    new_password,\n  });\n  return response;\n}\n\nexport function logout() {\n  localStorage.removeItem(\"access_token\");\n  localStorage.removeItem(\"refresh_token\");\n  localStorage.removeItem(\"user_id\");\n  axiosAPI.defaults.headers['Authorization'] = null;\n}\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem(\"access_token\");\n  return !!token;\n};","import shortid from 'shortid';\n\nexport function addAlert(message, alert_type) {\n    return {\n      type: 'ADD_ALERT',\n      id: shortid.generate(),\n      message,\n      alert_type\n    }\n  }\n  \n  export function removeAlert(id) {\n    return {\n      type: 'REMOVE_ALERT',\n      id\n    }\n  }","/* eslint no-undef: 0 */\n/* eslint arrow-parens: 0 */\nimport React from 'react';\nimport ReactGA from 'react-ga';\nimport { enquireScreen } from 'enquire-js';\n\nimport Nav3 from './Nav3';\nimport Banner5 from './Banner5';\nimport Feature0 from './Feature0';\nimport Footer2 from './Footer2';\n\nimport {\n  Nav30DataSource,\n  Banner50DataSource,\n  Feature00DataSource,\n  Footer20DataSource,\n} from './data.source';\nimport './less/antMotionStyle.less';\n\nlet isMobile;\nenquireScreen((b) => {\n  isMobile = b;\n});\n\nconst { location = {} } = typeof window !== 'undefined' ? window : {};\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMobile,\n      show: !location.port, // 如果不是 dva 2.0 请删除\n    };\n  }\n\n  componentDidMount() {\n    ReactGA.pageview(window.location.pathname + \"home\");\n    enquireScreen((b) => {\n      this.setState({ isMobile: !!b });\n    });\n    // dva 2.0 样式在组件渲染之后动态加载，导致滚动组件不生效；线上不影响；\n    /* 如果不是 dva 2.0 请删除 start */\n    if (location.port) {\n      // 样式 build 时间在 200-300ms 之间;\n      setTimeout(() => {\n        this.setState({\n          show: true,\n        });\n      }, 500);\n    }\n    /* 如果不是 dva 2.0 请删除 end */\n  }\n\n  render() {\n    const children = [\n      <Nav3\n        id=\"Nav3_0\"\n        key=\"Nav3_0\"\n        dataSource={Nav30DataSource}\n        isMobile={this.state.isMobile}\n      />,\n      <Banner5\n        id=\"Banner5_0\"\n        key=\"Banner5_0\"\n        dataSource={Banner50DataSource}\n        isMobile={this.state.isMobile}\n      />,\n      <Feature0\n        id=\"Feature0_0\"\n        key=\"Feature0_0\"\n        dataSource={Feature00DataSource}\n        isMobile={this.state.isMobile}\n      />,\n      <Footer2\n        id=\"Footer2_0\"\n        key=\"Footer2_0\"\n        dataSource={Footer20DataSource}\n        isMobile={this.state.isMobile}\n      />,\n    ];\n    return (\n      <div\n        className=\"templates-wrapper\"\n        ref={(d) => {\n          this.dom = d;\n        }}\n      >\n        {/* 如果不是 dva 2.0 替换成 {children} start */}\n        {this.state.show && children}\n        {/* 如果不是 dva 2.0 替换成 {children} end */}\n      </div>\n    );\n  }\n}\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button, message } from 'antd';\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\nimport { register, login } from '../api/authenticationApi';\nimport { addAlert } from '../actionCreators.js';\nimport \"antd/dist/antd.css\";\nimport \"./AuthForm.css\"\n\n\nconst AuthForm = ({isRegister}) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            if (isRegister) {\n                await register(values.email, values.first_name, values.last_name, values.password)\n                dispatch(addAlert('Account created! Check your email to confirm your account.', 'success'));\n            } else {\n                await login(values.email, values.password);\n                history.push(\"/\");\n            }\n        } catch (error) {\n            if (isRegister) {\n                dispatch(addAlert('Account could not be created. Have you already created an account with this email?', 'error'));\n            } else {\n                message.error('Login failed. Email or password is incorrect.');\n            }\n        }\n    }, [isRegister, history]);\n\n    const submitButtonText = isRegister ? \"Create account\" : \"Log in\";\n    const switchAuthPages = isRegister ? (\n        <React.Fragment>\n            Already have an account? <Link to=\"/login\">Log in</Link>\n        </React.Fragment>\n    ) : (\n        <React.Fragment>\n            New user? <Link to=\"/register\">Create account</Link>\n        </React.Fragment> \n    );\n\n  return (\n    <React.Fragment>\n        <Form\n            name=\"auth\"\n            className=\"auth-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >   {isRegister &&\n                <Form.Item>\n                    <Input.Group compact>\n                        <Form.Item\n                            name=\"first_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'First name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"First name\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"last_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'Last name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"Last name\" />\n                        </Form.Item>\n                    </Input.Group>\n                </Form.Item>\n            }\n            <Form.Item\n                name=\"email\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Email is a required field.' },\n                    { type: 'email', message: 'Not a valid email.' }\n                ]}\n            >\n                <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                hasFeedback={isRegister}\n                rules={[\n                    { required: true, message: 'Password is a required field.' },\n                    ...isRegister ? [{ min: 12, message: \"Password must be at least 12 characters long.\"}] : [],\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n            </Form.Item>\n            {isRegister &&\n                <Form.Item\n                    name=\"confirm\"\n                    dependencies={['password']}\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Please confirm your password.' },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                                }\n                                return Promise.reject('Passwords do not match.');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                    />\n                </Form.Item>\n            }\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\">\n                    {submitButtonText}\n                </Button>\n                {switchAuthPages}\n                {!isRegister && <Link className=\"auth-form-forgot\" to=\"/register\">Forgot password?</Link>}\n            </Form.Item>\n        </Form>\n    </React.Fragment>\n  );\n};\n\nexport default AuthForm;","import React, { useEffect, useCallback } from 'react';\nimport { Layout, Typography, Alert } from 'antd';\nimport AuthForm from '../forms/AuthForm';\nimport LoginLogo from '../assets/login.svg';\nimport RegisterLogo from '../assets/register.svg';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { removeAlert } from '../actionCreators.js';\nimport { logPageView } from '../utils/googleAnalytics'\nimport './Auth.css';\n\nconst Auth = ({isRegister}) => {\n  const title = isRegister ? \"Create account\" : \"Log in\";\n  const logo = isRegister ? RegisterLogo: LoginLogo;\n  const alerts = useSelector(state => state.alerts, shallowEqual);\n  const dispatch = useDispatch();\n\n  const onClose = useCallback((id) => {\n    setTimeout(() => dispatch(removeAlert(id)), 500);\n  }, [dispatch]);\n\n  const alertList = alerts.map(alert => \n    <Alert\n      key={alert.id}\n      type={alert.alert_type}\n      message={alert.message}\n      banner\n      closable\n      onClose={() => onClose(alert.id)}\n    />\n  );\n\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      {alertList}\n        <Layout.Content className=\"auth-content\">\n            <div className='auth-container'>\n                <Typography.Title level={2}>{title}</Typography.Title>\n                <img \n                    className=\"auth-logo\"\n                    src={logo} \n                    alt={title + \" logo\"}\n                />\n                <AuthForm isRegister={isRegister}/>\n            </div>\n        </Layout.Content>\n    </Layout>\n  );\n};\n\n\nexport default Auth;","\nimport React from 'react';\nimport { Button } from 'antd';\n\nexport const isImg = /^http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w-./?%&=]*)?/;\nexport const getChildrenToRender = (item, i) => {\n  let tag = item.name.indexOf('title') === 0 ? 'h1' : 'div';\n  tag = item.href ? 'a' : tag;\n  let children = typeof item.children === 'string' && item.children.match(isImg)\n    ? React.createElement('img', { src: item.children, alt: 'img' })\n    : item.children;\n  if (item.name.indexOf('button') === 0 && typeof item.children === 'object') {\n    children = React.createElement(Button, {\n      ...item.children\n    });\n  }\n  return React.createElement(tag, { key: i.toString(), ...item }, children);\n};\n","import React from 'react';\nimport TweenOne from 'rc-tween-one';\nimport { Menu } from 'antd';\nimport { getChildrenToRender } from './utils';\n\nconst { Item, SubMenu } = Menu;\n\nclass Header3 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phoneOpen: undefined,\n    };\n  }\n\n  phoneClick = () => {\n    const phoneOpen = !this.state.phoneOpen;\n    this.setState({\n      phoneOpen,\n    });\n  };\n\n  render() {\n    const { dataSource, isMobile, ...props } = this.props;\n    const { phoneOpen } = this.state;\n    const navData = dataSource.Menu.children;\n    const navChildren = navData.map((item) => {\n      const { children: a, subItem, ...itemProps } = item;\n      if (subItem) {\n        return (\n          <SubMenu\n            key={item.name}\n            {...itemProps}\n            title={\n              <div\n                {...a}\n                className={`header3-item-block ${a.className}`.trim()}\n              >\n                {a.children.map(getChildrenToRender)}\n              </div>\n            }\n            popupClassName=\"header3-item-child\"\n          >\n            {subItem.map(($item, ii) => {\n              const { children: childItem } = $item;\n              const child = childItem.href ? (\n                <a {...childItem}>\n                  {childItem.children.map(getChildrenToRender)}\n                </a>\n              ) : (\n                <div {...childItem}>\n                  {childItem.children.map(getChildrenToRender)}\n                </div>\n              );\n              return (\n                <Item key={$item.name || ii.toString()} {...$item}>\n                  {child}\n                </Item>\n              );\n            })}\n          </SubMenu>\n        );\n      }\n      return (\n        <Item key={item.name} {...itemProps}>\n          <a {...a} className={`header3-item-block ${a.className}`.trim()}>\n            {a.children.map(getChildrenToRender)}\n          </a>\n        </Item>\n      );\n    });\n    const moment = phoneOpen === undefined ? 300 : null;\n    return (\n      <TweenOne\n        component=\"header\"\n        animation={{ opacity: 0, type: 'from' }}\n        {...dataSource.wrapper}\n        {...props}\n      >\n        <div\n          {...dataSource.page}\n          className={`${dataSource.page.className}${phoneOpen ? ' open' : ''}`}\n        >\n          <TweenOne\n            animation={{ x: -30, type: 'from', ease: 'easeOutQuad' }}\n            {...dataSource.logo}\n          >\n            <img width=\"100%\" src={dataSource.logo.children} alt=\"img\" />\n          </TweenOne>\n          {isMobile && (\n            <div\n              {...dataSource.mobileMenu}\n              onClick={() => {\n                this.phoneClick();\n              }}\n            >\n              <em />\n              <em />\n              <em />\n            </div>\n          )}\n          <TweenOne\n            {...dataSource.Menu}\n            animation={\n              isMobile\n                ? {\n                    x: 0,\n                    height: 0,\n                    duration: 300,\n                    onComplete: (e) => {\n                      if (this.state.phoneOpen) {\n                        e.target.style.height = 'auto';\n                      }\n                    },\n                    ease: 'easeInOutQuad',\n                  }\n                : null\n            }\n            moment={moment}\n            reverse={!!phoneOpen}\n          >\n            <Menu\n              mode={isMobile ? 'inline' : 'horizontal'}\n              defaultSelectedKeys={['sub0']}\n              theme=\"light\"\n            >\n              {navChildren}\n            </Menu>\n          </TweenOne>\n        </div>\n      </TweenOne>\n    );\n  }\n}\n\nexport default Header3;\n","import React from 'react';\nimport QueueAnim from 'rc-queue-anim';\nimport TweenOne from 'rc-tween-one';\nimport { getChildrenToRender } from './utils';\n\nclass Banner5 extends React.PureComponent {\n  render() {\n    const { ...tagProps } = this.props;\n    const { dataSource } = tagProps;\n    delete tagProps.dataSource;\n    delete tagProps.isMobile;\n    const animType = {\n      queue: 'bottom',\n      one: {\n        y: '+=30',\n        opacity: 0,\n        type: 'from',\n        ease: 'easeOutQuad',\n      },\n    };\n    return (\n      <div {...tagProps} {...dataSource.wrapper}>\n        <div {...dataSource.page}>\n          <QueueAnim\n            key=\"text\"\n            type={animType.queue}\n            leaveReverse\n            ease={['easeOutQuad', 'easeInQuad']}\n            {...dataSource.childWrapper}\n            componentProps={{\n              md: dataSource.childWrapper.md,\n              xs: dataSource.childWrapper.xs,\n            }}\n          >\n            {dataSource.childWrapper.children.map(getChildrenToRender)}\n          </QueueAnim>\n          <TweenOne animation={animType.one} key=\"title\" {...dataSource.image}>\n            <img src={dataSource.image.children} width=\"100%\" alt=\"img\" />\n          </TweenOne>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Banner5;\n","import React from 'react';\nimport QueueAnim from 'rc-queue-anim';\nimport { Row, Col } from 'antd';\nimport OverPack from 'rc-scroll-anim/lib/ScrollOverPack';\nimport { getChildrenToRender } from './utils';\n\nclass Content extends React.PureComponent {\n  render() {\n    const { dataSource, isMobile, ...props } = this.props;\n    const {\n      wrapper,\n      titleWrapper,\n      page,\n      OverPack: overPackData,\n      childWrapper,\n    } = dataSource;\n    return (\n      <div {...props} {...wrapper}>\n        <div {...page}>\n          <div {...titleWrapper}>\n            {titleWrapper.children.map(getChildrenToRender)}\n          </div>\n          <OverPack {...overPackData}>\n            <QueueAnim\n              type=\"bottom\"\n              key=\"block\"\n              leaveReverse\n              component={Row}\n              componentProps={childWrapper}\n            >\n              {childWrapper.children.map((block, i) => {\n                const { children: item, ...blockProps } = block;\n                return (\n                  <Col key={i.toString()} {...blockProps}>\n                    <div {...item}>\n                      {item.children.map(getChildrenToRender)}\n                    </div>\n                  </Col>\n                );\n              })}\n            </QueueAnim>\n          </OverPack>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React from 'react';\nimport TweenOne from 'rc-tween-one';\nimport OverPack from 'rc-scroll-anim/lib/ScrollOverPack';\nimport { isImg } from './utils';\n\nclass Footer2 extends React.PureComponent {\n  render() {\n    const { ...props } = this.props;\n    const { dataSource } = props;\n    delete props.dataSource;\n    delete props.isMobile;\n    return (\n      <div {...props} {...dataSource.wrapper}>\n        <OverPack {...dataSource.OverPack}>\n          <TweenOne {...dataSource.links}>\n            {dataSource.links.children.map((item, i) => {\n              return (\n                <a key={i.toString()} {...item}>\n                  <img src={item.children} height=\"100%\" alt=\"img\" />\n                </a>\n              );\n            })}\n          </TweenOne>\n          <TweenOne\n            animation={{ x: '+=30', opacity: 0, type: 'from' }}\n            key=\"copyright\"\n            {...dataSource.copyright}\n          >\n            {dataSource.copyright.children.map((item, i) =>\n              React.createElement(\n                item.name.indexOf('title') === 0 ? 'h1' : 'div',\n                { key: i.toString(), ...item },\n                typeof item.children === 'string' && item.children.match(isImg)\n                  ? React.createElement('img', {\n                      src: item.children,\n                      alt: 'img',\n                    })\n                  : item.children\n              )\n            )}\n          </TweenOne>\n        </OverPack>\n      </div>\n    );\n  }\n}\n\nexport default Footer2;\n","import React from 'react';\nimport LandingLogo from '../../assets/landing.svg';\nimport logo from '../../assets/volunteersense.png';\nexport const Nav30DataSource = {\n  wrapper: { className: 'header3 home-page-wrapper jzih1dpqqrg-editor_css' },\n  page: { className: 'home-page' },\n  logo: {\n    className: 'header3-logo jzjgnya1gmn-editor_css',\n    children: logo,\n  },\n  Menu: {\n    className: 'header3-menu',\n    children: [\n      {\n        name: 'item1',\n        className: 'header3-item',\n        children: {\n          href: '/login',\n          children: [{ children: <p>Log in</p>, name: 'text' }],\n        },\n      },\n      {\n        name: 'item2',\n        className: 'header3-item',\n        children: {\n          href: '/register',\n          children: [{ children: <p>Register</p>, name: 'text' }],\n        },\n      },\n    ],\n  },\n  mobileMenu: { className: 'header3-mobile-menu' },\n};\nexport const Banner50DataSource = {\n  wrapper: { className: 'home-page-wrapper banner5' },\n  page: { className: 'home-page banner5-page' },\n  childWrapper: {\n    className: 'banner5-title-wrapper',\n    children: [\n      { name: 'title', children: 'Connect with your volunteers', className: 'banner5-title' },\n      {\n        name: 'explain',\n        className: 'banner5-explain',\n        children: 'Build and engage your community with our volunteer management system.',\n      },\n      {\n        name: 'button',\n        className: 'banner5-button-wrapper',\n        children: {\n          href: '#Feature0_0',\n          className: 'banner5-button',\n          type: 'primary',\n          children: 'Learn more',\n        },\n      },\n    ],\n  },\n  image: {\n    className: 'banner5-image',\n    children: LandingLogo,\n  },\n};\nexport const Feature00DataSource = {\n  wrapper: { className: 'home-page-wrapper content0-wrapper' },\n  page: { className: 'home-page content0' },\n  OverPack: { playScale: 0.3, className: '' },\n  titleWrapper: {\n    className: 'title-wrapper',\n    children: [\n      { name: 'title', children: 'About VolunteerSense' },\n      { name: 'explain', children: 'Our secret recipe for wrangling your volunteers.' }\n    ],\n  },\n  childWrapper: {\n    className: 'content0-block-wrapper',\n    children: [\n      {\n        name: 'block0',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children:\n                'https://zos.alipayobjects.com/rmsportal/WBnVOjtIlGWbzyQivuyq.png',\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Recruit',\n            },\n            { name: 'content', children: 'Easily onboard new volunteers and track their progress in signing required clearances.' },\n          ],\n        },\n      },\n      {\n        name: 'block1',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children:\n                'https://zos.alipayobjects.com/rmsportal/YPMsLQuCEXtuEkmXTTdk.png',\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Engage',\n            },\n            {\n              name: 'content',\n              children: 'Alert your community about new opportunities to get involved.',\n            },\n          ],\n        },\n      },\n      {\n        name: 'block2',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children:\n                'https://zos.alipayobjects.com/rmsportal/EkXWVvAaFJKCzhMmQYiX.png',\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Retain',\n            },\n            {\n              name: 'content',\n              children: 'Remind your volunteers about upcoming events and solicit their feedback.',\n            },\n          ],\n        },\n      },\n    ],\n  },\n};\nexport const Footer20DataSource = {\n  wrapper: { className: 'home-page-wrapper footer2-wrapper' },\n  OverPack: { className: 'home-page footer2', playScale: 0.05 },\n  copyright: {\n    className: 'copyright',\n    children: [\n      {\n        name: 'copyright',\n        children: 'Copyright © VolunteerSense',\n        className: 'copyright-text',\n      },\n    ],\n  },\n  links: {\n    className: 'links',\n    children: [],\n  },\n};\n","import React, { useCallback, useEffect } from 'react';\nimport { Menu } from 'antd';\nimport { BulbOutlined, LogoutOutlined, PlusSquareOutlined, SearchOutlined, SettingOutlined, UsergroupAddOutlined, BarChartOutlined, CalendarOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nimport axiosAPI from '../api/axiosApi';\nimport { logout } from '../api/authenticationApi';\nimport './Sidebar.css';\n\nconst { Divider, Item, SubMenu } = Menu;\n\nconst Sidebar = ({selectedKeys, setSelectedKeys, setFeedContext, member}) =>  {\n    const history = useHistory();\n    const onSelect = (latestSelectedKey) => {\n        setSelectedKeys([latestSelectedKey.key]);\n    }\n\n    const onLogout = useCallback(async () => {\n        await axiosAPI.post(\"token/blacklist/\", {\n            refresh_token: localStorage.getItem(\"refresh_token\")\n        });\n        logout();\n        history.push(\"/login\");\n    }, [history]);\n\n    useEffect(() => {\n        setFeedContext(selectedKeys[0] ?? \"\");\n    }, [selectedKeys, setFeedContext]);\n\n\n    const organizationsList = (\n\t\tmember.map(member => \n\t\t\t<Item key={member?.organization?.id}>\n                {member?.organization?.name}\n            </Item>\n\t\t)\n    );\n\n    return (\n        <div className=\"menu-container\">\n            <Menu\n                mode=\"inline\"\n                theme=\"dark\"\n                selectedKeys={selectedKeys}\n                onSelect={onSelect}\n            >\n                <SubMenu title=\"Take action\" icon={<BulbOutlined />}>\n                    <Item className=\"action-submenu-item\" key=\"create-event\" icon={<PlusSquareOutlined />}>\n                        Create an event\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"create-org\" icon={<UsergroupAddOutlined />}>\n                        Create an organization\n                    </Item>\n                    {/* <Item className=\"action-submenu-item\" key=\"find\" icon={<SearchOutlined />}>\n                        Find service opportunities\n                    </Item> */}\n                    <Item className=\"action-submenu-item\" key=\"calendar\" icon={<CalendarOutlined />}>\n                        View my events\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"view-analytics\" icon={<BarChartOutlined />}>\n                        View my analytics\n                    </Item>\n                </SubMenu>\n                <Divider/>\n            </Menu>\n            <Menu\n                mode=\"inline\"\n                theme=\"dark\"\n                selectedKeys={selectedKeys}\n                onSelect={onSelect}\n            >\n                {organizationsList}\n            </Menu>\n            <Menu\n                mode=\"inline\"\n                theme=\"dark\"\n                selectedKeys={selectedKeys}\n                onSelect={onSelect}\n            >\n                <Divider/>\n                <Item key=\"settings\" icon={<SettingOutlined />}>\n                    Manage user settings\n                </Item>\n                <Item key=\"logout\" icon={<LogoutOutlined />} onClick={onLogout}>\n                    Logout\n                </Item>\n            </Menu>\n        </div>\n    );\n}\n\nexport default Sidebar;\n","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { Form, Input, Button, Select, message } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport \"./NewOrgForm.css\";\n\nconst { TextArea } = Input;\n\nconst NewOrgForm = () => {\n    const [selectedCauses, setSelectedCauses] = useState([]);\n    const [causes, setCauses] = useState([]);\n\n    const getCauses = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"causes/get/\");\n            setCauses(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setCauses]);\n\n    useEffect(() => {\n        getCauses();\n    }, [getCauses]);\n\n    const filteredCauses = useMemo(() => {\n        return causes.filter(o => !selectedCauses.includes(o));\n    }, [selectedCauses, causes]);\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await axiosAPI.post(\"organization/create/\", {\n                name: values.name,\n                causes: values.causes,\n                description: values.description,\n                website: values.website,\n                phone: values.phone,\n                address: values.address,\n                email: values.email\n            });\n            await axiosAPI.post(\"member/create/\", {\n                user_id: localStorage.getItem(\"user_id\"),\n                organization: values.name,\n                member_type: 1,\n                status: 0,\n            });\n            message.success('Organization created');\n        }\n        catch {\n            message.error('Organization creation failed');\n        }\n    }, []);\n\n    return (\n        <Form\n            name=\"org\"\n            className=\"org-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >   \n            <Form.Item\n                name=\"name\"\n                hasFeedback\n                rules={[{ required: true, message: 'Organization name is required.' }]}\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Organization name\" maxLength={128} />\n            </Form.Item>\n            <Form.Item\n                name=\"causes\"\n                hasFeedback\n            >\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Charitable cause(s)\"\n                    value={selectedCauses}\n                    onChange={setSelectedCauses}\n                >\n                    \n                {filteredCauses.map(item => (\n                    <Select.Option key={item.id} value={item.id}>\n                        {item.name}\n                    </Select.Option>\n                ))}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"website\"\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Website\" />\n            </Form.Item>\n            <Form.Item\n                name=\"phone\"\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Telephone\" />\n            </Form.Item>\n            <Form.Item\n                name=\"email\"\n                hasFeedback\n                rules={[\n                    { type: 'email', message: 'Not a valid email.' }\n                ]}\n            >\n                <Input placeholder=\"Email\" />\n            </Form.Item>\n            <Form.Item\n                name=\"address\"\n            >\n                <TextArea style={{ width: '100%' }} placeholder=\"Street Address\" autoSize />\n            </Form.Item>\n            <Form.Item\n                name=\"description\"\n                hasFeedback\n                rules={[{ required: true, message: 'Organization description is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Describe your organization...\" />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"org-form-button\">\n                    Create\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default NewOrgForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport NewOrgForm from '../forms/NewOrgForm';\nimport './NewOrg.css';\n\nconst NewOrg = () => {\n    return (\n        <div className='org-container'>\n            <Typography.Title level={2}>Create organization</Typography.Title>\n            <NewOrgForm />\n        </div>\n    );\n};\n\n\nexport default NewOrg;","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button, Typography, Row, Col } from 'antd';\nimport { addAlert } from '../actionCreators.js';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport { useEffect } from 'react';\n\nconst { Text } = Typography\n\nconst ProfileForm = ({user}) => {\n    const dispatch = useDispatch();\n    const [isEditable, setIsEditable] = useState(false);\n    const [firstName, setFirstName] = useState(user?.first_name);\n    const [lastName, setLastName] = useState(user?.last_name);\n    const [email, setEmail] = useState(user?.email);\n\n    useEffect(() => {\n        setFirstName(user?.first_name);\n        setLastName(user?.last_name);\n        setEmail(user?.email);\n     }, [user])\n\n\n    const onFinish = useCallback(async (values) => {\n        if (isEditable) {\n            try {\n                await axiosAPI.post(\"users/update/\", {\n                    user_id: localStorage.getItem('user_id'),\n                    first_name: firstName,\n                    last_name: lastName,\n                    email,\n                });\n                setIsEditable(false);\n                dispatch(addAlert('Profile update success', 'success'));\n            } \n            catch {\n                dispatch(addAlert('Profile update failed', 'error'));\n            }\n        }\n        else {\n            setIsEditable(true);\n        }\n    }, [isEditable, setIsEditable, dispatch, email, firstName, lastName]);\n\n    const layout = {\n        labelCol: { span: 4 },\n        labelAlign: 'left'\n    }\n    \n    const textPlaceholder = (fieldName, fieldValue) => (\n        <Row style={{ marginBottom: '8px'}}>\n            <Col span={4}>\n                <Text>{fieldName}:</Text>\n            </Col>\n            <Col span={20}>\n                <Text>{fieldValue}</Text>\n            </Col>\n        </Row>\n    )\n\n    return (\n        <React.Fragment>\n            <Form\n                name=\"update-profile\"\n                onFinish={onFinish}\n                requiredMark={false}\n                initialValues={{\n                    first_name: firstName,\n                    last_name: lastName,\n                    email: email,\n                  }}\n                {...layout}\n            > \n                {isEditable ? (\n                <Form.Item \n                    label=\"Name\"\n                >  \n                    <Input.Group compact>\n                        <Form.Item\n                            name=\"first_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'First name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"First name\" value={firstName} onChange={(e) => {setFirstName(e.target.value)}}/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"last_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'Last name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"Last name\" value={lastName} onChange={(e) => {setLastName(e.target.value)}}/>\n                        </Form.Item>\n                    </Input.Group>\n                </Form.Item>) : (\n                    textPlaceholder(\"Name\", `${firstName} ${lastName}`)\n                )}\n                {isEditable ? (\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Email is a required field.' },\n                        { type: 'email', message: 'Not a valid email.' }\n                    ]}\n                >\n                    <Input placeholder=\"Email\" value={email} onChange={(e) => {setEmail(e.target.value)}} />\n                </Form.Item>) : (\n                    textPlaceholder(\"Email\", email)\n                )}\n                {/* {isEditable ? (\n                <Form.Item\n                    label=\"Birthdate\"\n                    name=\"birthdate\"\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Birthdate is a required field.' },\n                    ]}\n                >\n                    <DatePicker \n                        onChange={() => {}} \n                        style={{ width: '100%'}}\n                    />\n                </Form.Item>) : (\n                    textPlaceholder(\"Birthdate\", \"04/14/1999\")\n                )} */}\n                <Form.Item>\n                    <Button.Group style={{ width: '100%' }}>\n                        <Button style={{ width: isEditable ? '50%' : '100%', transition: 'none' }} type=\"primary\" htmlType=\"submit\">\n                            {isEditable ? \"Update\" : \"Edit\"}\n                        </Button>\n                        <Button style={{ width: '50%', transition: 'none' }} type=\"secondary\" onClick={() => {setIsEditable(false)}} hidden={!isEditable}>\n                            Cancel\n                        </Button>\n                    </Button.Group>\n                </Form.Item>\n            </Form>\n        </React.Fragment>\n    );\n};\n\nexport default ProfileForm;","import React, {useState, useEffect} from 'react';\nimport ProfileForm from '../forms/ProfileForm';\nimport { Divider, Typography, Skeleton } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nfunction ProfileSettings() {\n\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        getUser();\n     }, [])\n\n    const getUser = async () => {\n        const userId = localStorage.getItem(\"user_id\");\n        const url = `users/get/?user_id=${userId}`;\n        const response = await axiosAPI.get(url);\n        setUser(response.data);\n    }\n\n    return (\n        <React.Fragment>\n            <div style={{ maxWidth: '600px' }}>\n                <Typography.Title level={4}>Update Profile</Typography.Title>\n                <Skeleton active loading={!user} paragraph={{ rows: 3, width: 'auto' }} title={false}>\n                    <ProfileForm user={user}/>\n                </Skeleton>\n            </div>\n            <Divider/>\n        </React.Fragment>\n    );\n}\n\nexport default ProfileSettings;","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { LockOutlined } from '@ant-design/icons';\nimport { reset_password } from '../api/authenticationApi';\nimport { addAlert } from '../actionCreators.js';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport \"./AuthForm.css\"\n\nconst ResetPasswordForm = () => {\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await reset_password(values.old_password, values.new_password);\n            dispatch(addAlert('Password reset success', 'success'));\n        } catch (error) {\n            dispatch(addAlert('Old password incorrect', 'error'));\n        }\n    }, [dispatch]);\n\n    const sendForgotPasswordEmail = useCallback(async () => {\n        try {\n            const url = \"users/forgot-password/?user_id=\" + localStorage.getItem(\"user_id\")\n            await axiosAPI.get(url);\n            dispatch(addAlert('Password reset link sent to email', 'success'));\n        } catch (error) {\n            dispatch(addAlert('Password reset email failed to send', 'error'));\n        }\n    }, [dispatch]);\n\n  return (\n    <React.Fragment>\n        <Form\n            name=\"reset-password\"\n            className=\"reset-password-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        > \n            <Form.Item\n                name=\"old_password\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Old password is a required field.' },\n                ]}\n                \n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Old password\"\n                />\n            </Form.Item>\n            <Form.Item\n                name=\"new_password\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'New password is a required field.' },\n                    { min: 12, message: \"Password must be at least 12 characters long.\"}\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"New password\"\n                />\n            </Form.Item>\n            <Form.Item\n                    name=\"confirm\"\n                    dependencies={['new_password']}\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Please confirm your new password.' },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('new_password') === value) {\n                                return Promise.resolve();\n                                }\n                                return Promise.reject('Passwords do not match.');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                    />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\">\n                    Submit\n                </Button>\n                Forgot password? \n                <Button type=\"link\" style={{ paddingLeft: 4, paddingRight: 4}} onClick={sendForgotPasswordEmail}>\n                    Send a password reset email\n                </Button>\n            </Form.Item>\n        </Form>\n    </React.Fragment>\n  );\n};\n\nexport default ResetPasswordForm;","import React from 'react';\nimport { Divider, Typography } from 'antd';\nimport ResetPasswordForm from '../forms/ResetPasswordForm';\n\nfunction SecuritySettings() {\n    return (\n        <React.Fragment>\n            <div style={{ maxWidth: '600px' }}>\n                <Typography.Title level={4}>Reset password</Typography.Title>\n                <ResetPasswordForm />\n            </div>\n            <Divider/>\n        </React.Fragment>\n    );\n}\n\nexport default SecuritySettings;","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button, Typography, Row, Col, Checkbox } from 'antd';\nimport { addAlert } from '../actionCreators.js';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport { useEffect } from 'react';\n\nconst { Text } = Typography\n\nconst UserNotificationsForm = ({user}) => {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState(user?.email);\n    const [text, setText] = useState(user?.text);\n    const [phoneNumber, setPhoneNumber] = useState(user?.phone_number);\n\n    useEffect(() => {\n        setEmail(user?.email);\n        setText(user?.text);\n        setPhoneNumber(user?.phone_number);\n        console.log('phoneNumber', phoneNumber)\n     }, [phoneNumber, user])\n\n\n    const onFinish = useCallback(async (values) => {\n            try {\n                await axiosAPI.post(\"user/submit-notification-settings/\", {\n                    user_id: localStorage.getItem('user_id'),\n                    email,\n                    text,\n                    phone_number: values.phone_number,\n                });\n                dispatch(addAlert('Settings update success', 'success'));\n            } \n            catch {\n                dispatch(addAlert('Settings update failed', 'error'));\n            }\n    }, [email, text, dispatch]);\n\n    const layout = {\n        labelCol: { span: 4 },\n        labelAlign: 'left'\n    }\n\n    const [form] = Form.useForm()\n\n    useEffect(() => {\n        form.setFieldsValue({\n            email: email,\n            text: text,\n            phone_number: phoneNumber,\n          })\n       }, [form, email, text, phoneNumber])\n\n    return (\n        <React.Fragment>\n            <Form\n                form={form}\n                name=\"update-profile\"\n                onFinish={onFinish}\n                initialValues={{\n                    email: email,\n                    text: text,\n                    phone_number: phoneNumber,\n                  }}\n                {...layout}\n            > \n                <Form.Item\n                    name=\"email\"\n                >\n                    <Checkbox checked={email} onChange={(e) => {setEmail(e.target.checked)}}>Send email notifications</Checkbox>\n                </Form.Item>\n                <Form.Item\n                    name=\"text\"\n                >\n                    <Checkbox checked={text} onChange={(e) => {setText(e.target.checked)}}>Send text notifications</Checkbox>\n                </Form.Item>\n                <Form.Item\n                    name=\"phone_number\"\n                    hasFeedback = {text}\n                    rules={[\n                        { required: text, message: 'Phone is a required field.' },\n                    ]}\n                >\n                    <Input addonBefore=\"Phone Number\" placeholder=\"Phone Number\" disabled={!text}/>\n                </Form.Item>\n                <Form.Item>\n                        <Button style={{ width: '100%'}} type=\"primary\" htmlType=\"submit\">\n                            Update\n                        </Button>\n                </Form.Item>\n            </Form>\n        </React.Fragment>\n    );\n};\n\nexport default UserNotificationsForm;","import React, {useEffect, useState} from 'react';\nimport UserNotificationsForm from '../forms/UserNotificationsForm';\nimport { Divider, Typography, Skeleton } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nfunction UserNotifications() {\n\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        getUser();\n     }, [])\n\n    const getUser = async () => {\n        const userId = localStorage.getItem(\"user_id\");\n        const url = `user/get-notification-settings/?user_id=${userId}`;\n        const response = await axiosAPI.get(url);\n        setUser(response.data);\n    }\n\n\n    return (\n        <React.Fragment>\n            <div style={{ maxWidth: '600px' }}>\n                <Typography.Title level={4}>Update Notifications</Typography.Title>\n                <Skeleton active loading={false} paragraph={{ rows: 3, width: 'auto' }} title={false}>\n                    <UserNotificationsForm user={user}/>\n                </Skeleton>\n            </div>\n            <Divider/>\n        </React.Fragment>\n    );\n}\n\nexport default UserNotifications;","import React from \"react\";\nimport ProfileSettings from \"../pages/ProfileSettings\";\nimport SecuritySettings from \"../pages/SecuritySettings\";\nimport UserNotifications from \"../pages/UserNotifications\";\nimport { Tabs, Typography } from 'antd';\n\nconst { TabPane } = Tabs;\n\nconst Settings = () => (\n    <React.Fragment>\n        <Typography.Title level={3}>Manage user settings</Typography.Title>\n        <Tabs defaultActiveKey=\"1\">\n            <TabPane tab=\"Profile\" key=\"1\">\n                <ProfileSettings />\n            </TabPane>\n            <TabPane tab=\"Security\" key=\"2\">\n                <SecuritySettings />\n            </TabPane>\n            <TabPane tab=\"Notifications\" key=\"3\">\n                <UserNotifications />\n            </TabPane>\n        </Tabs>\n    </React.Fragment>\n);\n\nexport default Settings;","import React, {useCallback, useEffect, useState} from 'react';\nimport {Card, Button, Typography, message} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport './EventCard.css';\n\nconst { Paragraph } = Typography;\n\nfunction EventCard ({item}){\n\tconst [register, setRegister] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [viewmore, setViewmore] = useState(false);\n\t\n\tconst onClick = useCallback(async (event_id, register) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tif (register) {\n\t\t\t\tawait axiosAPI.post(\"attendees/delete/\", {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\tevent: event_id,\n\t\t\t\t});\n\t\t\t\tmessage.success(\"Unjoined event\")\n\t\t\t} else {\n\t\t\t\tawait axiosAPI.post(\"attendees/create/\", {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\tevent: event_id,\n\t\t\t\t});\n\t\t\t\tmessage.success(\"Joined event\");\n\t\t\t}\n\t\t\tsetRegister(!register)\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = register ? \"Join failed\" : \"Unjoin failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, []);\n\n\tconst getRegisterStatus = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get-register-status/\", {\n                params: {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\tevent: item.id\n                }\n            });\n\t\t\tsetRegister(false);\n\t\t\tif (response.data == 1) {\n\t\t\t\tsetRegister(true);\n\t\t\t}\n        } catch (error) {\n            console.error(error);\n        }\n    }, []);\n\t\n\tuseEffect(() => {\n        getRegisterStatus();\n\t}, [getRegisterStatus]);\n\t\n\tconst onClickViewmore = useCallback(async (event_id, viewmore) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tsetViewmore(!viewmore);\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = \"Viewmore failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, []);\n\t\n\tconst buttonText = register ? \"Unjoin\" : \"Join\";\n\tconst options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\tconst begindate = new Date(item.begindate)\n\tconst enddate = new Date(item.enddate)\n\tconst virtual = item.virtual ? \"Yes.\" : \"No.\";\n\n\tconst joinButton = (item.attendee_count < item.attendee_cap) ? \n\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.id, register)} loading={isLoading}>\n\t\t\t{buttonText}\n\t\t</Button> :\n\t\t(register ? \n\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.id, register)} loading={isLoading}>\n\t\t\t{buttonText}\n\t\t</Button> : \n\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"event-unjoinable-form-button\" disabled={true}>\n\t\t \t{buttonText}\n\t\t</Button>)\n\n\tif (viewmore) {\n\t\t\treturn (\n\t\t\t\t<Card className=\"event-card\" title={item.name} bordered={true}>\n\t\t\t\t\t\t<Paragraph><b>Location: </b>{item.location}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>Description: </b>{item.description}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>Virtual? </b>{virtual}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>Instructions: </b>{item.instructions}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>No. of Attendees: </b>{item.attendee_count}/{item.attendee_cap}</Paragraph>\n\t\t\t\t\t<p style={{color: '#1890ff'}}>>><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(item.id, viewmore)}>\n\t\t\t\t\t\tView Less\n\t\t\t\t\t</Button></p>\n\t\t\t\t\t{joinButton}\n\t\t\t\t</Card>\n\t\t\t);\n\t\t// }\n\t} else {\n\t\treturn (\n\t\t\t<Card className=\"event-card\" title={item.name} bordered={true}>\n\t\t\t\t\t<Paragraph><b>Location: </b>{item.location}</Paragraph>\n\t\t\t\t\t<Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n\t\t\t\t\t<Paragraph><b>Description: </b>{item.description.substring(0, 50)}...</Paragraph>\n\t\t\t\t<p style={{color: '#1890ff'}}>>><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(item.id, viewmore)}>\n\t\t\t\t\tView More\n\t\t\t\t</Button></p>\n\t\t\t\t{joinButton}\n\t\t\t</Card>\n\t\t);\n\t}\n\n} export default EventCard; \n\n","import React, {useState, useEffect} from 'react';\nimport {Typography} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './Event.css';\nimport EventCard from '../components/EventCard';\nimport axiosAPI from \"../api/axiosApi\";\n\n\nconst Event = () => {\n    const [events, setEvents] = useState([]); \n    const [filterDisplay, setFilterDisplay] = useState([]);\n\n    useEffect(() => {\n        getEvents();\n    }, []);\n\n    const getEvents = async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get/\");\n            setEvents(response.data);\n            setFilterDisplay(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const handleChange = e => {\n        let oldList = events;\n        if (e !== \"\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                event.name.toLowerCase().includes(e.toLowerCase())\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    // const eventList = events.map(item => \n    //     <EventCard key={item.id} item={item} />\n    // );\n\n    return (\n        <React.Fragment>\n            <Typography.Title style={{ textAlign: \"center\" }} level={2}>Find service opportunities</Typography.Title>\n            <input onChange={e => handleChange(e.target.value)} placeholder=\"Search for events\"/>\n            <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-between\", overflowY: \"scroll\" }}>\n                {filterDisplay.map((item, i) => \n                    <EventCard key={i} item={item}/>\n                )}\n            </div>\n        </React.Fragment>\n    );\n}; export default Event;\n","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { Form, Input, Button, Select, Switch, DatePicker, InputNumber, message } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport { useDispatch } from 'react-redux';\nimport { addAlert } from '../actionCreators.js';\nimport \"antd/dist/antd.css\";\nimport \"./NewEventForm.css\"\n\nconst { TextArea } = Input;\nconst { RangePicker } = DatePicker;\n\nconst NewEventForm = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedCauses, setSelectedCauses] = useState([]);\n    const [causes, setCauses] = useState([]);\n    const [selectedOrgs, setSelectedOrgs] = useState([]);\n    const [orgs, setOrgs] = useState([]);\n    const dispatch = useDispatch();\n\n    const getCauses = useCallback(async () => {\n        try{\n            const response = await axiosAPI.get(\"causes/get/\");\n            setCauses(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setCauses]);\n\n    const getOrgs = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"admin/get-orgs/\", {\n                 params: {\n                     user_id: localStorage.getItem(\"user_id\"),  \n                 }\n             });\n            setOrgs(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setOrgs]);\n\n    useEffect(() => {\n        getCauses();\n        getOrgs();\n    }, [getCauses, getOrgs]);\n    \n    const filteredOrgs = useMemo(() => {\n        return orgs.filter(o => !selectedOrgs.includes(o));\n    }, [selectedOrgs, orgs]);\n\n    const filteredCauses = useMemo(() => {\n        return causes.filter(o => !selectedCauses.includes(o));\n    }, [selectedCauses, causes]);\n\n\n    const onFinish = useCallback(async (values) => {\n        setIsLoading(true);\n        try {\n            await axiosAPI.post(\"event/create/\", {\n                name: values.name,\n                virtual: values.virtual,\n                location: values.location,\n                causes: values.causes,\n                organizations: values.organizations,\n                date:values.date,\n                description: values.description,\n                instructions: values.instructions,\n                attendee_cap: values.attendeeCap,\n\n            });\n            message.success('Event created');\n        }\n        catch {\n            message.success('Event creation failed');\n        }\n        setIsLoading(false);\n    }, [dispatch, setIsLoading]);\n\n    return (\n        <Form\n            name=\"event\"\n            className=\"event-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >   \n            <Form.Item\n                name=\"organizations\"\n                hasFeedback\n                rules={[{ required: true, message: 'Organization name is required.' }]}\n            >\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Organization(s)\"\n                    value={selectedOrgs}\n                    onChange={setSelectedOrgs}\n                    style={{ width: '100%' }}\n                >\n                    \n                {filteredOrgs.map(item => (\n                    <Select.Option key={item.id} value={item.id}>\n                        {item.name}\n                    </Select.Option>\n                ))}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"name\"\n                hasFeedback\n                rules={[{ required: true, message: 'Event name is required.' }]}\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Event name\" />\n            </Form.Item>\n            <Form.Item\n                name=\"virtual\"\n                hasFeedback\n                valuePropName=\"checked\"\n            >\n                <Switch checkedChildren=\"Virtual\" unCheckedChildren=\"Non-virtual\" defaultChecked />\n            </Form.Item>\n            <Form.Item\n                name=\"location\"\n                hasFeedback\n                rules={[{ required: true, message: 'Location is required.' }]}\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Location\" />\n            </Form.Item>\n            <Form.Item\n                name=\"date\"\n                hasFeedback\n                rules={[{ required: true, message: 'Date is required.' }]}\n            >\n                <RangePicker style={{ width: '100%' }}  showTime={{ format: 'HH:mm' }}\n      format=\"YYYY-MM-DD HH:mm\" />\n            </Form.Item>\n            <Form.Item\n                name=\"causes\"\n                hasFeedback\n                rules={[{ required: true, message: 'Causes are required.' }]}\n            >\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Charitable cause(s)\"\n                    value={selectedCauses}\n                    onChange={setSelectedCauses}\n                    style={{ width: '100%' }}\n                >\n                    \n                {filteredCauses.map(item => (\n                    <Select.Option key={item.id} value={item.id}>\n                        {item.name}\n                    </Select.Option>\n                ))}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"attendeeCap\"\n                hasFeedback\n                rules={[{ required: true, message: 'Max number of attendees is required and must be a number.'}]}\n            >\n                \n                <InputNumber style={{ width: '100%' }} placeholder=\"Maximum number of attendees\"/>\n            </Form.Item>\n            <Form.Item\n                name=\"description\"\n                hasFeedback\n                rules={[{ required: true, message: 'Description is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Event description\" />\n            </Form.Item>\n            <Form.Item\n                name=\"instructions\"\n                hasFeedback\n                rules={[{ required: true, message: 'Instructions is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Provide volunteers with instructions (i.e. how to get there, what to bring, etc.)\" />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" loading={isLoading}>\n                    Create\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\n\nexport default NewEventForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport NewEventForm from '../forms/NewEventForm';\nimport './NewEvent.css';\n\nconst NewEvent = () => {\n    return (\n      <div className='event-container'>\n            <Typography.Title level={2}>Create an event</Typography.Title>\n            <NewEventForm />\n        </div>\n    );\n};\n\n\nexport default NewEvent;  \n\n","import React, {useState} from 'react';\nimport { Typography, Card, Switch, message } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport axiosAPI from '../api/axiosApi';\nimport './QAndA.css';\nconst { Paragraph } = Typography;\n\n\nfunction QAndA ({isAdmin, item, removeFaq}) {\n    const [questionStr, setQuestionStr] = useState(item?.question || \"\");\n    const [answerStr, setAnswerStr] = useState(item?.answer || \"\");\n    const [isPublic, setIsPublic] = useState(!!item?.is_public);\n\n    const updateQ = async (newQuestionStr) => {\n        setQuestionStr(newQuestionStr)\n        try {\n            await axiosAPI.post(\"faq/upsert/\", {\n                id: item?.id, question: newQuestionStr, answer: answerStr\n            });\n            message.success('Question updated');\n        }\n        catch {\n            message.error('Question failed to update');\n        }\n    }\n    const updateA = async (newAnswerStr) => {\n        setAnswerStr(newAnswerStr)\n        try {\n            await axiosAPI.post(\"faq/upsert/\", {\n                id: item?.id, question: questionStr, answer: newAnswerStr, is_public: isPublic\n            });\n            message.success('Answer updated');\n        }\n        catch {\n            message.error('Answer failed to update');\n        }\n    }\n    const updatePublic = async (newIsPublic) => {\n        setIsPublic(newIsPublic)\n        try {\n            await axiosAPI.post(\"faq/upsert/\", {\n                id: item?.id, question: questionStr, answer: answerStr, is_public: newIsPublic\n            });\n            message.success('FAQ updated');\n        }\n        catch {\n            message.error('FAQ failed to update');\n        }\n    }\n    const onDelete = async () => {\n        try {\n            await axiosAPI.delete(\"faq/delete/\", {\n                params: {\n                    id: item?.id,\n                }\n            });\n            removeFaq(item?.id)\n            message.success('FAQ deleted');\n        }\n        catch {\n            message.error('FAQ failed to delete');\n        }\n    }\n\n    return (\n\n        <Card style={{ marginTop: 8, marginBottom: 8 }} loading={!item} actions={isAdmin && [<DeleteOutlined onClick={onDelete} key=\"delete\" />]}>\n            <div style={{ display: \"flex\" }}>\n                <Paragraph style={{ float: \"left\", verticalAlign: \"top\", fontWeight: 700 }}>Question: </Paragraph>\n                {'  '}\n                <div style={{ marginLeft: 4, flexGrow: 100 }}>\n                    <Paragraph style={{ width: \"100%\" }} editable={isAdmin ? { onChange: (newQuestionStr) => updateQ(newQuestionStr) }: false}>{questionStr}</Paragraph>\n                </div>\n            </div>\n            <div style={{ display: \"flex\" }}>\n                <Paragraph style={{ float: \"left\", verticalAlign: \"top\", fontWeight: 700 }}>Answer: </Paragraph>\n                {'  '}\n\n                <div style={{ marginLeft: 4, flexGrow: 100 }}>\n                    <Paragraph style={{ width: \"100%\" }} editable={isAdmin ? { onChange: (newAnswerStr) => updateA(newAnswerStr) }: false}>{answerStr}</Paragraph>\n                </div>\n            </div>\n            {isAdmin &&\n                <Switch checkedChildren=\"Public\" unCheckedChildren=\"Hidden\" onChange={(newIsPublic) => updatePublic(newIsPublic)} defaultChecked={item?.is_public}/>\n            }\n        </Card>\n    )\n\n}\nexport default QAndA;","import React, {useState, useEffect} from 'react';\nimport { Button, Typography } from 'antd';\nimport QAndA from '../components/QAndA';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\n\nfunction QAndAPage({isAdmin, orgId}) {\n    const [qA, setQA] = useState([]);\n    console.log('isAdmin', isAdmin); \n    const getQA = async (orgId) => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-faq/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setQA(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }\n\n    const removeFaq = (id) => {\n        setQA(qA.filter(faq => faq.id !== id));\n    }\n\n    useEffect(() => {\n        if (orgId) {\n            getQA(orgId);\n        }\n    }, [orgId]);\n\n    const addQAField = async () => {\n        const response = await axiosAPI.post(\"faq/upsert/\", {\n            org_id: orgId, question: \"question\", answer: \"answer\"\n        });\n        setQA([...qA, {id: response.data.id, question: \"question\", answer: \"answer\"}]);\n    }\n\n\n    return (\n        <div>\n            <Title level={4}>Frequently asked questions</Title>\n            {qA.map(item => \n                <QAndA isAdmin={isAdmin} key={item.id} item={item} removeFaq={removeFaq}/>\n            )}\n            {isAdmin && (<Button style={{ width: '100%' }} type=\"primary\" onClick={() => {addQAField()}}>Add New FAQ</Button>)}\n        </div>\n    );\n};\n\n\nexport default QAndAPage;","import React, {useState, useEffect, useCallback} from 'react';\nimport {Button, Typography, message, Select, Space} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './Event.css';\nimport EventCard from '../components/EventCard';\nimport axiosAPI from \"../api/axiosApi\";\n\nconst { Option } = Select;\n\nconst OrgEvents = ({orgId}) => {\n    const [events, setEvents] = useState([]); \n    const [filterDisplay, setFilterDisplay] = useState([]);\n    const [attendeeCount, setAttendeeCount] = useState([]); \n\n    const getEventsByOrg = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get-by-org/\", {\n                params: {\n                    orgId: orgId,\n                }\n            });\n            setEvents(response.data);\n            setFilterDisplay(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setEvents, orgId]);\n\n    useEffect(() => {\n        getEventsByOrg();\n    }, [orgId, getEventsByOrg]);\n\n    const handleChange = e => {\n        let oldList = events;\n        if (e !== \"\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                event.name.includes(e)\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const virtualFilterChange = value => {\n        let oldList = events;\n        if (value == \"virtual\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                event.virtual\n            );\n            setFilterDisplay(newList);\n        } else if (value == \"inperson\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                !event.virtual\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const openFilterChange = value => {\n        let oldList = events;\n        if (value == \"open\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                    (event.attendee_count < event.attendee_cap)\n            );\n            setFilterDisplay(newList);\n        } else if (value == \"filled\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                !(event.attendee_count < event.attendee_cap)\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={4}>Upcoming events</Typography.Title>\n            <Space>\n                <input onChange={e => handleChange(e.target.value)} placeholder=\"Search for events\" class=\"search\"/>\n                Filter by Virtual:<Select defaultValue=\"none\" style={{ width: 120 }} onChange={value => virtualFilterChange(value)} size=\"small\">\n                    <Option value=\"none\">Select All</Option>\n                    <Option value=\"virtual\">Virtual</Option>\n                    <Option value=\"inperson\">Not Virtual</Option>\n                </Select>\n                Filter by Open:<Select defaultValue=\"none\" style={{ width: 120 }} onChange={value => openFilterChange(value)} size=\"small\">\n                    <Option value=\"none\">Select All</Option>\n                    <Option value=\"open\">Open</Option>\n                    <Option value=\"filled\">Filled</Option>\n                </Select>\n            </Space> \n            <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-between\", overflowY: \"scroll\" }}>\n                {filterDisplay.map((item, i) => \n                    <EventCard key={i} item={item}/>\n                )}\n            </div>\n            \n        </React.Fragment>\n    );\n}; export default OrgEvents;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { Typography, Skeleton, Tag, Descriptions, PageHeader, Input } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport { PlusOutlined } from '@ant-design/icons';\nimport { useRef } from 'react';\n\nconst { Paragraph, Title } = Typography;\n\nconst AboutUs = ({org}) => {\n    const [causes, setCauses] = useState([]);\n    const [inputVisible, setInputVisible] = useState(false);\n    const [inputValue, setInputValue] = useState('');\n    const inputRef = useRef();\n\n    const getCausesByOrg = useCallback(async () => {\n        if (org?.id) {\n            try {\n                const response = await axiosAPI.get(\"organization/get-causes/\", {\n                    params: {\n                        orgId: org?.id\n                    }\n                });\n                setCauses(response.data);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    }, [setCauses, org]);\n\n    useEffect(() => {\n        getCausesByOrg();\n    }, [org, getCausesByOrg]);\n\n    const handleClose = useCallback(async (removedTag) => {\n        const tags = causes.filter(cause => cause.id !== removedTag);\n        setCauses(tags);\n    }, [causes, setCauses]);\n    \n    const handleInputConfirm = useCallback(() => {\n        const newCauses = \n            (inputValue && causes.map(cause => cause.name).indexOf(inputValue) === -1)\n                ? [...causes, {name: inputValue, id: newCauses.length}]\n                : causes;\n        setCauses(newCauses);\n        setInputVisible(false);\n        setInputValue(\"\");\n    }, [setCauses, setInputValue, setInputVisible, causes]);\n\n    const showInput = () => {\n        setInputVisible(true);\n    }\n\n    const tags = (\n        <React.Fragment>\n            {causes.map(c => \n                <Tag \n                    key={c.id} \n                    color=\"blue\" \n                    closable \n                    onClose={e => {\n                        e.preventDefault();\n                        handleClose(c.id);\n                    }}\n                >\n                    {c.name}\n                </Tag>\n            )}\n            {inputVisible && (\n                <Input\n                    ref={inputRef}\n                    type=\"text\"\n                    size=\"small\"\n                    style={{ width: 78 }}\n                    value={inputValue}\n                    onChange={(e) => {setInputValue(e.target.value)}}\n                    onBlur={handleInputConfirm}\n                    onPressEnter={handleInputConfirm}\n                />\n            )}\n            {!inputVisible && (\n                <Tag onClick={showInput} className=\"site-tag-plus\">\n                    <PlusOutlined /> New Tag\n                </Tag>\n            )}\n        </React.Fragment>\n    );\n\n    return (\n        <Skeleton loading={!org} active>\n            <PageHeader\n                title={`About ${org?.name}`}\n                className=\"site-page-header\"\n                tags={tags}\n            >\n                  <Descriptions>\n                    {org?.website && <Descriptions.Item label=\"Website\"><a href={org.website}>{org.website}</a></Descriptions.Item>}\n                    {org?.phone && <Descriptions.Item label=\"Telephone\">{org.phone}</Descriptions.Item>}\n                    {org?.email && <Descriptions.Item label=\"Email\"><a href={`mailto:${org.email}`}>{org.email}</a></Descriptions.Item>}\n                    {org?.address && <Descriptions.Item label=\"Street Address\">{org.address}</Descriptions.Item>}\n                </Descriptions>\n                <Paragraph editable>{org?.description}</Paragraph>\n            </PageHeader>\n        </Skeleton>\n    );\n}; \n\nexport default AboutUs;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Button, Popconfirm, Tooltip, message, Select } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nfunction MemberPage({orgId}) {\n    const [members, setMembers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const currentUser = localStorage.getItem(\"user_id\");\n    \n    const getMembers = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-members/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            response.data.forEach(member => member.key = member.id);\n            setMembers(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n\n    const deleteMember = useCallback(async (memberId) => {\n        try {\n            const response =  await axiosAPI.delete(\"member/delete/\", {\n                params: {\n                    member_id: memberId,\n                }\n            });\n            setMembers(members.filter(member => member.key !== memberId));\n            message.success(\"Member deleted\");\n        } catch(error) {\n            console.error(error);\n            message.error(\"Member could not be deleted.\");\n        }\n    }, [members]);\n\n    useEffect(() => {\n        if (orgId) {\n            getMembers(orgId);\n        }\n    }, [orgId]);\n\n    const columns = [\n        {\n            title: 'First',\n            dataIndex: ['user', 'first_name'],\n            key: 'first',\n        },\n        {\n            title: 'Last',\n            dataIndex: ['user', 'last_name'],\n            key: 'last',\n        },\n        {\n            title: 'Email',\n            dataIndex: ['user', 'email'],\n            key: 'email',\n        },\n        {\n            title: 'Role',\n            dataIndex: 'role',\n            key: 'role',\n            render: (_, record) => (\n                record.member_type === 1 ? \"Admin\" : \"Member\"\n            ),\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: (_, record) => (\n                \"Active\"\n            ),\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (_, record) => (\n                parseInt(currentUser) === record.user.id ?\n                (\n                    <Tooltip title=\"Cannot delete your own user.\">\n                        <Button type=\"primary\" danger disabled>\n                            Delete\n                        </Button>\n                    </Tooltip>\n                ) : (\n                    <Popconfirm title=\"Are you sure you want to delete this member?\" onConfirm={() => deleteMember(record.key)} okText=\"Yes\" cancelText=\"No\" disabled={parseInt(currentUser) === record.user.id}>\n                        <Button type=\"primary\" danger>\n                            Delete\n                        </Button>\n                    </Popconfirm>\n                )\n            )\n        }\n    ];\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Members</Title>\n            <Table columns={columns} dataSource={members} loading={loading}/>\n        </React.Fragment>\n    );\n};\n\n\nexport default MemberPage;","import React, {useState, useEffect, useCallback} from 'react';\nimport {Typography, Table} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\n\n\nconst OrgFeedback = ({isAdmin, orgId}) => {\n\n    const [info, setInfo] = useState([]); \n\n    const getFeedbackByOrg = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"eventFeedback/get-by-org/\", {\n                params: {\n                    orgId: orgId,\n                    isAdmin: isAdmin,\n                    userId: localStorage.getItem(\"user_id\"), \n                }\n            });\n            setInfo(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [orgId, isAdmin]);\n\n    useEffect(() => {\n        getFeedbackByOrg();\n    }, [getFeedbackByOrg, orgId]);\n\n    const columns = [\n    {\n    title: 'Event Name',\n    dataIndex: 'event__name',\n    key: 'event__name',\n    sorter: (a, b) => a.event__name.localeCompare(b.event__name),\n    },\n    {\n    title: 'Volunteer Name',\n    dataIndex: 'name',\n    key: 'name',\n    sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n    title: 'Volunteer Email',\n    dataIndex: 'username__email',\n    key: 'username__email',\n    sorter: (a, b) => a.username__email.localeCompare(b.username__email),\n    },\n    {\n    title: 'Overall Experience',\n    dataIndex: 'overall',\n    key: 'overall',\n    filters: [\n        {\n            text: 'Poor',\n            value: 'Poor',\n        },\n        {\n            text: 'Fair',\n            value: 'Fair',\n        },\n        {\n            text: 'Average',\n            value: 'Average',\n        },\n        {\n            text: 'Good',\n            value: 'Good',\n        },\n        {\n            text: 'Excellent',\n            value: 'Excellent',\n        },\n        ],\n            filterMultiple: true,\n            onFilter: (value, record) => record.overall === value,\n    },\n    {\n    title: 'Satisfaction',\n    dataIndex: 'satisfaction',\n    key: 'satisfaction',\n    filters: [\n        {\n            text: 'Very Dissatisfed',\n            value: 'Very Dissatisfied',\n        },\n        {\n            text: 'Dissatisfied',\n            value: 'Dissatisfied',\n        },\n        {\n            text: 'Neutral',\n            value: 'Neutral',\n        },\n        {\n            text: 'Satisfied',\n            value: 'Satisfied',\n        },\n        {\n            text: 'Very Satisfied',\n            value: 'Very Satisfied',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.satisfaction === value,\n    },\n    {\n    title: 'Recommend Likelihood',\n    dataIndex: 'likely',\n    key: 'likely',\n    filters: [\n        {\n            text: 'Very Unlikely',\n            value: 'Very Unlikely',\n        },\n        {\n            text: 'Somewhat Unlikely',\n            value: 'Somewhat Unlikely',\n        },\n        {\n            text: 'Neutral',\n            value: 'Neutral',\n        },\n        {\n            text: 'Somewhat Likely',\n            value: 'Somewhat Likely',\n        },\n        {\n            text: 'Very Likely',\n            value: 'Very Likely',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.likely === value,\n    },\n    {\n    title: 'Met Expectations',\n    dataIndex: 'expectations',\n    key: 'expectations',\n    filters: [\n        {\n            text: 'Yes',\n            value: 'Yes',\n        },\n        {\n            text: 'No',\n            value: 'No',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.expectations === value,\n    },\n    {\n    title: 'Future Volunteer',\n    dataIndex: 'future',\n    key: 'future',\n    filters: [\n        {\n            text: 'Yes',\n            value: 'Yes',\n        },\n        {\n            text: 'No',\n            value: 'No',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.future === value,\n    },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={4}>Event Feedback</Typography.Title>\n            <Table \n            dataSource={info} \n            columns={columns}\n            expandedRowRender= {record =>\n                <p>\n                    <b>Event Details</b><br/>\n                    Name: {record.event__name}<br/>\n                    Location: {record.event__location}<br/>\n                    Date: {(new Date(record.event__begindate)).toLocaleString('en-US', options)} - {(new Date(record.event__enddate)).toLocaleString('en-US', options)}<br/><br/>\n                    <b>Additional Feedback</b><br/>\n                    What could we have done better?<br/>\n                    {record.better}<br/><br/>\n                    Is there anything else we should know about your volunteer experience?<br/>\n                    {record.experience}<br/>\n                </p>\n            }        \n            />\n        </React.Fragment>\n    );\n}; export default OrgFeedback;\n","import React, {useState, useCallback, useEffect} from 'react';\nimport { Upload, Button, message, Typography } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport Plot from 'react-plotly.js';\n\nconst { Title } = Typography;\n\n\nfunction EventsPerVolunteer({orgId}) {\n    useEffect(() => {\n        getEvents(orgId)\n        getUniqueAttendees(orgId)\n        getUniqueMembers(orgId)\n        getVolunteersWhoGaveFeedback(orgId)\n        getAvgEventsPerVolunteer(orgId);\n  \n    }, [orgId]);\n    const [uniqueAttendees, setUniqueAttendees] = useState(0);\n    const [uniqueMembers, setUniqueMembers] = useState(0);\n    const [uniqueEvents, setUniqueEvents] = useState(0);\n    const [uniqueVolunteersWithFeedback, setUniqueVolunteersWithFeedback] = useState(0);\n    const [avgEventsPerVolunteer, setAvgEventsPerVolunteer] = useState(0);\n\n    const getUniqueAttendees = async (orgId) => {\n        try {\n            const response =  await axiosAPI.get(\"events/get-unique-attendees/\", {\n                params: {\n                    orgId: orgId,\n                }\n            });\n            console.log(\"unique attendees\" + response.data);\n            setUniqueAttendees(response.data)\n        } catch(error) {\n            console.error(error);\n        }\n    }\n    const getUniqueMembers = async (orgId) => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-member-counts-by-org/\", {\n                params: {\n                    orgId: orgId,\n                }\n            });\n            console.log(\"unique members\" + response.data[0]);\n            setUniqueMembers(response.data[0])\n        } catch(error) {\n            console.error(error);\n        }\n    }\n    const getEvents = async (orgId) => {\n        try {\n            const response =  await axiosAPI.get(\"events/count-for-org/\", {\n                params: {\n                    orgId: orgId,\n                }\n            });\n            console.log(\"event count\" + response.data);\n            setUniqueEvents(response.data)\n        } catch(error) {\n            console.error(error);\n        }\n    }\n    const getVolunteersWhoGaveFeedback = async (orgId) => {\n        try {\n            const response =  await axiosAPI.get(\"events/get-unique-volunteers-with-feedback/\", {\n                params: {\n                    orgId: orgId,\n                }\n            });\n            console.log(\"volunteers with feeback\" + response.data);\n            setUniqueVolunteersWithFeedback(response.data)\n        } catch(error) {\n            console.error(error);\n        }\n    }\n    const getAvgEventsPerVolunteer = async (orgId) => {\n        try {\n            const response =  await axiosAPI.get(\"events/get-avg-events-per-volunteer/\", {\n                params: {\n                    orgId: orgId,\n                }\n            });\n            console.log(\"events per volunteer\" + response.data);\n            setAvgEventsPerVolunteer(response.data)\n        } catch(error) {\n            console.error(error);\n        }\n    }\n    console.log(\"unique attendees\" + uniqueAttendees);\n    console.log(\"unique vol\" + uniqueVolunteersWithFeedback);\n    var data = [{type: 'funnel', y: [\"Members\", \"Attendees\", \"Feedback\", \"Events per Volunteer\"], x: [uniqueMembers, uniqueAttendees, uniqueVolunteersWithFeedback, avgEventsPerVolunteer]}];\n    var layout = {margin: {l: 150}, width:600, height: 500}\n    return (\n        <Plot data={data} layout={layout}/>\n    );\n};\nexport default EventsPerVolunteer;","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerLeaderboard({ data}) {\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        },\n        {\n            title: 'Events Attended',\n            dataIndex: 'count',\n            key: 'count',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.count - b.count,\n        },\n        {\n            title: 'Volunteer Hours',\n            dataIndex: 'total',\n            key: 'total',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.total - b.total,\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Volunteer Leaderboard</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                expandedRowRender = {record => <p style={{ margin: 0 }}><b>Events Attended: </b>{record.event_list}</p>}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default VolunteerLeaderboard;","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nfunction EventLeaderboard({data}) {\n    return (\n        <React.Fragment>      \n            <Plot\n                data={[\n                {type: 'pie', labels: data.ratings_arr[0], values: data.ratings_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Rating'} }\n            />\n\n            <Plot\n                data={[\n                {type: 'pie', labels: data.satisfactions_arr[0], values: data.satisfactions_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Satisfaction'} }\n            />\n            <Plot\n                data={[\n                {type: 'pie', labels: data.likely_arr[0], values: data.likely_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Recommend Likelihood'} }\n            />\n            <Plot\n                data={[\n                {type: 'pie', labels: data.expectations_arr[0], values: data.expectations_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Met Expectations'} }\n            />\n            <Plot\n                data={[\n                {type: 'pie', labels: data.future_arr[0], values: data.future_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Future Volunteer'} }\n            />\n        </React.Fragment>\n    )\n\n\n} export default EventLeaderboard;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\nimport EventLeaderboardPlots from '../components/EventLeaderboardPlots';\n\nfunction EventLeaderboard({ data}) {\n\n    const columns = [\n        {\n            title: 'Event',\n            dataIndex: 'event__name',\n            key: 'event__name',\n        },\n        {\n            title: 'Volunteers',\n            dataIndex: 'count',\n            key: 'count',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.count - b.count,\n        },\n        {\n            title: 'Average Rating',\n            dataIndex: 'avg_rating',\n            key: 'avg_rating',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.count - b.count,\n        },\n        {\n            title: 'Average Satisfaction',\n            dataIndex: 'avg_satisfaction',\n            key: 'avg_satisfaction',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.total - b.total,\n        },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Event Leaderboard</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                expandedRowRender= {record => \n                    <p>\n                        <b>Event Details</b><br/>\n                        Name: {record.event__name}<br/>\n                        Location: {record.event__location}<br/>\n                        Date: {(new Date(record.event__begindate)).toLocaleString('en-US', options)} - {(new Date(record.event__enddate)).toLocaleString('en-US', options)}<br/><br/>\n\n                        <b>Attendes: </b>\n                        {record.attendees}<br/><br/>\n\n                        <EventLeaderboardPlots data={record}/>\n                    </p>\n                }\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default EventLeaderboard;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerBreakdown({ data}) {\n\n    const columns = [\n        { \n            title: '',\n            dataIndex: 'label',\n            key: 'label',\n            ellipsis: true,\n            render: (text: string) => <b>{text}</b>,\n        },\n        {\n          title: 'Count',\n          dataIndex: 'count',\n          key: 'count',\n          ellipsis: true,\n        },\n        {\n          title: 'Hours',\n          dataIndex: 'hours',\n          key: 'hours',\n          ellipsis: true,\n        },\n      ];\n\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Volunteer Breakdown</Typography.Title>\n            <Table \n                dataSource={data} \n                columns={columns}\n                expandedRowRender = {record => <p style={{ margin: 0 }}><b>Volunteer Names: </b>{record.name}</p>}\n                rowExpandable = {record => record.label !== 'Total'}\n                pagination={false}\n            />\n            <br/>\n            <br/>\n        </React.Fragment>\n    )\n\n\n} export default VolunteerBreakdown;","import React, {useState, useEffect, useCallback} from 'react';\nimport {Typography} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\nimport Plot from 'react-plotly.js';\nimport EventsPerVolunteer from './EventsPerVolunteer.jsx';\nimport VolunteerLeaderboard from '../components/VolunteerLeaderboard';\nimport EventLeaderboard from '../components/EventLeaderboard';\nimport VolunteerBreakdown from '../components/VolunteerBreakdown';\n\nconst Analytics = ({orgId}) => {\n\n    const [breakdown, setBreakdown] = useState([]);\n    const [orgCount, setOrgCount] = useState([]); \n    const [attendeeCount, setAttendeeCount] = useState([]); \n    \n    const getBreakdown = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-breakdown/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setBreakdown(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    const getAnalyticsByOrg = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"organization/get-member-counts-by-org/\", {\n                params: {\n                    orgId: orgId\n                }\n            });\n            setOrgCount(response.data);\n            console.log('response', response.data)\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setOrgCount, orgId]);\n\n    const getAnalyticsByEvent = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get-attendee-counts-by-event/\", {\n                params: {\n                    orgId: orgId\n                }\n            });\n            setAttendeeCount(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setAttendeeCount, attendeeCount, orgId]);\n\n    useEffect(() => {\n        if (orgId) {\n            getBreakdown(orgId);\n        }\n    }, [getBreakdown, orgId, breakdown]);\n\n    const [volunteers, setVolunteers] = useState([]);\n    \n    const getVolunteers = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-leaderboard/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setVolunteers(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        if (orgId) {\n            getVolunteers(orgId);\n        }\n    }, [getVolunteers, orgId, volunteers]); \n\n\n    const [events, setEvents] = useState([]);\n    \n    const getEvents = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/event-leaderboard/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setEvents(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        getAnalyticsByEvent();\n    }, [orgId]); \n\n    useEffect(() => {\n        getAnalyticsByOrg();\n    }, [orgId, getAnalyticsByOrg]);\n\n    useEffect(() => {\n        if (orgId) {\n            getEvents(orgId);\n        }\n    }, [getEvents, orgId, events]);\n      \n\n    return (\n      <React.Fragment>\n            <Typography.Title level={4}>Analytics</Typography.Title>\n                <Plot\n                    data={[\n                      {type: 'bar', x: ['admins', 'members'], y: orgCount},\n                    ]}\n                    layout={ {width: 480, height: 360, title: 'User Count (Admin vs. Members)'} }\n                />\n                <Plot\n                    data={[\n                      {type: 'bar', x: attendeeCount[0], y: attendeeCount[1]},\n                    ]}\n                    layout={ {width: 480, height: 360, title: 'Event Attendees Count'} }\n                />\n                <EventsPerVolunteer orgId ={orgId}/>\n            <VolunteerBreakdown data={breakdown}/>\n            <VolunteerLeaderboard data={volunteers}/>\n            <EventLeaderboard data={events}/>\n        </React.Fragment>\n    );\n};export default Analytics;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Button, Popconfirm, message, Row, Modal, Select } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nfunction InvitePage({orgId}) {\n    const [invites, setInvites] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const currentUser = localStorage.getItem(\"user_id\");\n    const [showModal, setShowModal] = useState(false);\n    const [modalButtonLoading, setModalButtonLoading] = useState(false);\n    const [invitedMembers, setInvitedMembers] = useState([]);\n    const [memberType, setMemberType] = useState(0);\n\n    const getInvites = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-invites/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            response.data.forEach(invite => invite.key = invite.id);\n            setInvites(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    const inviteMembers = useCallback(async () => {\n        try {\n            setModalButtonLoading(true);\n            await axiosAPI.post(\"member/invite/\", {\n                emails: invitedMembers,\n                member_type: memberType,\n                org_id: orgId,\n            });\n            setInvitedMembers([]);\n            getInvites();\n            message.success(\"Invitation sent\");\n        } catch(error) {\n            console.error(error);\n            message.error(\"Invitations could not be sent.\");\n        }\n        setModalButtonLoading(false);\n    }, [invitedMembers, getInvites, setInvitedMembers, memberType, orgId, setModalButtonLoading]);\n\n    const deleteInvite = useCallback(async (inviteId) => {\n        try {\n            const response =  await axiosAPI.delete(\"invite/delete/\", {\n                params: {\n                    invite_id: inviteId,\n                }\n            });\n            setInvites(invites.filter(invite => invite.key !== inviteId));\n            message.success(\"Invitation deleted\");\n        } catch(error) {\n            console.error(error);\n            message.error(\"Invitation could not be deleted.\");\n        }\n    }, [invites]);\n\n    useEffect(() => {\n        if (orgId) {\n            getInvites(orgId);\n        }\n    }, [orgId]);\n\n    const columns = [\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        },\n        {\n            title: 'Role',\n            dataIndex: 'role',\n            key: 'role',\n            render: (_, record) => (\n                record.member_type === 1 ? \"Admin\" : \"Member\"\n            ),\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: (_, record) => (\n                \"Active\"\n            ),\n        },\n        {\n            title: 'Resend',\n            key: 'resend',\n            render: (_, record) => (\n                <Popconfirm title=\"Are you sure you want to delete this member?\" onConfirm={() => {}} okText=\"Yes\" cancelText=\"No\">\n                    <Button type=\"primary\">\n                        Resend\n                    </Button>\n                </Popconfirm>\n            )\n        },\n        {\n            title: 'Delete',\n            key: 'delete',\n            render: (_, record) => (\n                <Popconfirm title=\"Are you sure you want to delete this invitation?\" onConfirm={() => deleteInvite(record.key)} okText=\"Yes\" cancelText=\"No\">\n                    <Button type=\"primary\" danger>\n                        Delete\n                    </Button>\n                </Popconfirm>\n            )\n        }\n    ];\n\n    return (\n        <React.Fragment>\n            <div>\n                <Row justify=\"space-between\">\n                    <Title level={4}>Outstanding invites</Title>\n                    <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => setShowModal(true)}>\n                        Invite new members\n                    </Button>\n                </Row>\n                <Table columns={columns} dataSource={invites} loading={loading}/>\n            </div>\n            <Modal\n                visible={showModal}\n                title=\"Invite new members\"\n                onOk={() => {}}\n                onCancel={() => setShowModal(false)}\n                footer={[\n                    <Button key=\"back\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>,\n                    <Button key=\"submit\" type=\"primary\" loading={modalButtonLoading} onClick={inviteMembers}>\n                        Send\n                    </Button>,\n                ]}\n            >\n                <Select title=\"hello:\" defaultValue={0} style={{ width: '100%', marginBottom: 8 }} onChange={setMemberType} placeholder=\"Member Type\">\n                    <Option value={0}>Member</Option>\n                    <Option value={1}>Admin</Option>\n                </Select>\n                <Select mode=\"tags\" style={{ width: '100%' }} onChange={value => setInvitedMembers(value)} tokenSeparators={[',']} placeholder=\"Emails\" allowClear>\n                    {[]}\n                </Select>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\n\nexport default InvitePage;","import React from \"react\";\nimport Tag from \"antd/lib/tag\";\nimport \"antd/lib/tag/style/css\";\n\nconst statusMap = {\n  Complete: <Tag color=\"green\">Complete</Tag>,\n  Rejected: <Tag color=\"red\">Rejected</Tag>,\n  Pending: <Tag color=\"orange\">Pending Approval</Tag>,\n  None: <p></p>\n};\n\nexport const StatusTag = ({ status }) => statusMap[status];","import React, {useState, useCallback, useEffect} from 'react';\nimport { Upload, Button, Table } from 'antd';\nimport {StatusTag} from '../components/StatusTag';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nimport { UploadOutlined } from '@ant-design/icons';\n\nfunction UserFilesTable({orgId, fileList, messageHandler}) {\n    const [userFileList, setUserFileList] = useState([]);\n    const getUserFiles = useCallback(async (orgId) => {\n        try {\n             const response = await axiosAPI.get(\"clearances/get-user-files/\", {\n                 params: {\n                     userId: localStorage.getItem(\"user_id\"), \n                     orgId: orgId\n                 }\n             });\n            const files = response.data;\n            const formattedFiles = files.map(file => ({\n                uid: file.id, \n                orgFormId: file.org_file, \n                name: file.filled_form.split('/').slice(-1).pop(), \n                status: file.status,\n                url: file.filled_form,\n                comment: file.comment\n            }));\n            setUserFileList(formattedFiles);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        getUserFiles(orgId)\n    }, [orgId]);\n\n    const props = {\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n        listType: 'picture',\n        onChange(info) {\n            getUserFiles(orgId)\n            messageHandler(info)\n        },\n    };\n    \n    const columns = [\n        {\n            title: 'Uncompleted File',\n            dataIndex: 'file',\n            key: 'file',\n            render: text => <a href={window.location.origin + \"/\" + text}>{text}</a>,\n        },\n        {\n            title: 'Your Uploaded File',\n            dataIndex: 'uploaded_file',\n            key: 'uploaded_file',\n            render: text => <a href={window.location.origin +  \"/\" + text}>{text}</a>,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            // render: (text, record) => console.log(\"record\", record)\n            render: (text, record) => <StatusTag status={record.status} />\n        },\n        {\n            title: 'Comment',\n            dataIndex: 'comment',\n            key: 'comment',\n            // render: (text, record) => console.log(\"record\", record)\n            render: (text, record) => <p>{text}</p> \n        },\n        {\n            title: 'Upload New File',\n            key: 'upload',\n            render: (record) => (\n                <Upload {...props} \n                    beforeUpload={file => {\n                        const formData = new FormData();\n                        formData.append('org_file_id', record.key);\n                        formData.append('user_id', localStorage.getItem(\"user_id\"))\n                        formData.append('filled_form', file, file.name);\n                        formData.append('status', 'Pending');\n                        formData.append('comment', 'N/A');\n                        return axiosAPI.post('clearances/upload-user-file', formData, {\n                            headers: {\n                                'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW'\n                            }\n                        })\n                        .then(({ thumbnail }) => thumbnail);\n                    }}\n                >\n                    <Button icon={<UploadOutlined/>}> Upload </Button>  \n                </Upload>\n            ),\n        },\n    ];\n\n    function getUserFileForOrgFile(infoType, oFormId) {\n        console.log(\"ufl\", (userFileList.filter(ufile => ufile.orgFormId == oFormId)))\n        if ((userFileList.filter(ufile => ufile.orgFormId == oFormId)).length > 0) {\n            const userFile = userFileList.filter(ufile => ufile.orgFormId == oFormId)[0]\n            if (infoType == \"name\") {\n                return userFile.name;\n            } else if (infoType == \"status\") {\n                return userFile.status\n            } else if (infoType == \"comment\"){\n                return userFile.comment\n            }\n        }\n\n        if (infoType == \"status\") {\n            return \"None\";\n        }\n        return (null)\n    }\n    \n    const data = fileList.map((file,i) => ({\n        \"key\": file.uid, \n        \"file\": file.name,\n        \"uploaded_file\": getUserFileForOrgFile(\"name\", file.uid),\n        \"status\": getUserFileForOrgFile(\"status\", file.uid),\n        \"comment\": getUserFileForOrgFile(\"comment\", file.uid),\n    }))\n\n    return (\n        <div>\n           <Table columns={columns} dataSource={data}/>\n        </div>\n    );\n};\nexport default UserFilesTable;","import React, {useState, useCallback, useEffect} from 'react';\nimport { Upload, Button, message, Typography } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nimport UserFilesTable from './UserFilesTable';\nimport { UploadOutlined } from '@ant-design/icons';\nconst { Title } = Typography;\n\n\nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nfunction Clearances({isAdmin, orgId}) {\n    const [fileList, setFileList] = useState([]);\n\n    let host = window.location.origin + '/';\n    if (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\") {\n        host = `http://${window.location.hostname}:8000/`\n    }\n\n    const getOrgFiles = useCallback(async (orgId) => {\n        try {\n            const response = await axiosAPI.get(\"clearances/get-org-files/\", {\n                params: {\n                    orgId: orgId, \n                }\n            });\n            const files = response.data;\n            const formattedFiles = files.map(file => ({\n                uid: file.id, \n                name: file.empty_form.split('/').slice(-1).pop(), \n                status: \"done\", \n                url: file.empty_form\n            }));\n\n            setFileList(formattedFiles);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        getOrgFiles(orgId)\n    }, [orgId]);\n\n    function messageHandler(info) {\n        if (info.file.status !== 'uploading') {\n          console.log(info.file, info.fileList);\n        }\n\n        if (info.file.status === 'done') {\n          message.success('File upload success');\n        } else if (info.file.status === 'error') {\n          message.error('File upload failed');\n        }\n    }\n\n    const orgProps = {\n        listType: 'picture',\n        fileList: fileList,\n        onChange(info) {\n            messageHandler(info)\n            let fl = [...info.fileList];\n            fl = fl.map(file => {\n                if (file.response) {\n                    // Component will show file.url as link\n                    file.url = file.response.data.empty_form;\n                }\n                return file;\n            });\n                \n            setFileList(fl);\n        },\n        customRequest: async function(options) {\n            const formData = new FormData();\n            formData.append('empty_form', options.file, options.file.name);\n            formData.append('orgId', orgId);\n            try {\n                let data = await axiosAPI.post('clearances/upload-org-file', formData, {\n                    headers: {\n                    'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW'\n                    }\n                });\n                options.onSuccess(data, options.file);\n            } catch (error) {\n                console.log(error)\n            }\n        },\n    };\n    return (\n        <div>\n            <Title level={4}>Clearances</Title>\n            {isAdmin ? \n                <>\n                    <Upload {...orgProps}>\n                        <Button icon={<UploadOutlined/>}>Upload New Form</Button>  \n                    </Upload>\n                </> :\n                \n                <UserFilesTable orgId={orgId} fileList={fileList} messageHandler={messageHandler}/>\n            }\n           \n        </div>\n    );\n};\nexport default Clearances;","import React, {useState, useCallback, useEffect} from 'react';\nimport { Table, Radio, Typography } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nconst { Paragraph } = Typography;\n\nfunction OrgClearanceTable({orgId}) {\n    const [rows, setRows] = useState([]);\n\n    function acceptOrReject(value, record) {\n        console.log(value.target.value)\n        console.log(record)\n\n        const status = value.target.value\n\n        try {\n            const response = axiosAPI.post(\"clearances/set-status-user-file/\", \n                {\n                    id: record.key, \n                    status: status,\n                }\n        );\n        } catch(error){\n            console.error(error)\n        }\n    };\n\n    function addComment(value, record) {\n        console.log(value)\n        console.log(record)\n\n\n        const comment = value\n        console.log(record.key)\n\n        try {\n            const response = axiosAPI.post(\"clearances/set-status-user-file/\", \n                {\n                    id: record.key, \n                    comment: comment,\n                }\n        );\n        } catch(error){\n            console.error(error)\n        }\n    };\n\n    const getUserFiles = useCallback(async (orgId) => {\n        try {\n            const response = await axiosAPI.get(\"clearances/get-user-files-for-org/\", {\n                params: {\n                    orgId: orgId, \n                }\n            });\n            const files = response.data;\n            const result = files.map((file,i) => ({\n                key: file.id, \n                user: file.user__email, \n                file: file.filled_form.split('/').slice(-1).pop(), \n                status: file.status,\n                comment: file.comment\n            }))\n\n            console.log(result)\n            setRows(result)\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        getUserFiles(orgId)\n    }, [orgId]);\n   \n    const columns = [\n        {\n            title: 'User',\n            dataIndex: 'user',\n            key: 'user',\n            render: text => <p>{text}</p>,\n        },\n        {\n            title: 'File',\n            dataIndex: 'file',\n            key: 'file',\n            render: text => <a href={\"http://localhost:8080/\" +text}>{text}</a>,\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record, index) => (\n                <Radio.Group defaultValue={record.status} onChange={(value) => acceptOrReject(value, record)} buttonStyle=\"solid\">\n                <Radio.Button value=\"Complete\">Accept</Radio.Button>\n                <Radio.Button value=\"Rejected\">Reject</Radio.Button>\n                </Radio.Group>\n            ),\n        },\n        {\n            title: 'Comment',\n            dataIndex: 'comment',\n            key: 'comment',\n            render: (text,record, index) => ( \n            (<div style={{ marginLeft: 4, flexGrow: 100 }}>\n                <Paragraph style={{ width: \"100%\" }} editable={{ onChange: (value) => addComment(value, record) }}>{record.comment}</Paragraph>\n            </div>))\n           \n        },\n    ];\n    \n    return (\n        <div>\n           <Table columns={columns} dataSource={rows} />\n        </div>\n    );\n};\nexport default OrgClearanceTable;","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Form, Input, Button} from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport { addAlert } from '../actionCreators.js';\nimport { useDispatch } from 'react-redux';\nimport './NewEmail.css';\n\nconst { TextArea } = Input;\n\nconst { Title } = Typography;\n\nfunction NewEmail({orgId}) {\n    const [members, setMembers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [checkedList, setCheckedList] = useState([]); \n    const dispatch = useDispatch();\n    \n    const getMembers = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-members/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            response.data.forEach(member => member.key = member.id);\n            setMembers(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        if (orgId) {\n            getMembers(orgId);\n        }\n    }, [getMembers, orgId]);\n\n    const onChange = useCallback((_selectedRowKeys, selectedRows) => {\n        setCheckedList(selectedRows);\n    }, []);\n\n    \n    const columns = [\n        {\n            title: 'First',\n            dataIndex: ['user', 'first_name'],\n            key: 'first',\n            width: '25%',\n        },\n        {\n            title: 'Last',\n            dataIndex: ['user', 'last_name'],\n            key: 'last',\n            width: '25%',\n        },\n        {\n            title: 'Email',\n            dataIndex: ['user', 'email'],\n            key: 'email',\n            width: '25%',\n        },\n        {\n            title: 'Role',\n            dataIndex: 'role',\n            key: 'role',\n            render: (_, record) => (\n                record.member_type === 1 ? \"Admin\" : \"Member\"\n            ),\n            width: '25%',\n        },\n    ];\n\n    const onFinish = useCallback(async (values) => {\n        console.log(checkedList)\n        try {\n            await axiosAPI.post(\"member/email/\", {\n                subject: values.subject,\n                body: values.body,\n                membersList: checkedList,\n            });\n            dispatch(addAlert('Email sent', 'success'));\n        }\n        catch {\n            dispatch(addAlert('Email not sent', 'error'));\n        }\n    }, [dispatch, checkedList]);\n\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Email members</Title>\n\n            <Table \n                className = \"member-table\"\n                rowSelection={{ onChange }}\n                columns={columns} \n                dataSource={members} \n                loading={loading}/>  \n\n            <Form\n                name=\"org\"\n                className=\"org-form\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}> \n\n                <Form.Item\n                    name=\"subject\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Email subject is required.' }]}\n                >\n                    <Input placeholder=\"Email subject\" />\n                </Form.Item>\n            \n                <Form.Item\n                    name=\"body\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Email body is required.' }]}>\n                        <TextArea row={6} style={{ width: '100%' }} placeholder=\"Email body here...\" />\n                </Form.Item>\n\n                <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"org-form-button\">\n                    Send email\n                </Button>\n                </Form.Item>\n\n            </Form>\n        </React.Fragment>\n    );\n};\n\n\nexport default NewEmail;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Button, Popconfirm, Tooltip, message, Select } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\n\nfunction Attendees({orgId}) {\n    const [attendees, setAttendees] = useState([]);\n    const [loading, setLoading] = useState(true);\n    \n    const getAttendees = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"event/get-attendees/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setAttendees(response.data);\n            console.log(attendees); \n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [attendees, orgId]);\n\n    useEffect(() => {\n        getAttendees();\n}, [getAttendees, attendees]);\n\n    const columns = [\n        {\n            title: 'Upcoming Event',\n            dataIndex: 'events__name',\n            key: 'events__name',\n        },\n        {\n            title: 'Attendees',\n            dataIndex: 'count',\n            key: 'count',\n        },\n        {\n            title: 'Cap',\n            dataIndex: 'events__attendee_cap',\n            key: 'events__attendee_cap',\n        },\n    ];\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Attendees</Title>\n            <Table \n                columns={columns}\n                dataSource={attendees} \n                loading={loading}\n                expandedRowRender= {record => \n                    <p>\n                        <b>Event Details</b><br/>\n                        Name: {record.events__name}<br/>\n                        Location: {record.events__location}<br/>\n                        Date: {(new Date(record.events__begindate)).toLocaleString('en-US', options)} - {(new Date(record.events__enddate)).toLocaleString('en-US', options)}<br/><br/>\n                        \n                        <b>Attendes: </b>\n                        {record.attendees}\n                    </p>\n                }/>\n        </React.Fragment>\n    );\n};\n\n\nexport default Attendees;","import React, {useState, useEffect} from 'react';\nimport { Typography, Tabs } from 'antd';\nimport QAndAPage from './QAndAPage';\nimport OrgEvents from './OrgEvents';\nimport AboutUs from './AboutUs';\nimport MemberPage from './MemberPage';\nimport OrgFeedback from './OrgFeedback'; \nimport Analytics from './Analytics'; \nimport InvitePage from './InvitePage'; \nimport Clearances from './Clearances';\nimport OrgClearanceTable from './OrgClearanceTable'\nimport NewEmail from './NewEmail'\nimport Attendees from './Attendees';\nimport \"./OrgPage.css\";\n// import EventLandingPage from './EventLandingPage';\n\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nfunction OrgPage({member, orgId}) {\n    const [org, setOrg] = useState(null);\n    const [activeKey, setActiveKey] = useState(\"home\");\n    const isAdmin = member?.member_type === 1;\n\n    useEffect(() => {\n        if (orgId) {\n            if (member) {\n                setOrg(member.organization);\n            }\n            setActiveKey(\"home\")\n        }\n    }, [setActiveKey, orgId, member]);\n\n    return (\n        <React.Fragment>\n            {org && <Title style={{ textAlign: \"center\" }} level={2}>{org.name}</Title>}\n            <Tabs activeKey={activeKey} onChange={setActiveKey} style={{ height: \"100%\" }}>\n                <TabPane tab=\"Home\" key=\"home\" style={{ height: \"100%\" }}>\n                    <AboutUs org={org} />\n                </TabPane>\n                <TabPane tab=\"Events\" key=\"events\">\n                    <OrgEvents orgId={orgId} viewmore={false} eventId={-1}/>\n                </TabPane>\n                {isAdmin &&\n                <TabPane tab=\"Attendees\" key=\"attendees\">\n                    <Attendees orgId={orgId} />\n                </TabPane>\n                }\n                <TabPane tab=\"FAQ\" key=\"faq\">\n                    <QAndAPage isAdmin={isAdmin} orgId={orgId} />\n                </TabPane>\n                <TabPane tab=\"Feedback\" key=\"feedback\">\n                    <OrgFeedback isAdmin={member?.member_type} orgId={orgId} />\n                </TabPane>\n                <TabPane tab=\"Clearances\" key=\"clearance\">\n                    <Clearances isAdmin={isAdmin} orgId={orgId} />\n                </TabPane>\n                {isAdmin &&\n                <TabPane tab=\"Analytics\" key=\"analytics\">\n                    <Analytics orgId={orgId} />\n                </TabPane>\n                }\n                {isAdmin &&\n                    <TabPane tab=\"Clearance Table\" key=\"clearance_table\">\n                        <OrgClearanceTable orgId={orgId} />\n                    </TabPane> \n                }\n                {isAdmin &&\n                     <TabPane tab=\"Members\" key=\"members\">\n                        <MemberPage orgId={orgId} />\n                    </TabPane>\n                }\n                {isAdmin &&\n                     <TabPane tab=\"Invites\" key=\"invites\">\n                        <InvitePage orgId={orgId} />\n                    </TabPane>\n                }\n                {isAdmin &&\n                    <TabPane tab=\"Communication\" key=\"member_emails\">\n                        <NewEmail orgId={orgId} />\n                    </TabPane> \n                }\n            </Tabs>\n        </React.Fragment>\n    );\n    \n};\n\n\nexport default OrgPage;","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerEventLeaderboard({ data}) {\n\n    const columns = [\n        {\n            title: 'Event',\n            dataIndex: 'event__name',\n            key: 'event__name',\n        },\n        {\n            title: 'Nonprofit',\n            dataIndex: 'event__organizations__name',\n            key: 'event__organizations__name',\n        },\n        {\n            title: 'Rating',\n            dataIndex: 'overall',\n            key: 'overall',\n            sorter: (a, b) => a.overall - b.overall,\n            defaultSortOrder: 'descend',\n        },\n        {\n            title: 'Satisfaction',\n            dataIndex: 'satisfaction',\n            key: 'satisfaction',\n            sorter: (a, b) => a.satisfaction - b.satisfaction,\n            defaultSortOrder: 'descend',\n        },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Event Leaderboard</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default VolunteerEventLeaderboard;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction NonprofitBreakdown({ data}) {\n\n    const columns = [\n        {\n            title: 'Nonprofit',\n            dataIndex: 'events__organizations__name',\n            key: 'events__organizations__name',\n        },\n        {\n            title: 'Events',\n            dataIndex: 'count',\n            key: 'count',\n            sorter: (a, b) => a.count - b.count,\n            defaultSortOrder: 'descend',\n        },\n        {\n            title: 'Hours',\n            dataIndex: 'hours',\n            key: 'hours',\n            sorter: (a, b) => a.hours - b.hours,\n            defaultSortOrder: 'descend',\n        },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Nonprofit Breakdown</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                expandedRowRender = {record => <p style={{ margin: 0 }}><b>Events Attended: </b>{record.events}</p>}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default NonprofitBreakdown;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerSummary({ data}) {\n\n    const columns = [\n        {\n            title: '',\n            dataIndex: 'label',\n            key: 'label',\n            ellipsis: true,\n            render: (text: string) => <b>{text}</b>,\n        },\n        {\n          title: 'Nonprofits',\n          dataIndex: 'nonprofits',\n          key: 'nonprofits',\n          ellipsis: true,\n        },\n        {\n          title: 'Events',\n          dataIndex: 'events',\n          key: 'events',\n          ellipsis: true,\n        },\n        {\n            title: 'Hours',\n            dataIndex: 'hours',\n            key: 'hours',\n            ellipsis: true,\n          },\n      ];\n\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Volunteer Breakdown</Typography.Title>\n            <Table \n                dataSource={data} \n                columns={columns}\n                expandedRowRender = {record => \n                    <p style={{ margin: 0 }}>\n                        <b>Nonprofits: </b>{record.nonprofits_list}<br/>\n                        <b>Events: </b>{record.events_list}<br/>\n                    </p>\n                }\n                pagination={false}\n            />\n            <br/>\n            <br/>\n        </React.Fragment>\n    )\n\n\n} export default VolunteerSummary;","import React, {useState, useEffect, useCallback} from 'react';\nimport {Typography} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\nimport VolunteerEventLeaderboard from '../components/VolunteerEventLeaderboard';\nimport NonprofitBreakdown from '../components/NonprofitBreakdown';\nimport VolunteerSummary from '../components/VolunteerSummary';\n\nconst VolunteerAnalytics = () => {\n\n    const user = localStorage.getItem(\"user_id\");\n\n    const [summary, setSummary] = useState([]);\n    \n    const getSummary = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-summary/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setSummary(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n            getSummary();\n    }, [getSummary, summary]);\n\n    const [nonprofits, setNonprofits] = useState([]);\n    \n    const getNonprofits = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/nonprofit-breakdown/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setNonprofits(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n            getNonprofits();\n    }, [getNonprofits, nonprofits]);\n\n    const [events, setEvents] = useState([]);\n    \n    const getEvents = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-event-leaderboard/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setEvents(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n            getEvents();\n    }, [getEvents, events]);\n      \n\n    return (\n      <React.Fragment>\n            <Typography.Title level={2}>Analytics</Typography.Title>\n            <VolunteerSummary data={summary}/>\n            <NonprofitBreakdown data={nonprofits}/>\n            <VolunteerEventLeaderboard data={events}/> \n        </React.Fragment>\n    );\n};export default VolunteerAnalytics;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport { Calendar, Typography , Button, Popover, message} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nconst { Paragraph } = Typography;\n\nfunction VolunteerCalendarCard ({item}){\n    const [vis, setVisible] = useState([false]); \n    const [isLoading, setIsLoading] = useState(false);\n\tconst [viewmore, setViewmore] = useState(false);\n\tconst [attendeeCount, setAttendeeCount] = useState(0);\n    \n    const toggleVisible = () => {\n        setVisible(!vis);\n    };\n\n    const onClick = useCallback(async (event_id) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tawait axiosAPI.post(\"attendees/delete/\", {\n\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\tevent: event_id,\n\t\t\t});\n\t\t\tmessage.success(\"Unjoined event\")\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = \"Unjoin failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, []);\n\n    const onClickViewmore = useCallback(async (viewmore) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tconst response = await axiosAPI.get(\"events/get-event-attendee-count/\", {\n                params: {\n\t\t\t\t\tevent: item.events__id\n                }\n\t\t\t});\n\t\t\tsetAttendeeCount(response.data);\n\t\t\tsetViewmore(!viewmore);\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = \"Viewmore failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, []);\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    const begindate = new Date(item.events__begindate)\n\tconst enddate = new Date(item.events__enddate)\n    const virtual = item.events__virtual ? \"Yes.\" : \"No.\";\n    \n    if (viewmore) {\n    \treturn (\n\t\t\t<Popover \n                content={\n                    <div>\n                        <Typography.Title level={4}>{item.events__name}</Typography.Title>\n                        <Paragraph><b>Location: </b>{item.events__location}</Paragraph>\n                        <Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n                        <Paragraph><b>Description: </b>{item.events__description}</Paragraph>\n                        <Paragraph><b>Virtual? </b>{virtual}</Paragraph>\n                        <Paragraph><b>Instructions: </b>{item.events__instructions}</Paragraph>\n                        <Paragraph><b>No. of Attendees: </b>{attendeeCount}/{item.events__attendee_cap}</Paragraph>\n                        <p style={{color: '#1890ff'}}>>><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(viewmore)}>\n                            View Less\n                        </Button></p>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.events__id)} loading={isLoading}>\n                            Unjoin\n                        </Button>\n                        <a onClick={toggleVisible}>\n                            Close\n                        </a>\n                    </div>}\n                trigger=\"click\"\n                visible={!vis}\n            >\n                <Button type=\"link\" className=\"event-viewmore-form-button\" onClick={toggleVisible}>\n                    > {item.events__name}\n                </Button>\n            </Popover>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Popover \n                content={\n                    <div>\n                        <Typography.Title level={4}>{item.events__name}</Typography.Title>\n                        <Paragraph><b>Location: </b>{item.events__location}</Paragraph>\n                        <Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n                        <Paragraph><b>Description: </b>{item.events__description.substring(0, 50)}...</Paragraph>\n                        <p style={{color: '#1890ff'}}>>><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(viewmore)}>\n                            View More\n                        </Button></p>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.events__id)} loading={isLoading}>\n                            Unjoin\n                        </Button>\n                        <a onClick={toggleVisible}>\n                            Close\n                        </a>\n                    </div>}\n                trigger=\"click\"\n                visible={!vis}\n            >\n                <Button type=\"link\" className=\"event-viewmore-form-button\" onClick={toggleVisible}>\n                    > {item.events__name}\n                </Button>\n            </Popover>\n\t\t);\n\t}\n\t\n\n\n} export default VolunteerCalendarCard; \n\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Calendar, Typography , Button, Popover} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport VolunteerCalendarCard from './VolunteerCalendarCard';\n\nconst VolunteerCalendar = () => {\n    const [events, setEvents] = useState([]); \n\n    const getVolunteerEvents = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"attendees/get-volunteer-events/\", {\n                params: {\n                    user_id: localStorage.getItem(\"user_id\"),\n                }\n            });\n            setEvents(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, []);\n\n    useEffect(() => {\n        getVolunteerEvents();\n    }, []);\n\n    function getListData(value) {\n        let listData;\n        listData = events.filter(events => {\n            const bdate = new Date(events.events__begindate);\n            const edate = new Date(events.events__enddate);\n\n            return ((value.month() <= edate.getMonth() && value.month() >= bdate.getMonth())\n                && (value.date() <= edate.getDate() && value.date() >= bdate.getDate()));\n        })\n        return listData || [];\n    }\n\n    function getMonthData(value) {\n        let monthData;\n        monthData = events.filter(events => {\n            const bdate = new Date(events.events__begindate);\n            const edate = new Date(events.events__enddate);\n\n            return ((value.month() <= edate.getMonth() && value.month() >= bdate.getMonth()));\n        })\n\n        return monthData || [];\n    }\n\n    function dateCellRender(value) {\n        const listData = getListData(value);\n        return (\n          <ul className=\"events\">\n            {listData.map((item, i) => (\n                <li key={i}>\n                    <VolunteerCalendarCard key={i} item={item}/>\n                </li>\n            ))}\n          </ul>\n        );\n      }\n\n    function monthCellRender(value) {\n        const monthData = getMonthData(value);\n        return (\n            <ul className=\"events\">\n            {monthData.map((item, i) => (\n                <li key={i}>\n                    <VolunteerCalendarCard key={i} item={item}/>\n                </li>\n            ))}\n          </ul>\n        );\n      }\n\n    return (\n        <div align=\"center\">\n            <Typography.Title level={2}>View My Events</Typography.Title>\n            <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\n        </div>\n    );\n};\n\nexport default VolunteerCalendar;  \n\n","import React from \"react\";\nimport NewOrg from \"../pages/NewOrg\";\nimport Settings from \"../pages/Settings\";\nimport Event from \"../pages/Event\";\nimport NewEvent from \"../pages/NewEvent\";\nimport OrgPage from \"../pages/OrgPage\"\nimport VolunteerAnalytics from \"../pages/VolunteerAnalytics\"\nimport VolunteerCalendar from \"../pages/VolunteerCalendar\"\n\n\nconst FeedContent = ({member, context}) => {\n    switch(context) {\n        case \"create-org\":\n            return (<NewOrg />);\n        case \"find\":\n            return (<Event />);\n        case \"settings\":\n            return (<Settings />);\n        case \"create-event\":\n            return (<NewEvent />);\n        case \"calendar\":\n            return (<VolunteerCalendar />); \n        case \"view-analytics\":\n            return (<VolunteerAnalytics />); \n        default:\n            const orgId = parseInt(context)\n            if (isNaN(orgId)) {\n                return (<NewOrg />);\n            } else {\n                const orgMember = member.filter(m => m.organization.id === orgId)[0]\n                return <OrgPage member={orgMember} orgId={orgId}/>\n            } \n    }\n  }\n  \n  export default FeedContent;","import React, { useState, useCallback, useEffect } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { Alert, Layout } from 'antd';\nimport { removeAlert } from '../actionCreators.js';\nimport Sidebar from \"../components/Sidebar\";\nimport FeedContent from \"../components/FeedContent\";\nimport axiosAPI from '../api/axiosApi';\n\nconst { Content, Sider } = Layout;\n\nconst Feed = () => {\n  const [context, setContext] = useState([]);\n  const [member, setMember] = useState([]);\n  const [selectedKeys, setSelectedKeys] = useState([]);\n  const setContextFromSidebar = (newContext) => {\n    setContext(newContext);\n  }\n  const alerts = useSelector(state => state.alerts, shallowEqual);\n  const dispatch = useDispatch();\n\n  const onClose = useCallback((id) => {\n    setTimeout(() => dispatch(removeAlert(id)), 500);\n  }, [dispatch]);\n\n  const alertList = alerts.map(alert => \n    <Alert\n      key={alert.id}\n      type={alert.alert_type}\n      message={alert.message}\n      banner\n      closable\n      onClose={() => onClose(alert.id)}\n    />\n  );\n\n  const getMember = useCallback(async () => {\n    try {\n         const response = await axiosAPI.get(\"user/get-member/\", {\n             params: {\n                 user_id: localStorage.getItem(\"user_id\"), \n             }\n         });\n        const member = response.data;\n        if (member.length > 0) {\n            setMember(member)\n            setSelectedKeys([member[0]?.organization?.id.toString()])\n        } else {\n            setSelectedKeys([\"create\"])\n        }\n    } catch(error) {\n        console.error(error);\n    }\n  }, [setSelectedKeys, setMember])\n\n  useEffect(() => {\n    getMember()\n  }, [getMember]);\n\n  return (\n    <Layout style={{ minHeight:\"100vh\" }}>\n      <Sider width={240} style={{ background: '#fff' }}>\n        <Sidebar selectedKeys={selectedKeys} setSelectedKeys={setSelectedKeys} member={member} setFeedContext={setContextFromSidebar}/>\n      </Sider>\n      <Layout>\n        {alertList}\n        <Layout style={{ padding: '24px', height: \"100%\"  }}>\n          <Content style={{ background: '#fff', padding: 24, margin: 0, display: \"flex\", flexDirection: \"column\" }}>\n            <FeedContent member={member} context={context}/>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Feed;","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport { LockOutlined } from '@ant-design/icons';\nimport { registerFromInvite } from '../api/authenticationApi';\nimport \"antd/dist/antd.css\";\nimport \"./AuthForm.css\"\n\n\nconst InviteAuthForm = ({invite}) => {\n    const history = useHistory();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await registerFromInvite(invite.email, values.first_name, values.last_name, values.password, invite.id)\n            history.push('/login')\n        } catch (error) {\n            console.error(error)\n        }\n    }, [history, invite]);\n\n  return (\n    <React.Fragment>\n        <Form\n            name=\"auth\"\n            className=\"auth-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >  \n            <Form.Item>\n                <Input.Group compact>\n                    <Form.Item\n                        name=\"first_name\"\n                        noStyle\n                        rules={[{ required: true, message: 'First name is required' }]}\n                    >\n                        <Input style={{ width: '50%' }} placeholder=\"First name\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"last_name\"\n                        noStyle\n                        rules={[{ required: true, message: 'Last name is required' }]}\n                    >\n                        <Input style={{ width: '50%' }} placeholder=\"Last name\" />\n                    </Form.Item>\n                </Input.Group>\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Password is a required field.' },\n                    { min: 12, message: \"Password must be at least 12 characters long.\"},\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n            </Form.Item>\n            <Form.Item\n                name=\"confirm\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Please confirm your password.' },\n                    ({ getFieldValue }) => ({\n                        validator(rule, value) {\n                            if (!value || getFieldValue('password') === value) {\n                            return Promise.resolve();\n                            }\n                            return Promise.reject('Passwords do not match.');\n                        },\n                    }),\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\">\n                    Create Account\n                </Button>\n            </Form.Item>\n        </Form>\n    </React.Fragment>\n  );\n};\n\nexport default InviteAuthForm;","import React, { useCallback } from 'react';\nimport { Layout, Typography, Button, Space, Skeleton } from 'antd';\nimport InviteAuthForm from '../forms/InviteAuthForm';\nimport { isAuthenticated } from '../api/authenticationApi';\nimport { useHistory } from 'react-router-dom';\nimport LoginLogo from '../assets/login.svg';\nimport RegisterLogo from '../assets/register.svg';\nimport axiosAPI from '../api/axiosApi';\nimport './Auth.css';\n\nconst InviteAuth = ({isRegister, invite, user}) => {\n    const title = `Join ${invite?.organization?.name ?? \"Organization\"}`;\n    const info = `${isRegister ? \"Welcome!\" : \"Hey there!\"} You've been invited to join ${invite?.organization?.name ?? \"a new organization\"} on VolunteerSense.\n    ${isRegister ? \"Get started my making an account.\" : \"Do you want to join this organization?\"}`;\n    const history = useHistory();\n    const logo = isRegister ? RegisterLogo: LoginLogo;\n\n    const acceptInvite = useCallback(async () => {\n        try {\n            const response = await axiosAPI.post(\"invite/accept/\", {\n                invite_id: invite.id,\n                user_id: user.id\n            });\n            history.push(\"/login\")\n        } catch (error) {\n            console.error(error);\n        }\n    }, [user, invite]);\n\n    const declineInvite = useCallback(async () => {\n        try {\n            const response = await axiosAPI.delete(\"invite/reject/\", {\n                params: {\n                    invite_id: invite.id,\n                }\n            });\n            history.push(\"/login\")\n        } catch (error) {\n            console.error(error);\n        }\n    }, [user, invite]);\n\n    return (\n        <Layout style={{ height: \"100vh\" }}>\n            <Layout.Content className=\"auth-content\">\n                <div className='auth-container'>\n                    <Skeleton active loading={!invite} paragraph={false}>\n                        <Typography.Title level={2}>{title}</Typography.Title>\n                    </Skeleton>\n                    <Skeleton active loading={!invite} title={false}>\n                        <Typography.Paragraph level={2}>{info}</Typography.Paragraph>\n                    </Skeleton>\n                    <img \n                        className=\"auth-logo\"\n                        src={logo} \n                        alt={title + \" logo\"}\n                    />\n                    {isRegister ? \n                        (\n                            <InviteAuthForm invite={invite}/>\n                        ) :\n                        (\n                            <Space style={{ width: '100%'}}>\n                                <Button style={{ width: 196 }} type=\"primary\" onClick={acceptInvite}>Join</Button>\n                                <Button style={{ width: 196 }} type=\"primary\" danger onClick={declineInvite}>Decline Invitation</Button>\n                            </Space>\n                        )\n                    }\n                </div>\n            </Layout.Content>\n        </Layout>\n    );\n};\n\n\nexport default InviteAuth;","import React, {useState, useEffect, useCallback} from 'react';\nimport { Result, Button, Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\nimport InviteAuth from '../pages/InviteAuth';\n\nconst AuthState = {\n    LOADING: 1,\n    NEW_USER: 2,\n    RETURNING_USER: 3,\n    FAILURE: 4\n };\n\nconst InviteNoAuth = () => {\n\n    const [loadingState, setLoadingState] = useState(AuthState.LOADING); \n    const [user, setUser] = useState(null);\n    const [invite, setInvite] = useState(null);\n\n    useEffect(() => {\n        validate();\n    }, []);\n\n    const validate = useCallback(async () => {\n        try {\n            const queryString = window.location.search;\n            const params = queryString.split(/[?&=]/);\n            var token = \"\";\n            for (var i = 0; i < params.length - 1; i++) {\n                if (params[i] === \"rt\") {\n                    token = params[i+1];\n                    break;\n                }\n            }\n            if (token !== \"\") {\n                const url = `invite/validate/${queryString}`;\n                const response = await axiosAPI.get(url);\n                if (response.status === 200) {\n                    console.log(response.data.user)\n                    if (response.data.user.email !== \"\") {\n                        setLoadingState(AuthState.RETURNING_USER);\n                        setUser(response.data.user)\n                    } else {\n                        setLoadingState(AuthState.NEW_USER);\n                    }\n                    setInvite(response.data.invite)\n                } else {\n                    setLoadingState(AuthState.FAILURE);\n                }\n            }\n            else {\n                setLoadingState(AuthState.FAILURE);\n            }\n        } catch (error) {\n            setLoadingState(AuthState.FAILURE);\n        }\n    }, [setLoadingState])\n\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n    switch(loadingState) {\n        case AuthState.FAILURE:\n            return (\n                <Result\n                    status=\"error\"\n                    title=\"Failed to join organization\"\n                    subTitle=\"Your invitation token may be expired, or otherwise invalid. Contact the group administrator to receive another invitation.\"\n                    extra={[\n                        <Button key=\"home\" href=\"/\">Return home</Button>,\n                    ]}\n                />\n            );\n        case AuthState.LOADING:\n            return (\n                <Spin indicator={antIcon} />\n            );\n        default:\n            return (\n                <InviteAuth isRegister={loadingState === AuthState.NEW_USER} invite={invite} user={user}/>\n            );\n    }\n\n}\n\nexport default InviteNoAuth;\n","import React, {useState, useEffect} from 'react';\nimport { Result, Button, Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\n\nconst AuthState = {\n    LOADING: 1,\n    SUCCESS: 2,\n    FAILURE: 3\n };\n\nconst Activate = () => {\n\n    const [loadingState, setLoadingState] = useState(AuthState.LOADING); \n\n    useEffect(() => {\n        activate();\n    }, []);\n\n    const activate = async () => {\n        try {\n            const queryString = window.location.search;\n            const url = `users/activate/${queryString}`;\n            await axiosAPI.get(url);\n            setLoadingState(AuthState.SUCCESS);\n        } catch (error) {\n            setLoadingState(AuthState.FAILURE);\n        }\n    }\n\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n    switch(loadingState) {\n        case AuthState.SUCCESS:\n            return (\n                <Result\n                    status=\"success\"\n                    title=\"Successfully activated account\"\n                    extra={[\n                        <Button type=\"primary\" key=\"login\" href=\"/login\">\n                            Login\n                        </Button>,\n                        <Button key=\"home\" href=\"/\" >Return home</Button>,\n                    ]}\n                />\n            );\n        case AuthState.FAILURE:\n            return (\n                <Result\n                    status=\"error\"\n                    title=\"Failed to activate account\"\n                    subTitle=\"Your activation token may be expired, or otherwise invalid.\"\n                    extra={[\n                        <Button type=\"primary\" key=\"resend\" href=\"/\">\n                            Resend confirmation email\n                        </Button>,\n                        <Button key=\"home\" href=\"/\">Return home</Button>,\n                    ]}\n                />\n            );\n        default:\n            return (\n                <Spin indicator={antIcon} />\n            );\n    }\n\n}\n\nexport default Activate;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button, Radio} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport { useDispatch } from 'react-redux';\nimport { addAlert } from '../actionCreators.js';\nimport \"antd/dist/antd.css\";\nimport \"./EventFeedbackForm.css\"\n\nconst {TextArea} = Input;\n\nconst EventFeedbackForm = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        setIsLoading(true);\n        try {\n            await axiosAPI.post(\"eventFeedback/create/\", {\n                id: new URLSearchParams(window.location.search).get('attendee_id'),\n                overall: values.overall,\n                satisfaction: values.satisfaction,\n                likely: values.likely,\n                expectations: values.expectations,\n                future: values.future,\n                better:values.better,\n                experience:values.experience,\n            });\n            console.log('here feedback'); \n            dispatch(addAlert('Feedback submitted', 'success'));\n        }\n        catch {\n            dispatch(addAlert('Feedback submission failed', 'error'));\n        }\n        setIsLoading(false);\n    }, [dispatch]);\n\n    const [info, setInfo] = useState([]);\n\n    useEffect(() => {\n        getInfo();\n    }, []);\n\n    const getInfo = async () => {\n        try{\n            const response = await axiosAPI.get(\"event/get-event-by-id/\", {\n                 params: {\n                     attendee_id: new URLSearchParams(window.location.search).get('attendee_id'),  \n                 }\n             });\n            setInfo(response.data[0]); \n        } catch (error) {\n            console.error(error)\n        }\n    } \n\n    const options = [\n        { label: 'Poor', value: 1},\n        { label: 'Fair', value: 2 },\n        { label: 'Average', value: 3},\n        { label: 'Good', value: 4},\n        { label: 'Excellent', value: 5},\n    ];\n\n    const s_options = [\n        { label: 'Very Dissatisfied', value: 1},\n        { label: 'Dissatisfied', value: 2},\n        { label: 'Neutral', value: 3},\n        { label: 'Satisfied', value: 4},\n        { label: 'Very Satisfied', value: 5},\n    ];\n    const l_options = [\n        { label: 'Very Unlikely', value: 1},\n        { label: 'Somewhat Unlikely', value: 2},\n        { label: 'Neutral', value: 3},\n        { label: 'Somewhat Likely', value: 4},\n        { label: 'Very Likely', value: 5},\n    ];\n    const yn_options = [\n        { label: 'Yes', value: 'Yes'},\n        { label: 'No', value: 'No'},\n    ];\n\n    const date_options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n  return (\n\n     <Form\n        name=\"event-feedback\"\n        className=\"event-feedback-form\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n    >\n\n        <p>\n            <strong>Name: </strong>{info.username__first_name} {info.username__last_name}<br/>\n            <strong>Email: </strong>{info.username__email}<br/>\n            <strong>Organization: </strong> {info.events__organizations__name}<br/>\n            <strong>Event: </strong>{info.events__name} <br/>\n            <strong>Location: </strong>{info.events__location}<br/>\n            <strong>Date: </strong>{(new Date(info.events__begindate)).toLocaleString('en-US', date_options)} - {(new Date(info.events__enddate)).toLocaleString('en-US', date_options)}<br/>\n        </p>\n        \n\n        <p>How would you rate your overall experience?</p>\n        <Form.Item\n            name=\"overall\"\n            hasFeedback\n            rules={[{ required: true, message: 'Overall experience rating required.' }]}\n        >\n        <Radio.Group\n              options={options}\n              optionType=\"button\"\n              buttonStyle=\"solid\"\n        />\n        </Form.Item>\n        <p>How satisfied did you feel after volunteering?</p>\n        <Form.Item\n            name=\"satisfaction\"\n            hasFeedback\n            rules={[{ required: true, message: 'Satisfiaction rating required.' }]}\n        >\n        <Radio.Group\n              options={s_options}\n              optionType=\"button\"\n              buttonStyle=\"solid\"\n        />\n        </Form.Item>\n        <p>How likely are you to recommend future volunteer opportunities to your friends?</p>\n        <Form.Item\n            name=\"likely\"\n            hasFeedback\n            rules={[{ required: true, message: 'Recommend rating required.' }]}\n        >\n        <Radio.Group\n              options={l_options}\n              optionType=\"button\"\n              buttonStyle=\"solid\"\n        />\n        </Form.Item>\n        <p>Did the experience meet your expectations?</p>\n        <Form.Item\n            name=\"expectations\"\n            hasFeedback\n            rules = {[{ required: true, message: 'Expectations rating required.' }]}>\n        <Radio.Group options={yn_options}/>\n        </Form.Item>\n        <p>Do you plan to volunteer with us again in the future?</p>\n        <Form.Item\n            name=\"future\"\n            hasFeedback\n            rules = {[{ required: true, message: 'Future rating required.' }]}>\n        <Radio.Group options={yn_options}/>\n        </Form.Item>\n        <p>What could we have done better?</p>\n        <Form.Item\n            name=\"better\"\n            hasFeedback\n        >\n            <TextArea row={6} style={{ width: '100%' }} placeholder=\"Response here\" />\n        </Form.Item>\n        <p>Is there anything else we should know about your volunteer experience?</p>\n        <Form.Item\n            name=\"experience\"\n            hasFeedback        >\n            <TextArea row={6} style={{ width: '100%' }} placeholder=\"Response here\" />\n        </Form.Item>\n         <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"event-feedback-form-button\" loading={isLoading}>\n                Submit feedback\n            </Button>\n        </Form.Item>\n    </Form>\n  );\n};\n\n\nexport default EventFeedbackForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport EventFeedbackForm from '../forms/EventFeedbackForm';\nimport './EventFeedback.css';\n\nconst EventFeedback = () => {\n    return (\n      <div className='event-feedback-container'>\n            <Typography.Title level={2}>Event Feedback</Typography.Title>\n            <EventFeedbackForm /> \n        </div>\n    );\n};\n\n\nexport default EventFeedback;  \n\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { isAuthenticated } from './api/authenticationApi';\nimport Auth from './pages/Auth';\nimport Home from './pages/Home/Home';\nimport Feed from './pages/Feed';\nimport InviteNoAuth from './pages/InviteNoAuth';\nimport Activate from './pages/Activate';\n// import ForgotPassword from './pages/ForgotPassword';\nimport EventFeedback from './pages/EventFeedback'\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <main>\n      <Switch>\n          <Route exact path=\"/\" \n            render={() =>\n              isAuthenticated() ? (\n                <Feed/>\n              ) : (\n                <Home/>\n              )\n            }\n          />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/activate\" component={Activate} />\n          <Route path=\"/invite\" component={InviteNoAuth} />\n          <Route path=\"/feedback\" component={EventFeedback} />\n      </Switch> \n  </main>\n  );\n}\n\n\nconst Register = () => <Auth isRegister={true}/>;\nconst Login = () => <Auth isRegister={false}/>;\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport ReactGA from 'react-ga';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\nReactGA.initialize('UA-189701909-1');\n\nReactDOM.render(\n  <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter> \n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}