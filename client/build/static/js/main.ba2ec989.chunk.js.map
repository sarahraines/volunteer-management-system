{"version":3,"sources":["assets/login.svg","assets/register.svg","assets/landing.svg","assets/volunteersense.png","reducers.js","api/axiosApi.js","api/authenticationApi.js","actionCreators.js","pages/Home/Home.jsx","forms/AuthForm.jsx","utils/googleAnalytics.js","pages/Auth.jsx","pages/Home/utils.js","pages/Home/Nav3.jsx","pages/Home/Banner5.jsx","pages/Home/Feature0.jsx","pages/Home/Footer2.jsx","pages/Home/data.source.js","components/Sidebar.jsx","forms/NewOrgForm.jsx","pages/NewOrg.jsx","forms/ProfileForm.jsx","pages/ProfileSettings.jsx","forms/ResetPasswordForm.jsx","pages/SecuritySettings.jsx","forms/UserNotificationsForm.jsx","pages/UserNotifications.jsx","pages/Settings.jsx","forms/NewEventForm.jsx","pages/NewEvent.jsx","components/QAndA.jsx","pages/QAndAPage.jsx","components/EventCard.jsx","pages/OrgEvents.jsx","pages/AboutUs.jsx","pages/MemberPage.jsx","pages/OrgFeedback.jsx","components/NonprofitFunnel.jsx","components/VolunteerLeaderboard.jsx","components/EventLeaderboardPlots.jsx","components/EventLeaderboard.jsx","components/VolunteerBreakdown.jsx","pages/Analytics.jsx","pages/InvitePage.jsx","components/StatusTag.jsx","pages/UserFilesTable.jsx","components/ClearanceUpload.jsx","pages/Clearances.jsx","pages/OrgClearanceTable.jsx","pages/ManageVolunteerClearances.jsx","pages/NewEmail.jsx","pages/Attendees.jsx","pages/OrgPage.jsx","components/VolunteerEventLeaderboard.jsx","components/NonprofitBreakdown.jsx","components/VolunteerSummary.jsx","components/VolunteerGoals.jsx","pages/VolunteerAnalytics.jsx","pages/VolunteerCalendarCard.jsx","pages/VolunteerCalendar.jsx","forms/NewGoalForm.jsx","pages/NewGoal.jsx","components/FeedContent.jsx","pages/Feed.jsx","forms/InviteAuthForm.jsx","pages/InviteAuth.jsx","pages/InviteNoAuth.jsx","pages/Activate.jsx","forms/EventFeedbackForm.jsx","pages/EventFeedback.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","rootReducer","combineReducers","alerts","state","action","type","concat","filter","alert","id","baseURL","process","accessToken","localStorage","getItem","axiosInstance","axios","create","timeout","headers","interceptors","response","use","a","error","originalRequest","config","status","url","window","location","href","Promise","reject","data","code","refresh_token","post","refresh","setItem","access","defaults","setNewHeaders","user_id","axiosRetry","retries","retryDelay","Math","random","retryCondition","isRetryableError","register","email","firstName","lastName","password","axiosAPI","first_name","last_name","registerFromInvite","invite_id","console","log","login","reset_password","old_password","new_password","addAlert","message","alert_type","shortid","generate","removeAlert","isMobile","AuthForm","isRegister","history","useHistory","dispatch","useDispatch","onFinish","useCallback","values","push","submitButtonText","switchAuthPages","Fragment","to","name","className","initialValues","remember","Item","Group","compact","noStyle","rules","required","style","width","placeholder","hasFeedback","prefix","MailOutlined","min","LockOutlined","dependencies","getFieldValue","validator","rule","value","resolve","htmlType","usePageView","pageName","useEffect","ReactGA","pageview","makePageView","Auth","title","logo","RegisterLogo","LoginLogo","useSelector","shallowEqual","onClose","setTimeout","alertList","map","key","banner","closable","height","Content","Title","level","src","alt","isImg","getChildrenToRender","item","i","tag","indexOf","children","match","React","createElement","Button","toString","Menu","SubMenu","Header3","props","phoneClick","phoneOpen","setState","undefined","this","dataSource","navChildren","subItem","itemProps","trim","popupClassName","$item","ii","childItem","child","moment","component","animation","opacity","wrapper","page","x","ease","mobileMenu","onClick","duration","onComplete","e","target","reverse","mode","defaultSelectedKeys","theme","Component","Banner5","tagProps","animType","queue","one","y","leaveReverse","childWrapper","componentProps","md","xs","image","PureComponent","titleWrapper","overPackData","OverPack","Row","block","blockProps","Footer2","links","copyright","Nav30DataSource","Banner50DataSource","LandingLogo","Feature00DataSource","playScale","Footer20DataSource","enquireScreen","b","Home","show","port","pathname","Nav3","Feature0","ref","d","dom","Divider","Sidebar","selectedKeys","setSelectedKeys","setFeedContext","member","onSelect","latestSelectedKey","onLogout","removeItem","organizationsList","organization","icon","BulbOutlined","UsergroupAddOutlined","PlusSquareOutlined","CheckSquareOutlined","CalendarOutlined","BarChartOutlined","SettingOutlined","LogoutOutlined","TextArea","Input","NewOrgForm","useState","selectedCauses","setSelectedCauses","causes","setCauses","getCauses","get","filteredCauses","useMemo","o","includes","description","website","phone","address","member_type","success","maxLength","onChange","Option","autoSize","row","NewOrg","Text","Typography","ProfileForm","user","isEditable","setIsEditable","setFirstName","setLastName","setEmail","textPlaceholder","fieldName","fieldValue","marginBottom","span","requiredMark","labelCol","labelAlign","label","transition","hidden","ProfileSettings","setUser","getUser","userId","maxWidth","active","loading","paragraph","rows","ResetPasswordForm","sendForgotPasswordEmail","paddingLeft","paddingRight","SecuritySettings","UserNotificationsForm","text","setText","phone_number","phoneNumber","setPhoneNumber","Form","useForm","form","setFieldsValue","checked","disabled","addonBefore","UserNotifications","TabPane","Tabs","Settings","defaultActiveKey","tab","RangePicker","DatePicker","NewEventForm","isLoading","setIsLoading","selectedOrgs","setSelectedOrgs","orgs","setOrgs","getOrgs","params","filteredOrgs","virtual","organizations","date","instructions","attendee_cap","attendeeCap","valuePropName","checkedChildren","unCheckedChildren","defaultChecked","showTime","format","NewEvent","Paragraph","QAndA","isAdmin","removeFaq","orgId","question","questionStr","setQuestionStr","answer","answerStr","setAnswerStr","is_public","isPublic","setIsPublic","updateQ","newQuestionStr","org_id","updateA","newAnswerStr","updatePublic","newIsPublic","onDelete","delete","marginTop","actions","DeleteOutlined","display","float","verticalAlign","fontWeight","marginLeft","flexGrow","editable","QAndAPage","qA","setQA","getQA","faq","addQAField","EventCard","setRegister","viewmore","setViewmore","event_id","event","errMsg","getRegisterStatus","onClickViewmore","buttonText","options","year","month","day","hour","minute","begindate","Date","enddate","joinButton","attendee_count","bordered","toLocaleString","color","substring","Select","OrgEvents","events","setEvents","filterDisplay","setFilterDisplay","getEventsByOrg","oldList","newList","toLowerCase","handleChange","defaultValue","virtualFilterChange","size","openFilterChange","flexWrap","justifyContent","overflowY","AboutUs","org","inputVisible","setInputVisible","inputValue","setInputValue","inputRef","useRef","getCausesByOrg","handleClose","removedTag","tags","cause","handleInputConfirm","newCauses","length","c","preventDefault","onBlur","onPressEnter","PlusOutlined","MemberPage","members","setMembers","setLoading","currentUser","getMembers","forEach","deleteMember","memberId","member_id","columns","dataIndex","render","_","record","parseInt","danger","onConfirm","okText","cancelText","OrgFeedback","info","setInfo","getFeedbackByOrg","sorter","event__name","localeCompare","username__email","filters","filterMultiple","onFilter","overall","satisfaction","likely","expectations","future","expandedRowRender","event__location","event__begindate","event__enddate","better","experience","NonprofitFunnel","layout","margin","l","VolunteerLeaderboard","defaultSortOrder","count","total","pagination","pageSize","event_list","EventLeaderboard","labels","ratings_arr","satisfactions_arr","likely_arr","expectations_arr","future_arr","attendees","EventLeaderboardPlots","VolunteerBreakdown","ellipsis","rowExpandable","Analytics","funnel","setFunnel","breakdown","setBreakdown","volunteers","setVolunteers","getFunnel","getBreakdown","getVolunteers","getEvents","InvitePage","invites","setInvites","showModal","setShowModal","modalButtonLoading","setModalButtonLoading","invitedMembers","setInvitedMembers","memberType","setMemberType","getInvites","invite","inviteMembers","emails","deleteInvite","inviteId","justify","visible","onOk","onCancel","footer","tokenSeparators","allowClear","statusMap","Complete","Rejected","Pending","None","StatusTag","UserFilesTable","fileList","userFileList","setUserFileList","getUserFiles","files","formattedFiles","file","uid","orgFormId","org_file","filled_form","split","slice","pop","comment","listType","fl","origin","_text","_record","customRequest","formData","FormData","append","onSuccess","UploadOutlined","getUserFileForOrgFile","infoType","oFormId","ufile","userFile","ClearanceUpload","eId","setFileList","getOrgFiles","eventId","eventName","orgProps","empty_form","Clearances","bdate","edate","OrgClearanceTable","setRows","result","user__email","index","acceptOrReject","buttonStyle","addComment","ManageVolunteerClearances","NewEmail","checkedList","setCheckedList","_selectedRowKeys","selectedRows","subject","body","membersList","rowSelection","Attendees","setAttendees","getAttendees","events__name","events__location","events__begindate","events__enddate","OrgPage","setOrg","activeKey","setActiveKey","textAlign","VolunteerEventLeaderboard","NonprofitBreakdown","hours","VolunteerSummary","nonprofits_list","events_list","VolunteerGoals","percent","progress","VolunteerAnalytics","summary","setSummary","goals","setGoals","nonprofits","setNonprofits","getSummary","getGoals","getNonprofits","VolunteerCalendarCard","vis","setVisible","attendeeCount","setAttendeeCount","toggleVisible","events__id","events__virtual","content","events__description","events__instructions","events__attendee_cap","trigger","VolunteerCalendar","getVolunteerEvents","align","dateCellRender","listData","getMonth","getDate","getFullYear","getListData","monthCellRender","monthData","getMonthData","NewGoalForm","NewGoal","FeedContent","context","isNaN","orgMember","m","Layout","Sider","Feed","setContext","setMember","getMember","minHeight","background","newContext","padding","flexDirection","InviteAuthForm","InviteAuth","acceptInvite","declineInvite","AuthState","InviteNoAuth","loadingState","setLoadingState","setInvite","validate","queryString","search","token","antIcon","LoadingOutlined","fontSize","spin","subTitle","extra","indicator","Activate","activate","EventFeedbackForm","URLSearchParams","getInfo","attendee_id","yn_options","date_options","username__first_name","username__last_name","events__organizations__name","optionType","EventFeedback","Register","Login","App","exact","path","Boolean","hostname","store","createStore","initialize","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ba2ec989.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.303e4a67.svg\";","module.exports = __webpack_public_path__ + \"static/media/register.2c0812b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/landing.50e5cdde.svg\";","module.exports = __webpack_public_path__ + \"static/media/volunteersense.98bf0bb3.png\";","import { combineReducers } from 'redux';\n\nconst alerts = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_ALERT':\n            return state.concat([action])\n        case 'REMOVE_ALERT':\n            return state.filter(alert => alert.id !== action.id)\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    alerts,\n});\n\nexport default rootReducer;","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\nconst baseURL = `${process.env.REACT_APP_BACKEND_HOST}/api/`;\nconst accessToken = localStorage.getItem(\"access_token\");\n\nconst axiosInstance = axios.create({\n    baseURL: baseURL,\n    timeout: 20000,\n    headers: {\n        'Authorization': \"JWT \" + accessToken,\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n    }\n});\n\naxiosInstance.interceptors.response.use(\n    response => response,\n    async error => {\n      const originalRequest = error.config;\n    \n    if (error.response && error.response.status === 401 && originalRequest.url === axiosInstance.baseURL+'token/refresh/') {\n        window.location.href = '/login/';\n        return Promise.reject(error);\n    }\n      \n    if (error.response && error.response.status === 401 && error.response.data.code === \"token_not_valid\") {\n        const refresh_token = localStorage.getItem('refresh_token');\n\n        try {\n            const response = await axiosInstance\n                .post('/token/refresh/', { refresh: refresh_token });\n            localStorage.setItem('access_token', response.data.access);\n            localStorage.setItem('refresh_token', response.data.refresh);\n\n            axiosInstance.defaults.headers['Authorization'] = \"JWT \" + response.data.access;\n            originalRequest.headers['Authorization'] = \"JWT \" + response.data.access;\n            return axiosInstance(originalRequest);\n        } catch (_) {\n            window.location.href = '/login/';\n            return Promise.reject(error);\n        }\n      }\n      return Promise.reject(error);\n  }\n);\n\nconst retryDelay = () => {\n    const mSec = 1000;\n    const randomMSec = 1000 * Math.random();\n    return mSec + randomMSec;\n};\n\naxiosRetry(axiosInstance, {\n    retries: 0,\n    retryDelay,\n    retryCondition: axiosRetry.isRetryableError,\n});\n\nexport function setNewHeaders(response) {\n    axiosInstance.defaults.headers[\"Authorization\"] = \"JWT \" + response.data.access;\n    localStorage.setItem(\"access_token\", response.data.access);\n    localStorage.setItem(\"refresh_token\", response.data.refresh);\n    localStorage.setItem(\"user_id\", response.data.user_id);\n}\n\nexport default axiosInstance;","import axiosAPI, { setNewHeaders } from \"./axiosApi\";\n\nexport async function register(email, firstName, lastName, password) {\n  const response = await axiosAPI.post(\"users/create/\", {\n    email,\n    first_name: firstName,\n    last_name: lastName,\n    password,\n  });\n  localStorage.setItem(\"user\", response.data);\n  return response;\n}\n\nexport async function registerFromInvite(email, firstName, lastName, password, invite_id) {\n  console.log(email)\n  console.log(invite_id)\n  const response = await axiosAPI.post(\"users/create-from-invite/\", {\n    email,\n    first_name: firstName,\n    last_name: lastName,\n    password,\n    invite_id\n  });\n  localStorage.setItem(\"user\", response.data);\n  return response;\n}\n\nexport async function login(email, password) {\n  const response = await axiosAPI.post(\"token/obtain/\", {\n    email,\n    password,\n  });\n  localStorage.setItem(\"email\", email);\n  setNewHeaders(response);\n  return response;\n}\n\nexport async function reset_password(old_password, new_password) {\n  const user_id = localStorage.getItem(\"user_id\");\n  const response = await axiosAPI.post(\"users/reset-password/\", {\n    user_id,\n    old_password,\n    new_password,\n  });\n  return response;\n}\n\nexport function logout() {\n  localStorage.removeItem(\"access_token\");\n  localStorage.removeItem(\"refresh_token\");\n  localStorage.removeItem(\"user_id\");\n  axiosAPI.defaults.headers['Authorization'] = null;\n}\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem(\"access_token\");\n  return !!token;\n};","import shortid from 'shortid';\n\nexport function addAlert(message, alert_type) {\n    return {\n      type: 'ADD_ALERT',\n      id: shortid.generate(),\n      message,\n      alert_type\n    }\n  }\n  \n  export function removeAlert(id) {\n    return {\n      type: 'REMOVE_ALERT',\n      id\n    }\n  }","/* eslint no-undef: 0 */\n/* eslint arrow-parens: 0 */\nimport React from 'react';\nimport ReactGA from 'react-ga';\nimport { enquireScreen } from 'enquire-js';\n\nimport Nav3 from './Nav3';\nimport Banner5 from './Banner5';\nimport Feature0 from './Feature0';\nimport Footer2 from './Footer2';\n\nimport {\n  Nav30DataSource,\n  Banner50DataSource,\n  Feature00DataSource,\n  Footer20DataSource,\n} from './data.source';\nimport './less/antMotionStyle.less';\n\nlet isMobile;\nenquireScreen((b) => {\n  isMobile = b;\n});\n\nconst { location = {} } = typeof window !== 'undefined' ? window : {};\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMobile,\n      show: !location.port, // 如果不是 dva 2.0 请删除\n    };\n  }\n\n  componentDidMount() {\n    ReactGA.pageview(window.location.pathname + \"home\");\n    enquireScreen((b) => {\n      this.setState({ isMobile: !!b });\n    });\n    // dva 2.0 样式在组件渲染之后动态加载，导致滚动组件不生效；线上不影响；\n    /* 如果不是 dva 2.0 请删除 start */\n    if (location.port) {\n      // 样式 build 时间在 200-300ms 之间;\n      setTimeout(() => {\n        this.setState({\n          show: true,\n        });\n      }, 500);\n    }\n    /* 如果不是 dva 2.0 请删除 end */\n  }\n\n  render() {\n    const children = [\n      <Nav3\n        id=\"Nav3_0\"\n        key=\"Nav3_0\"\n        dataSource={Nav30DataSource}\n        isMobile={this.state.isMobile}\n      />,\n      <Banner5\n        id=\"Banner5_0\"\n        key=\"Banner5_0\"\n        dataSource={Banner50DataSource}\n        isMobile={this.state.isMobile}\n      />,\n      <Feature0\n        id=\"Feature0_0\"\n        key=\"Feature0_0\"\n        dataSource={Feature00DataSource}\n        isMobile={this.state.isMobile}\n      />,\n      <Footer2\n        id=\"Footer2_0\"\n        key=\"Footer2_0\"\n        dataSource={Footer20DataSource}\n        isMobile={this.state.isMobile}\n      />,\n    ];\n    return (\n      <div\n        className=\"templates-wrapper\"\n        ref={(d) => {\n          this.dom = d;\n        }}\n      >\n        {/* 如果不是 dva 2.0 替换成 {children} start */}\n        {this.state.show && children}\n        {/* 如果不是 dva 2.0 替换成 {children} end */}\n      </div>\n    );\n  }\n}\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button, message } from 'antd';\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\nimport { register, login } from '../api/authenticationApi';\nimport { addAlert } from '../actionCreators.js';\nimport \"antd/dist/antd.css\";\nimport \"./AuthForm.css\"\n\n\nconst AuthForm = ({isRegister}) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            if (isRegister) {\n                await register(values.email, values.first_name, values.last_name, values.password)\n                dispatch(addAlert('Account created! Check your email to confirm your account.', 'success'));\n            } else {\n                await login(values.email, values.password);\n                history.push(\"/\");\n            }\n        } catch (error) {\n            if (isRegister) {\n                dispatch(addAlert('Account could not be created. Have you already created an account with this email?', 'error'));\n            } else {\n                message.error('Login failed. Email or password is incorrect.');\n            }\n        }\n    }, [isRegister, history]);\n\n    const submitButtonText = isRegister ? \"Create account\" : \"Log in\";\n    const switchAuthPages = isRegister ? (\n        <React.Fragment>\n            Already have an account? <Link to=\"/login\">Log in</Link>\n        </React.Fragment>\n    ) : (\n        <React.Fragment>\n            New user? <Link to=\"/register\">Create account</Link>\n        </React.Fragment> \n    );\n\n  return (\n    <React.Fragment>\n        <Form\n            name=\"auth\"\n            className=\"auth-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >   {isRegister &&\n                <Form.Item>\n                    <Input.Group compact>\n                        <Form.Item\n                            name=\"first_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'First name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"First name\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"last_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'Last name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"Last name\" />\n                        </Form.Item>\n                    </Input.Group>\n                </Form.Item>\n            }\n            <Form.Item\n                name=\"email\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Email is a required field.' },\n                    { type: 'email', message: 'Not a valid email.' }\n                ]}\n            >\n                <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                hasFeedback={isRegister}\n                rules={[\n                    { required: true, message: 'Password is a required field.' },\n                    ...isRegister ? [{ min: 12, message: \"Password must be at least 12 characters long.\"}] : [],\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n            </Form.Item>\n            {isRegister &&\n                <Form.Item\n                    name=\"confirm\"\n                    dependencies={['password']}\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Please confirm your password.' },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                                }\n                                return Promise.reject('Passwords do not match.');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                    />\n                </Form.Item>\n            }\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\">\n                    {submitButtonText}\n                </Button>\n                {switchAuthPages}\n                {!isRegister && <Link className=\"auth-form-forgot\" to=\"/register\">Forgot password?</Link>}\n            </Form.Item>\n        </Form>\n    </React.Fragment>\n  );\n};\n\nexport default AuthForm;","import { useEffect } from 'react';\nimport ReactGA from 'react-ga';\n\nexport const makePageView = (pageName) => \n ReactGA.pageview(pageName);\n\n export const usePageView = pageName =>\n    useEffect(() => {\n        makePageView(pageName);\n    }, [pageName]);\n","import React, { useEffect, useCallback } from 'react';\nimport { Layout, Typography, Alert } from 'antd';\nimport AuthForm from '../forms/AuthForm';\nimport LoginLogo from '../assets/login.svg';\nimport RegisterLogo from '../assets/register.svg';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { removeAlert } from '../actionCreators.js';\nimport { usePageView } from '../utils/googleAnalytics'\nimport './Auth.css';\n\nconst Auth = ({isRegister}) => {\n  const title = isRegister ? \"Create account\" : \"Log in\";\n  const logo = isRegister ? RegisterLogo: LoginLogo;\n  const alerts = useSelector(state => state.alerts, shallowEqual);\n  const dispatch = useDispatch();\n  usePageView(isRegister ? '/register' : '/login');\n\n  const onClose = useCallback((id) => {\n    setTimeout(() => dispatch(removeAlert(id)), 500);\n  }, [dispatch]);\n\n  const alertList = alerts.map(alert => \n    <Alert\n      key={alert.id}\n      type={alert.alert_type}\n      message={alert.message}\n      banner\n      closable\n      onClose={() => onClose(alert.id)}\n    />\n  );\n\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      {alertList}\n        <Layout.Content className=\"auth-content\">\n            <div className='auth-container'>\n                <Typography.Title level={2}>{title}</Typography.Title>\n                <img \n                    className=\"auth-logo\"\n                    src={logo} \n                    alt={title + \" logo\"}\n                />\n                <AuthForm isRegister={isRegister}/>\n            </div>\n        </Layout.Content>\n    </Layout>\n  );\n};\n\n\nexport default Auth;","\nimport React from 'react';\nimport { Button } from 'antd';\n\nexport const isImg = /^http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w-./?%&=]*)?/;\nexport const getChildrenToRender = (item, i) => {\n  let tag = item.name.indexOf('title') === 0 ? 'h1' : 'div';\n  tag = item.href ? 'a' : tag;\n  let children = typeof item.children === 'string' && item.children.match(isImg)\n    ? React.createElement('img', { src: item.children, alt: 'img' })\n    : item.children;\n  if (item.name.indexOf('button') === 0 && typeof item.children === 'object') {\n    children = React.createElement(Button, {\n      ...item.children\n    });\n  }\n  return React.createElement(tag, { key: i.toString(), ...item }, children);\n};\n","import React from 'react';\nimport TweenOne from 'rc-tween-one';\nimport { Menu } from 'antd';\nimport { getChildrenToRender } from './utils';\n\nconst { Item, SubMenu } = Menu;\n\nclass Header3 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phoneOpen: undefined,\n    };\n  }\n\n  phoneClick = () => {\n    const phoneOpen = !this.state.phoneOpen;\n    this.setState({\n      phoneOpen,\n    });\n  };\n\n  render() {\n    const { dataSource, isMobile, ...props } = this.props;\n    const { phoneOpen } = this.state;\n    const navData = dataSource.Menu.children;\n    const navChildren = navData.map((item) => {\n      const { children: a, subItem, ...itemProps } = item;\n      if (subItem) {\n        return (\n          <SubMenu\n            key={item.name}\n            {...itemProps}\n            title={\n              <div\n                {...a}\n                className={`header3-item-block ${a.className}`.trim()}\n              >\n                {a.children.map(getChildrenToRender)}\n              </div>\n            }\n            popupClassName=\"header3-item-child\"\n          >\n            {subItem.map(($item, ii) => {\n              const { children: childItem } = $item;\n              const child = childItem.href ? (\n                <a {...childItem}>\n                  {childItem.children.map(getChildrenToRender)}\n                </a>\n              ) : (\n                <div {...childItem}>\n                  {childItem.children.map(getChildrenToRender)}\n                </div>\n              );\n              return (\n                <Item key={$item.name || ii.toString()} {...$item}>\n                  {child}\n                </Item>\n              );\n            })}\n          </SubMenu>\n        );\n      }\n      return (\n        <Item key={item.name} {...itemProps}>\n          <a {...a} className={`header3-item-block ${a.className}`.trim()}>\n            {a.children.map(getChildrenToRender)}\n          </a>\n        </Item>\n      );\n    });\n    const moment = phoneOpen === undefined ? 300 : null;\n    return (\n      <TweenOne\n        component=\"header\"\n        animation={{ opacity: 0, type: 'from' }}\n        {...dataSource.wrapper}\n        {...props}\n      >\n        <div\n          {...dataSource.page}\n          className={`${dataSource.page.className}${phoneOpen ? ' open' : ''}`}\n        >\n          <TweenOne\n            animation={{ x: -30, type: 'from', ease: 'easeOutQuad' }}\n            {...dataSource.logo}\n          >\n            <img width=\"100%\" src={dataSource.logo.children} alt=\"img\" />\n          </TweenOne>\n          {isMobile && (\n            <div\n              {...dataSource.mobileMenu}\n              onClick={() => {\n                this.phoneClick();\n              }}\n            >\n              <em />\n              <em />\n              <em />\n            </div>\n          )}\n          <TweenOne\n            {...dataSource.Menu}\n            animation={\n              isMobile\n                ? {\n                    x: 0,\n                    height: 0,\n                    duration: 300,\n                    onComplete: (e) => {\n                      if (this.state.phoneOpen) {\n                        e.target.style.height = 'auto';\n                      }\n                    },\n                    ease: 'easeInOutQuad',\n                  }\n                : null\n            }\n            moment={moment}\n            reverse={!!phoneOpen}\n          >\n            <Menu\n              mode={isMobile ? 'inline' : 'horizontal'}\n              defaultSelectedKeys={['sub0']}\n              theme=\"light\"\n            >\n              {navChildren}\n            </Menu>\n          </TweenOne>\n        </div>\n      </TweenOne>\n    );\n  }\n}\n\nexport default Header3;\n","import React from 'react';\nimport QueueAnim from 'rc-queue-anim';\nimport TweenOne from 'rc-tween-one';\nimport { getChildrenToRender } from './utils';\n\nclass Banner5 extends React.PureComponent {\n  render() {\n    const { ...tagProps } = this.props;\n    const { dataSource } = tagProps;\n    delete tagProps.dataSource;\n    delete tagProps.isMobile;\n    const animType = {\n      queue: 'bottom',\n      one: {\n        y: '+=30',\n        opacity: 0,\n        type: 'from',\n        ease: 'easeOutQuad',\n      },\n    };\n    return (\n      <div {...tagProps} {...dataSource.wrapper}>\n        <div {...dataSource.page}>\n          <QueueAnim\n            key=\"text\"\n            type={animType.queue}\n            leaveReverse\n            ease={['easeOutQuad', 'easeInQuad']}\n            {...dataSource.childWrapper}\n            componentProps={{\n              md: dataSource.childWrapper.md,\n              xs: dataSource.childWrapper.xs,\n            }}\n          >\n            {dataSource.childWrapper.children.map(getChildrenToRender)}\n          </QueueAnim>\n          <TweenOne animation={animType.one} key=\"title\" {...dataSource.image}>\n            <img src={dataSource.image.children} width=\"100%\" alt=\"img\" />\n          </TweenOne>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Banner5;\n","import React from 'react';\nimport QueueAnim from 'rc-queue-anim';\nimport { Row, Col } from 'antd';\nimport OverPack from 'rc-scroll-anim/lib/ScrollOverPack';\nimport { getChildrenToRender } from './utils';\n\nclass Content extends React.PureComponent {\n  render() {\n    const { dataSource, isMobile, ...props } = this.props;\n    const {\n      wrapper,\n      titleWrapper,\n      page,\n      OverPack: overPackData,\n      childWrapper,\n    } = dataSource;\n    return (\n      <div {...props} {...wrapper}>\n        <div {...page}>\n          <div {...titleWrapper}>\n            {titleWrapper.children.map(getChildrenToRender)}\n          </div>\n          <OverPack {...overPackData}>\n            <QueueAnim\n              type=\"bottom\"\n              key=\"block\"\n              leaveReverse\n              component={Row}\n              componentProps={childWrapper}\n            >\n              {childWrapper.children.map((block, i) => {\n                const { children: item, ...blockProps } = block;\n                return (\n                  <Col key={i.toString()} {...blockProps}>\n                    <div {...item}>\n                      {item.children.map(getChildrenToRender)}\n                    </div>\n                  </Col>\n                );\n              })}\n            </QueueAnim>\n          </OverPack>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React from 'react';\nimport TweenOne from 'rc-tween-one';\nimport OverPack from 'rc-scroll-anim/lib/ScrollOverPack';\nimport { isImg } from './utils';\n\nclass Footer2 extends React.PureComponent {\n  render() {\n    const { ...props } = this.props;\n    const { dataSource } = props;\n    delete props.dataSource;\n    delete props.isMobile;\n    return (\n      <div {...props} {...dataSource.wrapper}>\n        <OverPack {...dataSource.OverPack}>\n          <TweenOne {...dataSource.links}>\n            {dataSource.links.children.map((item, i) => {\n              return (\n                <a key={i.toString()} {...item}>\n                  <img src={item.children} height=\"100%\" alt=\"img\" />\n                </a>\n              );\n            })}\n          </TweenOne>\n          <TweenOne\n            animation={{ x: '+=30', opacity: 0, type: 'from' }}\n            key=\"copyright\"\n            {...dataSource.copyright}\n          >\n            {dataSource.copyright.children.map((item, i) =>\n              React.createElement(\n                item.name.indexOf('title') === 0 ? 'h1' : 'div',\n                { key: i.toString(), ...item },\n                typeof item.children === 'string' && item.children.match(isImg)\n                  ? React.createElement('img', {\n                      src: item.children,\n                      alt: 'img',\n                    })\n                  : item.children\n              )\n            )}\n          </TweenOne>\n        </OverPack>\n      </div>\n    );\n  }\n}\n\nexport default Footer2;\n","import React from 'react';\nimport LandingLogo from '../../assets/landing.svg';\nimport logo from '../../assets/volunteersense.png';\nexport const Nav30DataSource = {\n  wrapper: { className: 'header3 home-page-wrapper jzih1dpqqrg-editor_css' },\n  page: { className: 'home-page' },\n  logo: {\n    className: 'header3-logo jzjgnya1gmn-editor_css',\n    children: logo,\n  },\n  Menu: {\n    className: 'header3-menu',\n    children: [\n      {\n        name: 'item1',\n        className: 'header3-item',\n        children: {\n          href: '/login',\n          children: [{ children: <p>Log in</p>, name: 'text' }],\n        },\n      },\n      {\n        name: 'item2',\n        className: 'header3-item',\n        children: {\n          href: '/register',\n          children: [{ children: <p>Register</p>, name: 'text' }],\n        },\n      },\n    ],\n  },\n  mobileMenu: { className: 'header3-mobile-menu' },\n};\nexport const Banner50DataSource = {\n  wrapper: { className: 'home-page-wrapper banner5' },\n  page: { className: 'home-page banner5-page' },\n  childWrapper: {\n    className: 'banner5-title-wrapper',\n    children: [\n      { name: 'title', children: 'Connect with your volunteers', className: 'banner5-title' },\n      {\n        name: 'explain',\n        className: 'banner5-explain',\n        children: 'Build and engage your community with our volunteer management system.',\n      },\n      {\n        name: 'button',\n        className: 'banner5-button-wrapper',\n        children: {\n          href: '#Feature0_0',\n          className: 'banner5-button',\n          type: 'primary',\n          children: 'Learn more',\n        },\n      },\n    ],\n  },\n  image: {\n    className: 'banner5-image',\n    children: LandingLogo,\n  },\n};\nexport const Feature00DataSource = {\n  wrapper: { className: 'home-page-wrapper content0-wrapper' },\n  page: { className: 'home-page content0' },\n  OverPack: { playScale: 0.3, className: '' },\n  titleWrapper: {\n    className: 'title-wrapper',\n    children: [\n      { name: 'title', children: 'About VolunteerSense' },\n      { name: 'explain', children: 'Our secret recipe for wrangling your volunteers.' }\n    ],\n  },\n  childWrapper: {\n    className: 'content0-block-wrapper',\n    children: [\n      {\n        name: 'block0',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children:\n                'https://zos.alipayobjects.com/rmsportal/WBnVOjtIlGWbzyQivuyq.png',\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Recruit',\n            },\n            { name: 'content', children: 'Easily onboard new volunteers and track their progress in signing required clearances.' },\n          ],\n        },\n      },\n      {\n        name: 'block1',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children:\n                'https://zos.alipayobjects.com/rmsportal/YPMsLQuCEXtuEkmXTTdk.png',\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Engage',\n            },\n            {\n              name: 'content',\n              children: 'Alert your community about new opportunities to get involved.',\n            },\n          ],\n        },\n      },\n      {\n        name: 'block2',\n        className: 'content0-block',\n        md: 8,\n        xs: 24,\n        children: {\n          className: 'content0-block-item',\n          children: [\n            {\n              name: 'image',\n              className: 'content0-block-icon',\n              children:\n                'https://zos.alipayobjects.com/rmsportal/EkXWVvAaFJKCzhMmQYiX.png',\n            },\n            {\n              name: 'title',\n              className: 'content0-block-title',\n              children: 'Retain',\n            },\n            {\n              name: 'content',\n              children: 'Remind your volunteers about upcoming events and solicit their feedback.',\n            },\n          ],\n        },\n      },\n    ],\n  },\n};\nexport const Footer20DataSource = {\n  wrapper: { className: 'home-page-wrapper footer2-wrapper' },\n  OverPack: { className: 'home-page footer2', playScale: 0.05 },\n  copyright: {\n    className: 'copyright',\n    children: [\n      {\n        name: 'copyright',\n        children: 'Copyright © VolunteerSense',\n        className: 'copyright-text',\n      },\n    ],\n  },\n  links: {\n    className: 'links',\n    children: [],\n  },\n};\n","import React, { useCallback, useEffect } from 'react';\nimport { Menu } from 'antd';\nimport { BulbOutlined, LogoutOutlined, PlusSquareOutlined, CheckSquareOutlined, SettingOutlined, UsergroupAddOutlined, BarChartOutlined, CalendarOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nimport axiosAPI from '../api/axiosApi';\nimport { logout } from '../api/authenticationApi';\nimport './Sidebar.css';\n\nconst { Divider, Item, SubMenu } = Menu;\n\nconst Sidebar = ({selectedKeys, setSelectedKeys, setFeedContext, member}) =>  {\n    const history = useHistory();\n    const onSelect = (latestSelectedKey) => {\n        setSelectedKeys([latestSelectedKey.key]);\n    }\n\n    const onLogout = useCallback(async () => {\n        await axiosAPI.post(\"token/blacklist/\", {\n            refresh_token: localStorage.getItem(\"refresh_token\")\n        });\n        logout();\n        history.push(\"/login\");\n    }, [history]);\n\n    useEffect(() => {\n        setFeedContext(selectedKeys[0] ?? \"\");\n    }, [selectedKeys, setFeedContext]);\n\n\n    const organizationsList = (\n\t\tmember.map(member => \n\t\t\t<Item key={member?.organization?.id}>\n                {member?.organization?.name}\n            </Item>\n\t\t)\n    );\n\n    return (\n        <div className=\"menu-container\">\n            <Menu\n                mode=\"inline\"\n                theme=\"dark\"\n                selectedKeys={selectedKeys}\n                onSelect={onSelect}\n            >\n                <SubMenu title=\"Take action\" icon={<BulbOutlined />}>\n                    <Item className=\"action-submenu-item\" key=\"create-org\" icon={<UsergroupAddOutlined />}>\n                        Create an organization\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"create-event\" icon={<PlusSquareOutlined />}>\n                        Create event\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"set-goals\" icon={<CheckSquareOutlined />}>\n                        Set goals\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"calendar\" icon={<CalendarOutlined />}>\n                        View my events\n                    </Item>\n                    <Item className=\"action-submenu-item\" key=\"view-analytics\" icon={<BarChartOutlined />}>\n                        View my analytics\n                    </Item>\n                </SubMenu>\n                <Divider/>\n            </Menu>\n            <Menu\n                mode=\"inline\"\n                theme=\"dark\"\n                selectedKeys={selectedKeys}\n                onSelect={onSelect}\n            >\n                {organizationsList}\n            </Menu>\n            <Menu\n                mode=\"inline\"\n                theme=\"dark\"\n                selectedKeys={selectedKeys}\n                onSelect={onSelect}\n            >\n                <Divider/>\n                <Item key=\"settings\" icon={<SettingOutlined />}>\n                    Manage user settings\n                </Item>\n                <Item key=\"logout\" icon={<LogoutOutlined />} onClick={onLogout}>\n                    Logout\n                </Item>\n            </Menu>\n        </div>\n    );\n}\n\nexport default Sidebar;\n","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { Form, Input, Button, Select, message } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport \"./NewOrgForm.css\";\n\nconst { TextArea } = Input;\n\nconst NewOrgForm = () => {\n    const [selectedCauses, setSelectedCauses] = useState([]);\n    const [causes, setCauses] = useState([]);\n\n    const getCauses = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"causes/get/\");\n            setCauses(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setCauses]);\n\n    useEffect(() => {\n        getCauses();\n    }, [getCauses]);\n\n    const filteredCauses = useMemo(() => {\n        return causes.filter(o => !selectedCauses.includes(o));\n    }, [selectedCauses, causes]);\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await axiosAPI.post(\"organization/create/\", {\n                name: values.name,\n                causes: values.causes,\n                description: values.description,\n                website: values.website,\n                phone: values.phone,\n                address: values.address,\n                email: values.email\n            });\n            await axiosAPI.post(\"member/create/\", {\n                user_id: localStorage.getItem(\"user_id\"),\n                organization: values.name,\n                member_type: 1,\n                status: 0,\n            });\n            message.success('Organization created');\n        }\n        catch {\n            message.error('Organization creation failed');\n        }\n    }, []);\n\n    return (\n        <Form\n            name=\"org\"\n            className=\"org-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >   \n            <Form.Item\n                name=\"name\"\n                hasFeedback\n                rules={[{ required: true, message: 'Organization name is required.' }]}\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Organization name\" maxLength={128} />\n            </Form.Item>\n            <Form.Item\n                name=\"causes\"\n                hasFeedback\n            >\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Charitable cause(s)\"\n                    value={selectedCauses}\n                    onChange={setSelectedCauses}\n                >\n                    \n                {filteredCauses.map(item => (\n                    <Select.Option key={item.id} value={item.id}>\n                        {item.name}\n                    </Select.Option>\n                ))}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"website\"\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Website\" />\n            </Form.Item>\n            <Form.Item\n                name=\"phone\"\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Telephone\" />\n            </Form.Item>\n            <Form.Item\n                name=\"email\"\n                hasFeedback\n                rules={[\n                    { type: 'email', message: 'Not a valid email.' }\n                ]}\n            >\n                <Input placeholder=\"Email\" />\n            </Form.Item>\n            <Form.Item\n                name=\"address\"\n            >\n                <TextArea style={{ width: '100%' }} placeholder=\"Street Address\" autoSize />\n            </Form.Item>\n            <Form.Item\n                name=\"description\"\n                hasFeedback\n                rules={[{ required: true, message: 'Organization description is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Describe your organization...\" />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"org-form-button\">\n                    Create\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default NewOrgForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport NewOrgForm from '../forms/NewOrgForm';\nimport './NewOrg.css';\n\nconst NewOrg = () => {\n    return (\n        <div className='org-container'>\n            <Typography.Title level={2}>Create organization</Typography.Title>\n            <NewOrgForm />\n        </div>\n    );\n};\n\n\nexport default NewOrg;","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button, Typography, Row, Col } from 'antd';\nimport { addAlert } from '../actionCreators.js';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport { useEffect } from 'react';\n\nconst { Text } = Typography\n\nconst ProfileForm = ({user}) => {\n    const dispatch = useDispatch();\n    const [isEditable, setIsEditable] = useState(false);\n    const [firstName, setFirstName] = useState(user?.first_name);\n    const [lastName, setLastName] = useState(user?.last_name);\n    const [email, setEmail] = useState(user?.email);\n\n    useEffect(() => {\n        setFirstName(user?.first_name);\n        setLastName(user?.last_name);\n        setEmail(user?.email);\n     }, [user])\n\n\n    const onFinish = useCallback(async (values) => {\n        if (isEditable) {\n            try {\n                await axiosAPI.post(\"users/update/\", {\n                    user_id: localStorage.getItem('user_id'),\n                    first_name: firstName,\n                    last_name: lastName,\n                    email,\n                });\n                setIsEditable(false);\n                dispatch(addAlert('Profile update success', 'success'));\n            } \n            catch {\n                dispatch(addAlert('Profile update failed', 'error'));\n            }\n        }\n        else {\n            setIsEditable(true);\n        }\n    }, [isEditable, setIsEditable, dispatch, email, firstName, lastName]);\n\n    const layout = {\n        labelCol: { span: 4 },\n        labelAlign: 'left'\n    }\n    \n    const textPlaceholder = (fieldName, fieldValue) => (\n        <Row style={{ marginBottom: '8px'}}>\n            <Col span={4}>\n                <Text>{fieldName}:</Text>\n            </Col>\n            <Col span={20}>\n                <Text>{fieldValue}</Text>\n            </Col>\n        </Row>\n    )\n\n    return (\n        <React.Fragment>\n            <Form\n                name=\"update-profile\"\n                onFinish={onFinish}\n                requiredMark={false}\n                initialValues={{\n                    first_name: firstName,\n                    last_name: lastName,\n                    email: email,\n                  }}\n                {...layout}\n            > \n                {isEditable ? (\n                <Form.Item \n                    label=\"Name\"\n                >  \n                    <Input.Group compact>\n                        <Form.Item\n                            name=\"first_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'First name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"First name\" value={firstName} onChange={(e) => {setFirstName(e.target.value)}}/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"last_name\"\n                            noStyle\n                            rules={[{ required: true, message: 'Last name is required' }]}\n                        >\n                            <Input style={{ width: '50%' }} placeholder=\"Last name\" value={lastName} onChange={(e) => {setLastName(e.target.value)}}/>\n                        </Form.Item>\n                    </Input.Group>\n                </Form.Item>) : (\n                    textPlaceholder(\"Name\", `${firstName} ${lastName}`)\n                )}\n                {isEditable ? (\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Email is a required field.' },\n                        { type: 'email', message: 'Not a valid email.' }\n                    ]}\n                >\n                    <Input placeholder=\"Email\" value={email} onChange={(e) => {setEmail(e.target.value)}} />\n                </Form.Item>) : (\n                    textPlaceholder(\"Email\", email)\n                )}\n                {/* {isEditable ? (\n                <Form.Item\n                    label=\"Birthdate\"\n                    name=\"birthdate\"\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Birthdate is a required field.' },\n                    ]}\n                >\n                    <DatePicker \n                        onChange={() => {}} \n                        style={{ width: '100%'}}\n                    />\n                </Form.Item>) : (\n                    textPlaceholder(\"Birthdate\", \"04/14/1999\")\n                )} */}\n                <Form.Item>\n                    <Button.Group style={{ width: '100%' }}>\n                        <Button style={{ width: isEditable ? '50%' : '100%', transition: 'none' }} type=\"primary\" htmlType=\"submit\">\n                            {isEditable ? \"Update\" : \"Edit\"}\n                        </Button>\n                        <Button style={{ width: '50%', transition: 'none' }} type=\"secondary\" onClick={() => {setIsEditable(false)}} hidden={!isEditable}>\n                            Cancel\n                        </Button>\n                    </Button.Group>\n                </Form.Item>\n            </Form>\n        </React.Fragment>\n    );\n};\n\nexport default ProfileForm;","import React, {useState, useEffect} from 'react';\nimport ProfileForm from '../forms/ProfileForm';\nimport { Divider, Typography, Skeleton } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nfunction ProfileSettings() {\n\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        getUser();\n     }, [])\n\n    const getUser = async () => {\n        const userId = localStorage.getItem(\"user_id\");\n        const url = `users/get/?user_id=${userId}`;\n        const response = await axiosAPI.get(url);\n        setUser(response.data);\n    }\n\n    return (\n        <React.Fragment>\n            <div style={{ maxWidth: '600px' }}>\n                <Typography.Title level={4}>Update Profile</Typography.Title>\n                <Skeleton active loading={!user} paragraph={{ rows: 3, width: 'auto' }} title={false}>\n                    <ProfileForm user={user}/>\n                </Skeleton>\n            </div>\n            <Divider/>\n        </React.Fragment>\n    );\n}\n\nexport default ProfileSettings;","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { LockOutlined } from '@ant-design/icons';\nimport { reset_password } from '../api/authenticationApi';\nimport { addAlert } from '../actionCreators.js';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport \"./AuthForm.css\"\n\nconst ResetPasswordForm = () => {\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await reset_password(values.old_password, values.new_password);\n            dispatch(addAlert('Password reset success', 'success'));\n        } catch (error) {\n            dispatch(addAlert('Old password incorrect', 'error'));\n        }\n    }, [dispatch]);\n\n    const sendForgotPasswordEmail = useCallback(async () => {\n        try {\n            const url = \"users/forgot-password/?user_id=\" + localStorage.getItem(\"user_id\")\n            await axiosAPI.get(url);\n            dispatch(addAlert('Password reset link sent to email', 'success'));\n        } catch (error) {\n            dispatch(addAlert('Password reset email failed to send', 'error'));\n        }\n    }, [dispatch]);\n\n  return (\n    <React.Fragment>\n        <Form\n            name=\"reset-password\"\n            className=\"reset-password-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        > \n            <Form.Item\n                name=\"old_password\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Old password is a required field.' },\n                ]}\n                \n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Old password\"\n                />\n            </Form.Item>\n            <Form.Item\n                name=\"new_password\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'New password is a required field.' },\n                    { min: 12, message: \"Password must be at least 12 characters long.\"}\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"New password\"\n                />\n            </Form.Item>\n            <Form.Item\n                    name=\"confirm\"\n                    dependencies={['new_password']}\n                    hasFeedback\n                    rules={[\n                        { required: true, message: 'Please confirm your new password.' },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('new_password') === value) {\n                                return Promise.resolve();\n                                }\n                                return Promise.reject('Passwords do not match.');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                    />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\">\n                    Submit\n                </Button>\n                Forgot password? \n                <Button type=\"link\" style={{ paddingLeft: 4, paddingRight: 4}} onClick={sendForgotPasswordEmail}>\n                    Send a password reset email\n                </Button>\n            </Form.Item>\n        </Form>\n    </React.Fragment>\n  );\n};\n\nexport default ResetPasswordForm;","import React from 'react';\nimport { Divider, Typography } from 'antd';\nimport ResetPasswordForm from '../forms/ResetPasswordForm';\n\nfunction SecuritySettings() {\n    return (\n        <React.Fragment>\n            <div style={{ maxWidth: '600px' }}>\n                <Typography.Title level={4}>Reset password</Typography.Title>\n                <ResetPasswordForm />\n            </div>\n            <Divider/>\n        </React.Fragment>\n    );\n}\n\nexport default SecuritySettings;","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button, Typography, Row, Col, Checkbox } from 'antd';\nimport { addAlert } from '../actionCreators.js';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport { useEffect } from 'react';\n\nconst { Text } = Typography\n\nconst UserNotificationsForm = ({user}) => {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState(user?.email);\n    const [text, setText] = useState(user?.text);\n    const [phoneNumber, setPhoneNumber] = useState(user?.phone_number);\n\n    useEffect(() => {\n        setEmail(user?.email);\n        setText(user?.text);\n        setPhoneNumber(user?.phone_number);\n        console.log('phoneNumber', phoneNumber)\n     }, [phoneNumber, user])\n\n\n    const onFinish = useCallback(async (values) => {\n            try {\n                await axiosAPI.post(\"user/submit-notification-settings/\", {\n                    user_id: localStorage.getItem('user_id'),\n                    email,\n                    text,\n                    phone_number: values.phone_number,\n                });\n                dispatch(addAlert('Settings update success', 'success'));\n            } \n            catch {\n                dispatch(addAlert('Settings update failed', 'error'));\n            }\n    }, [email, text, dispatch]);\n\n    const layout = {\n        labelCol: { span: 4 },\n        labelAlign: 'left'\n    }\n\n    const [form] = Form.useForm()\n\n    useEffect(() => {\n        form.setFieldsValue({\n            email: email,\n            text: text,\n            phone_number: phoneNumber,\n          })\n       }, [form, email, text, phoneNumber])\n\n    return (\n        <React.Fragment>\n            <Form\n                form={form}\n                name=\"update-profile\"\n                onFinish={onFinish}\n                initialValues={{\n                    email: email,\n                    text: text,\n                    phone_number: phoneNumber,\n                  }}\n                {...layout}\n            > \n                <Form.Item\n                    name=\"email\"\n                >\n                    <Checkbox checked={email} onChange={(e) => {setEmail(e.target.checked)}}>Send email notifications</Checkbox>\n                </Form.Item>\n                <Form.Item\n                    name=\"text\"\n                >\n                    <Checkbox checked={text} onChange={(e) => {setText(e.target.checked)}} disabled = {true}>Send text notifications</Checkbox>\n                </Form.Item>\n                <Form.Item\n                    name=\"phone_number\"\n                    hasFeedback = {text}\n                    rules={[\n                        { required: text, message: 'Phone is a required field.' },\n                    ]}\n                >\n                    <Input addonBefore=\"Phone Number\" placeholder=\"Phone Number\" disabled={true}/>\n                    {/* <Input addonBefore=\"Phone Number\" placeholder=\"Phone Number\" disabled={!text}/> */}\n                </Form.Item>\n                <Form.Item>\n                        <Button style={{ width: '100%'}} type=\"primary\" htmlType=\"submit\">\n                            Update\n                        </Button>\n                </Form.Item>\n            </Form>\n        </React.Fragment>\n    );\n};\n\nexport default UserNotificationsForm;","import React, {useEffect, useState} from 'react';\nimport UserNotificationsForm from '../forms/UserNotificationsForm';\nimport { Divider, Typography, Skeleton } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nfunction UserNotifications() {\n\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        getUser();\n     }, [])\n\n    const getUser = async () => {\n        const userId = localStorage.getItem(\"user_id\");\n        const url = `user/get-notification-settings/?user_id=${userId}`;\n        const response = await axiosAPI.get(url);\n        setUser(response.data);\n    }\n\n\n    return (\n        <React.Fragment>\n            <div style={{ maxWidth: '600px' }}>\n                <Typography.Title level={4}>Update Notifications</Typography.Title>\n                <Skeleton active loading={false} paragraph={{ rows: 3, width: 'auto' }} title={false}>\n                    <UserNotificationsForm user={user}/>\n                </Skeleton>\n            </div>\n            <Divider/>\n        </React.Fragment>\n    );\n}\n\nexport default UserNotifications;","import React from \"react\";\nimport ProfileSettings from \"../pages/ProfileSettings\";\nimport SecuritySettings from \"../pages/SecuritySettings\";\nimport UserNotifications from \"../pages/UserNotifications\";\nimport { Tabs, Typography } from 'antd';\n\nconst { TabPane } = Tabs;\n\nconst Settings = () => (\n    <React.Fragment>\n        <Typography.Title level={3}>Manage user settings</Typography.Title>\n        <Tabs defaultActiveKey=\"1\">\n            <TabPane tab=\"Profile\" key=\"1\">\n                <ProfileSettings />\n            </TabPane>\n            <TabPane tab=\"Security\" key=\"2\">\n                <SecuritySettings />\n            </TabPane>\n            <TabPane tab=\"Notifications\" key=\"3\">\n                <UserNotifications />\n            </TabPane>\n        </Tabs>\n    </React.Fragment>\n);\n\nexport default Settings;","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { Form, Input, Button, Select, Switch, DatePicker, InputNumber, message } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport { useDispatch } from 'react-redux';\nimport { addAlert } from '../actionCreators.js';\nimport \"antd/dist/antd.css\";\nimport \"./NewEventForm.css\"\n\nconst { TextArea } = Input;\nconst { RangePicker } = DatePicker;\n\nconst NewEventForm = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedCauses, setSelectedCauses] = useState([]);\n    const [causes, setCauses] = useState([]);\n    const [selectedOrgs, setSelectedOrgs] = useState([]);\n    const [orgs, setOrgs] = useState([]);\n    const dispatch = useDispatch();\n\n    const getCauses = useCallback(async () => {\n        try{\n            const response = await axiosAPI.get(\"causes/get/\");\n            setCauses(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setCauses]);\n\n    const getOrgs = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"admin/get-orgs/\", {\n                 params: {\n                     user_id: localStorage.getItem(\"user_id\"),  \n                 }\n             });\n            setOrgs(response.data);\n        } catch (error) {\n            console.error(error)\n        }\n    }, [setOrgs]);\n\n    useEffect(() => {\n        getCauses();\n        getOrgs();\n    }, [getCauses, getOrgs]);\n    \n    const filteredOrgs = useMemo(() => {\n        return orgs.filter(o => !selectedOrgs.includes(o));\n    }, [selectedOrgs, orgs]);\n\n    const filteredCauses = useMemo(() => {\n        return causes.filter(o => !selectedCauses.includes(o));\n    }, [selectedCauses, causes]);\n\n\n    const onFinish = useCallback(async (values) => {\n        setIsLoading(true);\n        try {\n            await axiosAPI.post(\"event/create/\", {\n                name: values.name,\n                virtual: values.virtual,\n                location: values.location,\n                causes: values.causes,\n                organizations: values.organizations,\n                date:values.date,\n                description: values.description,\n                instructions: values.instructions,\n                attendee_cap: values.attendeeCap,\n\n            });\n            message.success('Event created');\n        }\n        catch {\n            message.success('Event creation failed');\n        }\n        setIsLoading(false);\n    }, [dispatch, setIsLoading]);\n\n    return (\n        <Form\n            name=\"event\"\n            className=\"event-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >   \n            <Form.Item\n                name=\"organizations\"\n                hasFeedback\n                rules={[{ required: true, message: 'Organization name is required.' }]}\n            >\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Organization(s)\"\n                    value={selectedOrgs}\n                    onChange={setSelectedOrgs}\n                    style={{ width: '100%' }}\n                >\n                    \n                {filteredOrgs.map(item => (\n                    <Select.Option key={item.id} value={item.id}>\n                        {item.name}\n                    </Select.Option>\n                ))}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"name\"\n                hasFeedback\n                rules={[{ required: true, message: 'Event name is required.' }]}\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Event name\" />\n            </Form.Item>\n            <Form.Item\n                name=\"virtual\"\n                hasFeedback\n                valuePropName=\"checked\"\n            >\n                <Switch checkedChildren=\"Virtual\" unCheckedChildren=\"Non-virtual\" defaultChecked />\n            </Form.Item>\n            <Form.Item\n                name=\"location\"\n                hasFeedback\n                rules={[{ required: true, message: 'Location is required.' }]}\n            >\n                <Input style={{ width: '100%' }} placeholder=\"Location\" />\n            </Form.Item>\n            <Form.Item\n                name=\"date\"\n                hasFeedback\n                rules={[{ required: true, message: 'Date is required.' }]}\n            >\n                <RangePicker style={{ width: '100%' }}  showTime={{ format: 'HH:mm' }}\n      format=\"YYYY-MM-DD HH:mm\" />\n            </Form.Item>\n            <Form.Item\n                name=\"causes\"\n                hasFeedback\n                rules={[{ required: true, message: 'Causes are required.' }]}\n            >\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Charitable cause(s)\"\n                    value={selectedCauses}\n                    onChange={setSelectedCauses}\n                    style={{ width: '100%' }}\n                >\n                    \n                {filteredCauses.map(item => (\n                    <Select.Option key={item.id} value={item.id}>\n                        {item.name}\n                    </Select.Option>\n                ))}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name=\"attendeeCap\"\n                hasFeedback\n                rules={[{ required: true, message: 'Max number of attendees is required and must be a number.'}]}\n            >\n                \n                <InputNumber style={{ width: '100%' }} placeholder=\"Maximum number of attendees\"/>\n            </Form.Item>\n            <Form.Item\n                name=\"description\"\n                hasFeedback\n                rules={[{ required: true, message: 'Description is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Event description\" />\n            </Form.Item>\n            <Form.Item\n                name=\"instructions\"\n                hasFeedback\n                rules={[{ required: true, message: 'Instructions is required.' }]}\n            >\n                <TextArea row={6} style={{ width: '100%' }} placeholder=\"Provide volunteers with instructions (i.e. how to get there, what to bring, etc.)\" />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" loading={isLoading}>\n                    Create\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\n\nexport default NewEventForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport NewEventForm from '../forms/NewEventForm';\nimport './NewEvent.css';\n\nconst NewEvent = () => {\n    return (\n      <div className='event-container'>\n            <Typography.Title level={2}>Create an event</Typography.Title>\n            <NewEventForm />\n        </div>\n    );\n};\n\n\nexport default NewEvent;  \n\n","import React, {useState} from 'react';\nimport { Typography, Card, Switch, message } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport axiosAPI from '../api/axiosApi';\nimport './QAndA.css';\nconst { Paragraph } = Typography;\n\n\nfunction QAndA ({isAdmin, item, removeFaq, orgId}) {\n    const [questionStr, setQuestionStr] = useState(item?.question || \"\");\n    const [answerStr, setAnswerStr] = useState(item?.answer || \"\");\n    const [isPublic, setIsPublic] = useState(!!item?.is_public);\n\n    const updateQ = async (newQuestionStr) => {\n        setQuestionStr(newQuestionStr)\n        try {\n            await axiosAPI.post(\"faq/upsert/\", {\n                id: item?.id, question: newQuestionStr, answer: answerStr, org_id: orgId\n            });\n            message.success('Question updated');\n        }\n        catch {\n            message.error('Question failed to update');\n        }\n    }\n    const updateA = async (newAnswerStr) => {\n        setAnswerStr(newAnswerStr)\n        try {\n            await axiosAPI.post(\"faq/upsert/\", {\n                id: item?.id, question: questionStr, answer: newAnswerStr, is_public: isPublic, org_id: orgId\n            });\n            message.success('Answer updated');\n        }\n        catch {\n            message.error('Answer failed to update');\n        }\n    }\n    const updatePublic = async (newIsPublic) => {\n        setIsPublic(newIsPublic)\n        try {\n            await axiosAPI.post(\"faq/upsert/\", {\n                id: item?.id, question: questionStr, answer: answerStr, is_public: newIsPublic, org_id: orgId\n            });\n            message.success('FAQ updated');\n        }\n        catch {\n            message.error('FAQ failed to update');\n        }\n    }\n    const onDelete = async () => {\n        try {\n            await axiosAPI.delete(\"faq/delete/\", {\n                params: {\n                    id: item?.id,\n                }\n            });\n            removeFaq(item?.id)\n            message.success('FAQ deleted');\n        }\n        catch {\n            message.error('FAQ failed to delete');\n        }\n    }\n\n    return (\n\n        <Card style={{ marginTop: 8, marginBottom: 8 }} loading={!item} actions={isAdmin && [<DeleteOutlined onClick={onDelete} key=\"delete\" />]}>\n            <div style={{ display: \"flex\" }}>\n                <Paragraph style={{ float: \"left\", verticalAlign: \"top\", fontWeight: 700 }}>Question: </Paragraph>\n                {'  '}\n                <div style={{ marginLeft: 4, flexGrow: 100 }}>\n                    <Paragraph style={{ width: \"100%\" }} editable={isAdmin ? { onChange: (newQuestionStr) => updateQ(newQuestionStr) }: false}>{questionStr}</Paragraph>\n                </div>\n            </div>\n            <div style={{ display: \"flex\" }}>\n                <Paragraph style={{ float: \"left\", verticalAlign: \"top\", fontWeight: 700 }}>Answer: </Paragraph>\n                {'  '}\n\n                <div style={{ marginLeft: 4, flexGrow: 100 }}>\n                    <Paragraph style={{ width: \"100%\" }} editable={isAdmin ? { onChange: (newAnswerStr) => updateA(newAnswerStr) }: false}>{answerStr}</Paragraph>\n                </div>\n            </div>\n            {isAdmin &&\n                <Switch checkedChildren=\"Public\" unCheckedChildren=\"Hidden\" onChange={(newIsPublic) => updatePublic(newIsPublic)} defaultChecked={item?.is_public}/>\n            }\n        </Card>\n    )\n\n}\nexport default QAndA;","import React, {useState, useEffect} from 'react';\nimport { Button, Typography } from 'antd';\nimport QAndA from '../components/QAndA';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\n\nfunction QAndAPage({isAdmin, orgId}) {\n    const [qA, setQA] = useState([]);\n    console.log('isAdmin', isAdmin); \n    const getQA = async (orgId) => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-faq/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setQA(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }\n\n    const removeFaq = (id) => {\n        setQA(qA.filter(faq => faq.id !== id));\n    }\n\n    useEffect(() => {\n        if (orgId) {\n            getQA(orgId);\n        }\n    }, [orgId]);\n\n    const addQAField = async () => {\n        const response = await axiosAPI.post(\"faq/upsert/\", {\n            org_id: orgId, question: \"question\", answer: \"answer\"\n        });\n        setQA([...qA, {id: response.data.id, question: \"question\", answer: \"answer\"}]);\n    }\n\n\n    return (\n        <div>\n            <Title level={4}>Frequently asked questions</Title>\n            {qA.map(item => \n                <QAndA isAdmin={isAdmin} key={item.id} item={item} removeFaq={removeFaq} orgId={orgId}/>\n            )}\n            {isAdmin && (<Button style={{ width: '100%' }} type=\"primary\" onClick={() => {addQAField()}}>Add New FAQ</Button>)}\n        </div>\n    );\n};\n\n\nexport default QAndAPage;","import React, {useCallback, useEffect, useState} from 'react';\nimport {Card, Button, Typography, message} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport './EventCard.css';\n\nconst { Paragraph } = Typography;\n\nfunction EventCard ({item}){\n\tconst [register, setRegister] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [viewmore, setViewmore] = useState(false);\n\t\n\tconst onClick = useCallback(async (event_id, register) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tif (register) {\n\t\t\t\tawait axiosAPI.post(\"attendees/delete/\", {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\tevent: event_id,\n\t\t\t\t});\n\t\t\t\tmessage.success(\"Unjoined event\")\n\t\t\t} else {\n\t\t\t\tawait axiosAPI.post(\"attendees/create/\", {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\tevent: event_id,\n\t\t\t\t});\n\t\t\t\tmessage.success(\"Joined event\");\n\t\t\t}\n\t\t\tsetRegister(!register)\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = register ? \"Join failed\" : \"Unjoin failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, []);\n\n\tconst getRegisterStatus = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get-register-status/\", {\n                params: {\n\t\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\t\tevent: item.id\n                }\n            });\n\t\t\tsetRegister(false);\n\t\t\tif (response.data == 1) {\n\t\t\t\tsetRegister(true);\n\t\t\t}\n        } catch (error) {\n            console.error(error);\n        }\n    }, []);\n\t\n\tuseEffect(() => {\n        getRegisterStatus();\n\t}, [getRegisterStatus]);\n\t\n\tconst onClickViewmore = useCallback(async (event_id, viewmore) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tsetViewmore(!viewmore);\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = \"Viewmore failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, []);\n\t\n\tconst buttonText = register ? \"Unjoin\" : \"Join\";\n\tconst options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\tconst begindate = new Date(item.begindate)\n\tconst enddate = new Date(item.enddate)\n\tconst virtual = item.virtual ? \"Yes.\" : \"No.\";\n\n\tconst joinButton = (item.attendee_count < item.attendee_cap) ? \n\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.id, register)} loading={isLoading}>\n\t\t\t{buttonText}\n\t\t</Button> :\n\t\t(register ? \n\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.id, register)} loading={isLoading}>\n\t\t\t{buttonText}\n\t\t</Button> : \n\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"event-unjoinable-form-button\" disabled={true}>\n\t\t \t{buttonText}\n\t\t</Button>)\n\n\tif (viewmore) {\n\t\t\treturn (\n\t\t\t\t<Card className=\"event-card\" title={item.name} bordered={true}>\n\t\t\t\t\t\t<Paragraph><b>Location: </b>{item.location}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>Description: </b>{item.description}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>Virtual? </b>{virtual}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>Instructions: </b>{item.instructions}</Paragraph>\n\t\t\t\t\t\t<Paragraph><b>No. of Attendees: </b>{item.attendee_count}/{item.attendee_cap}</Paragraph>\n\t\t\t\t\t<p style={{color: '#1890ff'}}>>><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(item.id, viewmore)}>\n\t\t\t\t\t\tView Less\n\t\t\t\t\t</Button></p>\n\t\t\t\t\t{joinButton}\n\t\t\t\t</Card>\n\t\t\t);\n\t\t// }\n\t} else {\n\t\treturn (\n\t\t\t<Card className=\"event-card\" title={item.name} bordered={true}>\n\t\t\t\t\t<Paragraph><b>Location: </b>{item.location}</Paragraph>\n\t\t\t\t\t<Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n\t\t\t\t\t<Paragraph><b>Description: </b>{item.description.substring(0, 50)}...</Paragraph>\n\t\t\t\t<p style={{color: '#1890ff'}}>>><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(item.id, viewmore)}>\n\t\t\t\t\tView More\n\t\t\t\t</Button></p>\n\t\t\t\t{joinButton}\n\t\t\t</Card>\n\t\t);\n\t}\n\n} export default EventCard; \n\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {Button, Typography, message, Select, Space} from 'antd';\nimport \"antd/dist/antd.css\";\nimport './Event.css';\nimport EventCard from '../components/EventCard';\nimport axiosAPI from \"../api/axiosApi\";\n\nconst { Option } = Select;\n\nconst OrgEvents = ({orgId}) => {\n    const [events, setEvents] = useState([]); \n    const [filterDisplay, setFilterDisplay] = useState([]);\n    const [attendeeCount, setAttendeeCount] = useState([]); \n\n    const getEventsByOrg = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get-by-org/\", {\n                params: {\n                    orgId: orgId,\n                }\n            });\n            setEvents(response.data);\n            setFilterDisplay(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setEvents, orgId]);\n\n    useEffect(() => {\n        getEventsByOrg();\n    }, [orgId, getEventsByOrg]);\n\n    const handleChange = e => {\n        let oldList = events;\n        if (e !== \"\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                event.name.toLowerCase().includes(e.toLowerCase())\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const virtualFilterChange = value => {\n        let oldList = events;\n        if (value == \"virtual\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                event.virtual\n            );\n            setFilterDisplay(newList);\n        } else if (value == \"inperson\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                !event.virtual\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    const openFilterChange = value => {\n        let oldList = events;\n        if (value == \"open\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                    (event.attendee_count < event.attendee_cap)\n            );\n            setFilterDisplay(newList);\n        } else if (value == \"filled\") {\n            let newList = [];\n            newList = oldList.filter(event =>\n                !(event.attendee_count < event.attendee_cap)\n            );\n            setFilterDisplay(newList);\n        } else {\n            setFilterDisplay(oldList);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={4}>Upcoming events</Typography.Title>\n            <Space>\n                <input onChange={e => handleChange(e.target.value)} placeholder=\"Search for events\" className=\"search\"/>\n                Filter by Virtual:<Select defaultValue=\"none\" style={{ width: 120 }} onChange={value => virtualFilterChange(value)} size=\"small\">\n                    <Option value=\"none\">Select All</Option>\n                    <Option value=\"virtual\">Virtual</Option>\n                    <Option value=\"inperson\">Not Virtual</Option>\n                </Select>\n                Filter by Open:<Select defaultValue=\"none\" style={{ width: 120 }} onChange={value => openFilterChange(value)} size=\"small\">\n                    <Option value=\"none\">Select All</Option>\n                    <Option value=\"open\">Open</Option>\n                    <Option value=\"filled\">Filled</Option>\n                </Select>\n            </Space> \n            <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-between\", overflowY: \"scroll\" }}>\n                {filterDisplay.map((item, i) => \n                    <EventCard key={i} item={item}/>\n                )}\n            </div>\n            \n        </React.Fragment>\n    );\n}; export default OrgEvents;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { Typography, Skeleton, Tag, Descriptions, PageHeader, Input } from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport \"antd/dist/antd.css\";\nimport { PlusOutlined } from '@ant-design/icons';\nimport { useRef } from 'react';\nimport { usePageView } from '../utils/googleAnalytics'\n\nconst { Paragraph, Title } = Typography;\n\nconst AboutUs = ({org}) => {\n    const [causes, setCauses] = useState([]);\n    const [inputVisible, setInputVisible] = useState(false);\n    const [inputValue, setInputValue] = useState('');\n    const inputRef = useRef();\n    usePageView('/about');\n\n    const getCausesByOrg = useCallback(async () => {\n        if (org?.id) {\n            try {\n                const response = await axiosAPI.get(\"organization/get-causes/\", {\n                    params: {\n                        orgId: org?.id\n                    }\n                });\n                setCauses(response.data);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    }, [setCauses, org]);\n\n    useEffect(() => {\n        getCausesByOrg();\n    }, [org, getCausesByOrg]);\n\n    const handleClose = useCallback(async (removedTag) => {\n        const tags = causes.filter(cause => cause.id !== removedTag);\n        setCauses(tags);\n    }, [causes, setCauses]);\n    \n    const handleInputConfirm = useCallback(() => {\n        const newCauses = \n            (inputValue && causes.map(cause => cause.name).indexOf(inputValue) === -1)\n                ? [...causes, {name: inputValue, id: newCauses.length}]\n                : causes;\n        setCauses(newCauses);\n        setInputVisible(false);\n        setInputValue(\"\");\n    }, [setCauses, setInputValue, setInputVisible, causes]);\n\n    const showInput = () => {\n        setInputVisible(true);\n    }\n\n    const tags = (\n        <React.Fragment>\n            {causes.map(c => \n                <Tag \n                    key={c.id} \n                    color=\"blue\" \n                    closable \n                    onClose={e => {\n                        e.preventDefault();\n                        handleClose(c.id);\n                    }}\n                >\n                    {c.name}\n                </Tag>\n            )}\n            {inputVisible && (\n                <Input\n                    ref={inputRef}\n                    type=\"text\"\n                    size=\"small\"\n                    style={{ width: 78 }}\n                    value={inputValue}\n                    onChange={(e) => {setInputValue(e.target.value)}}\n                    onBlur={handleInputConfirm}\n                    onPressEnter={handleInputConfirm}\n                />\n            )}\n            {!inputVisible && (\n                <Tag onClick={showInput} className=\"site-tag-plus\">\n                    <PlusOutlined /> New Tag\n                </Tag>\n            )}\n        </React.Fragment>\n    );\n\n    return (\n        <Skeleton loading={!org} active>\n            <PageHeader\n                title={`About ${org?.name}`}\n                className=\"site-page-header\"\n                tags={tags}\n            >\n                  <Descriptions>\n                    {org?.website && <Descriptions.Item label=\"Website\"><a href={org.website}>{org.website}</a></Descriptions.Item>}\n                    {org?.phone && <Descriptions.Item label=\"Telephone\">{org.phone}</Descriptions.Item>}\n                    {org?.email && <Descriptions.Item label=\"Email\"><a href={`mailto:${org.email}`}>{org.email}</a></Descriptions.Item>}\n                    {org?.address && <Descriptions.Item label=\"Street Address\">{org.address}</Descriptions.Item>}\n                </Descriptions>\n                <Paragraph editable>{org?.description}</Paragraph>\n            </PageHeader>\n        </Skeleton>\n    );\n}; \n\nexport default AboutUs;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Button, Popconfirm, Tooltip, message, Select } from 'antd';\nimport { usePageView } from '../utils/googleAnalytics'\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nfunction MemberPage({orgId}) {\n    const [members, setMembers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const currentUser = localStorage.getItem(\"user_id\");\n    usePageView('/members')\n    \n    const getMembers = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-members/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            response.data.forEach(member => member.key = member.id);\n            setMembers(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n\n    const deleteMember = useCallback(async (memberId) => {\n        try {\n            const response =  await axiosAPI.delete(\"member/delete/\", {\n                params: {\n                    member_id: memberId,\n                }\n            });\n            setMembers(members.filter(member => member.key !== memberId));\n            message.success(\"Member deleted\");\n        } catch(error) {\n            console.error(error);\n            message.error(\"Member could not be deleted.\");\n        }\n    }, [members]);\n\n    useEffect(() => {\n        if (orgId) {\n            getMembers(orgId);\n        }\n    }, [orgId]);\n\n    const columns = [\n        {\n            title: 'First',\n            dataIndex: ['user', 'first_name'],\n            key: 'first',\n        },\n        {\n            title: 'Last',\n            dataIndex: ['user', 'last_name'],\n            key: 'last',\n        },\n        {\n            title: 'Email',\n            dataIndex: ['user', 'email'],\n            key: 'email',\n        },\n        {\n            title: 'Role',\n            dataIndex: 'role',\n            key: 'role',\n            render: (_, record) => (\n                record.member_type === 1 ? \"Admin\" : \"Member\"\n            ),\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: (_, record) => (\n                \"Active\"\n            ),\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (_, record) => (\n                parseInt(currentUser) === record.user.id ?\n                (\n                    <Tooltip title=\"Cannot delete your own user.\">\n                        <Button type=\"primary\" danger disabled>\n                            Delete\n                        </Button>\n                    </Tooltip>\n                ) : (\n                    <Popconfirm title=\"Are you sure you want to delete this member?\" onConfirm={() => deleteMember(record.key)} okText=\"Yes\" cancelText=\"No\" disabled={parseInt(currentUser) === record.user.id}>\n                        <Button type=\"primary\" danger>\n                            Delete\n                        </Button>\n                    </Popconfirm>\n                )\n            )\n        }\n    ];\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Members</Title>\n            <Table columns={columns} dataSource={members} loading={loading}/>\n        </React.Fragment>\n    );\n};\n\n\nexport default MemberPage;","import React, {useState, useEffect, useCallback} from 'react';\nimport {Typography, Table} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\n\n\nconst OrgFeedback = ({isAdmin, orgId}) => {\n\n    const [info, setInfo] = useState([]); \n\n    const getFeedbackByOrg = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"eventFeedback/get-by-org/\", {\n                params: {\n                    orgId: orgId,\n                    isAdmin: isAdmin,\n                    userId: localStorage.getItem(\"user_id\"), \n                }\n            });\n            setInfo(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [orgId, isAdmin]);\n\n    useEffect(() => {\n        getFeedbackByOrg();\n    }, [getFeedbackByOrg, orgId]);\n\n    const columns = [\n    {\n    title: 'Event Name',\n    dataIndex: 'event__name',\n    key: 'event__name',\n    sorter: (a, b) => a.event__name.localeCompare(b.event__name),\n    },\n    {\n    title: 'Volunteer Name',\n    dataIndex: 'name',\n    key: 'name',\n    sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n    title: 'Volunteer Email',\n    dataIndex: 'username__email',\n    key: 'username__email',\n    sorter: (a, b) => a.username__email.localeCompare(b.username__email),\n    },\n    {\n    title: 'Overall Experience',\n    dataIndex: 'overall',\n    key: 'overall',\n    filters: [\n        {\n            text: 'Poor',\n            value: 'Poor',\n        },\n        {\n            text: 'Fair',\n            value: 'Fair',\n        },\n        {\n            text: 'Average',\n            value: 'Average',\n        },\n        {\n            text: 'Good',\n            value: 'Good',\n        },\n        {\n            text: 'Excellent',\n            value: 'Excellent',\n        },\n        ],\n            filterMultiple: true,\n            onFilter: (value, record) => record.overall === value,\n    },\n    {\n    title: 'Satisfaction',\n    dataIndex: 'satisfaction',\n    key: 'satisfaction',\n    filters: [\n        {\n            text: 'Very Dissatisfed',\n            value: 'Very Dissatisfied',\n        },\n        {\n            text: 'Dissatisfied',\n            value: 'Dissatisfied',\n        },\n        {\n            text: 'Neutral',\n            value: 'Neutral',\n        },\n        {\n            text: 'Satisfied',\n            value: 'Satisfied',\n        },\n        {\n            text: 'Very Satisfied',\n            value: 'Very Satisfied',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.satisfaction === value,\n    },\n    {\n    title: 'Recommend Likelihood',\n    dataIndex: 'likely',\n    key: 'likely',\n    filters: [\n        {\n            text: 'Very Unlikely',\n            value: 'Very Unlikely',\n        },\n        {\n            text: 'Somewhat Unlikely',\n            value: 'Somewhat Unlikely',\n        },\n        {\n            text: 'Neutral',\n            value: 'Neutral',\n        },\n        {\n            text: 'Somewhat Likely',\n            value: 'Somewhat Likely',\n        },\n        {\n            text: 'Very Likely',\n            value: 'Very Likely',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.likely === value,\n    },\n    {\n    title: 'Met Expectations',\n    dataIndex: 'expectations',\n    key: 'expectations',\n    filters: [\n        {\n            text: 'Yes',\n            value: 'Yes',\n        },\n        {\n            text: 'No',\n            value: 'No',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.expectations === value,\n    },\n    {\n    title: 'Future Volunteer',\n    dataIndex: 'future',\n    key: 'future',\n    filters: [\n        {\n            text: 'Yes',\n            value: 'Yes',\n        },\n        {\n            text: 'No',\n            value: 'No',\n        },\n        ],\n        filterMultiple: true,\n        onFilter: (value, record) => record.future === value,\n    },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={4}>Event Feedback</Typography.Title>\n            <Table \n            dataSource={info} \n            columns={columns}\n            expandedRowRender= {record =>\n                <p>\n                    <b>Event Details</b><br/>\n                    Name: {record.event__name}<br/>\n                    Location: {record.event__location}<br/>\n                    Date: {(new Date(record.event__begindate)).toLocaleString('en-US', options)} - {(new Date(record.event__enddate)).toLocaleString('en-US', options)}<br/><br/>\n                    <b>Additional Feedback</b><br/>\n                    What could we have done better?<br/>\n                    {record.better}<br/><br/>\n                    Is there anything else we should know about your volunteer experience?<br/>\n                    {record.experience}<br/>\n                </p>\n            }        \n            />\n        </React.Fragment>\n    );\n}; export default OrgFeedback;\n","import React from 'react';\nimport { Typography} from 'antd';\nimport Plotly from 'react-plotly.js';\n\nfunction NonprofitFunnel({ data}) {\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Summary</Typography.Title>\n                <Plotly data={[{\n                    type: 'funnel', \n                    y: [\"Number of Members\", \"Members who Attended Events\", \"Members who Provided Feedback\"], \n                    x: data}]} layout={{margin: {l: 250}, width:800}}/>\n        </React.Fragment>\n    )\n\n} export default NonprofitFunnel;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerLeaderboard({ data}) {\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        },\n        {\n            title: 'Events Attended',\n            dataIndex: 'count',\n            key: 'count',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.count - b.count,\n        },\n        {\n            title: 'Volunteer Hours',\n            dataIndex: 'total',\n            key: 'total',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.total - b.total,\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Volunteer Leaderboard</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                expandedRowRender = {record => <p style={{ margin: 0 }}><b>Events Attended: </b>{record.event_list}</p>}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default VolunteerLeaderboard;","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nfunction EventLeaderboard({data}) {\n    return (\n        <React.Fragment>      \n            <Plot\n                data={[\n                {type: 'pie', labels: data.ratings_arr[0], values: data.ratings_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Rating'} }\n            />\n\n            <Plot\n                data={[\n                {type: 'pie', labels: data.satisfactions_arr[0], values: data.satisfactions_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Satisfaction'} }\n            />\n            <Plot\n                data={[\n                {type: 'pie', labels: data.likely_arr[0], values: data.likely_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Recommend Likelihood'} }\n            />\n            <Plot\n                data={[\n                {type: 'pie', labels: data.expectations_arr[0], values: data.expectations_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Met Expectations'} }\n            />\n            <Plot\n                data={[\n                {type: 'pie', labels: data.future_arr[0], values: data.future_arr[1]},\n                ]}\n                layout={ {width: 360, height: 270, title: 'Future Volunteer'} }\n            />\n        </React.Fragment>\n    )\n\n\n} export default EventLeaderboard;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\nimport EventLeaderboardPlots from '../components/EventLeaderboardPlots';\n\nfunction EventLeaderboard({ data}) {\n\n    const columns = [\n        {\n            title: 'Event',\n            dataIndex: 'event__name',\n            key: 'event__name',\n        },\n        {\n            title: 'Volunteers',\n            dataIndex: 'count',\n            key: 'count',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.count - b.count,\n        },\n        {\n            title: 'Average Rating',\n            dataIndex: 'avg_rating',\n            key: 'avg_rating',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.count - b.count,\n        },\n        {\n            title: 'Average Satisfaction',\n            dataIndex: 'avg_satisfaction',\n            key: 'avg_satisfaction',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.total - b.total,\n        },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Event Leaderboard</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                expandedRowRender= {record => \n                    <p>\n                        <b>Event Details</b><br/>\n                        Name: {record.event__name}<br/>\n                        Location: {record.event__location}<br/>\n                        Date: {(new Date(record.event__begindate)).toLocaleString('en-US', options)} - {(new Date(record.event__enddate)).toLocaleString('en-US', options)}<br/><br/>\n\n                        <b>Attendes: </b>\n                        {record.attendees}<br/><br/>\n\n                        <EventLeaderboardPlots data={record}/>\n                    </p>\n                }\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default EventLeaderboard;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerBreakdown({ data}) {\n\n    const columns = [\n        { \n            title: '',\n            dataIndex: 'label',\n            key: 'label',\n            ellipsis: true,\n            render: (text: string) => <b>{text}</b>,\n        },\n        {\n          title: 'Count',\n          dataIndex: 'count',\n          key: 'count',\n          ellipsis: true,\n        },\n        {\n          title: 'Hours',\n          dataIndex: 'hours',\n          key: 'hours',\n          ellipsis: true,\n        },\n      ];\n\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Volunteer Breakdown</Typography.Title>\n            <Table \n                dataSource={data} \n                columns={columns}\n                expandedRowRender = {record => <p style={{ margin: 0 }}><b>Volunteer Names: </b>{record.name}</p>}\n                rowExpandable = {record => record.label !== 'Total'}\n                pagination={false}\n            />\n            <br/>\n            <br/>\n        </React.Fragment>\n    )\n\n\n} export default VolunteerBreakdown;","import React, {useState, useEffect, useCallback} from 'react';\nimport {Typography} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\nimport NonprofitFunnel from '../components/NonprofitFunnel.jsx';\nimport VolunteerLeaderboard from '../components/VolunteerLeaderboard';\nimport EventLeaderboard from '../components/EventLeaderboard';\nimport VolunteerBreakdown from '../components/VolunteerBreakdown';\nimport { usePageView } from '../utils/googleAnalytics'\n\nconst Analytics = ({orgId}) => {\n\n    const [funnel, setFunnel] = useState([0, 0, 0, 0])\n    const [breakdown, setBreakdown] = useState([]);\n    const [volunteers, setVolunteers] = useState([]);\n    const [events, setEvents] = useState([]);\n    usePageView('/analytics');\n\n    const getFunnel = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-funnel/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setFunnel(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]); \n\n    useEffect(() => {\n        if (orgId) {\n            getFunnel(orgId);\n        }\n    }, []);\n    \n    const getBreakdown = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-breakdown/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setBreakdown(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        if (orgId) {\n            getBreakdown(orgId);\n        }\n    }, []);\n    \n    const getVolunteers = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-leaderboard/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setVolunteers(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        if (orgId) {\n            getVolunteers(orgId);\n        }\n    }, []); \n\n    const getEvents = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/event-leaderboard/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setEvents(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        if (orgId) {\n            getEvents(orgId);\n        }\n    }, []);\n\n    return (\n      <React.Fragment>\n            <Typography.Title level={4}>Analytics</Typography.Title>\n                <NonprofitFunnel data ={funnel}/>\n                <VolunteerBreakdown data={breakdown}/>\n                <VolunteerLeaderboard data={volunteers}/>\n                <EventLeaderboard data={events}/>\n        </React.Fragment>\n    );\n};export default Analytics;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Button, Popconfirm, message, Row, Modal, Select } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { usePageView } from '../utils/googleAnalytics'\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nfunction InvitePage({orgId}) {\n    const [invites, setInvites] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const currentUser = localStorage.getItem(\"user_id\");\n    const [showModal, setShowModal] = useState(false);\n    const [modalButtonLoading, setModalButtonLoading] = useState(false);\n    const [invitedMembers, setInvitedMembers] = useState([]);\n    const [memberType, setMemberType] = useState(0);\n\n    usePageView('/invites')\n    const getInvites = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-invites/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            response.data.forEach(invite => invite.key = invite.id);\n            setInvites(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    const inviteMembers = useCallback(async () => {\n        try {\n            setModalButtonLoading(true);\n            await axiosAPI.post(\"member/invite/\", {\n                emails: invitedMembers,\n                member_type: memberType,\n                org_id: orgId,\n            });\n            setInvitedMembers([]);\n            getInvites();\n            message.success(\"Invitation sent\");\n        } catch(error) {\n            console.error(error);\n            message.error(\"Invitations could not be sent.\");\n        }\n        setModalButtonLoading(false);\n    }, [invitedMembers, getInvites, setInvitedMembers, memberType, orgId, setModalButtonLoading]);\n\n    const deleteInvite = useCallback(async (inviteId) => {\n        try {\n            const response =  await axiosAPI.delete(\"invite/delete/\", {\n                params: {\n                    invite_id: inviteId,\n                }\n            });\n            setInvites(invites.filter(invite => invite.key !== inviteId));\n            message.success(\"Invitation deleted\");\n        } catch(error) {\n            console.error(error);\n            message.error(\"Invitation could not be deleted.\");\n        }\n    }, [invites]);\n\n    useEffect(() => {\n        if (orgId) {\n            getInvites(orgId);\n        }\n    }, [orgId]);\n\n    const columns = [\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        },\n        {\n            title: 'Role',\n            dataIndex: 'role',\n            key: 'role',\n            render: (_, record) => (\n                record.member_type === 1 ? \"Admin\" : \"Member\"\n            ),\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: (_, record) => (\n                \"Active\"\n            ),\n        },\n        {\n            title: 'Resend',\n            key: 'resend',\n            render: (_, record) => (\n                <Popconfirm title=\"Are you sure you want to delete this member?\" onConfirm={() => {}} okText=\"Yes\" cancelText=\"No\">\n                    <Button type=\"primary\">\n                        Resend\n                    </Button>\n                </Popconfirm>\n            )\n        },\n        {\n            title: 'Delete',\n            key: 'delete',\n            render: (_, record) => (\n                <Popconfirm title=\"Are you sure you want to delete this invitation?\" onConfirm={() => deleteInvite(record.key)} okText=\"Yes\" cancelText=\"No\">\n                    <Button type=\"primary\" danger>\n                        Delete\n                    </Button>\n                </Popconfirm>\n            )\n        }\n    ];\n\n    return (\n        <React.Fragment>\n            <div>\n                <Row justify=\"space-between\">\n                    <Title level={4}>Outstanding invites</Title>\n                    <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => setShowModal(true)}>\n                        Invite new members\n                    </Button>\n                </Row>\n                <Table columns={columns} dataSource={invites} loading={loading}/>\n            </div>\n            <Modal\n                visible={showModal}\n                title=\"Invite new members\"\n                onOk={() => {}}\n                onCancel={() => setShowModal(false)}\n                footer={[\n                    <Button key=\"back\" onClick={() => setShowModal(false)}>\n                        Close\n                    </Button>,\n                    <Button key=\"submit\" type=\"primary\" loading={modalButtonLoading} onClick={inviteMembers}>\n                        Send\n                    </Button>,\n                ]}\n            >\n                <Select title=\"hello:\" defaultValue={0} style={{ width: '100%', marginBottom: 8 }} onChange={setMemberType} placeholder=\"Member Type\">\n                    <Option value={0}>Member</Option>\n                    <Option value={1}>Admin</Option>\n                </Select>\n                <Select mode=\"tags\" style={{ width: '100%' }} onChange={value => setInvitedMembers(value)} tokenSeparators={[',']} placeholder=\"Emails\" allowClear>\n                    {[]}\n                </Select>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\n\nexport default InvitePage;","import React from \"react\";\nimport Tag from \"antd/lib/tag\";\nimport \"antd/lib/tag/style/css\";\n\nconst statusMap = {\n  Complete: <Tag color=\"green\">Complete</Tag>,\n  Rejected: <Tag color=\"red\">Rejected</Tag>,\n  Pending: <Tag color=\"orange\">Pending Approval</Tag>,\n  None: <p></p>\n};\n\nexport const StatusTag = ({ status }) => statusMap[status];","import React, {useState, useCallback, useEffect} from 'react';\nimport { Upload, Button, Table, message } from 'antd';\nimport {StatusTag} from '../components/StatusTag';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nimport { UploadOutlined } from '@ant-design/icons';\n\nfunction UserFilesTable({orgId, fileList}) {\n    const [userFileList, setUserFileList] = useState([]);\n    const getUserFiles = useCallback(async (orgId) => {\n        try {\n             const response = await axiosAPI.get(\"clearances/get-user-files/\", {\n                 params: {\n                     userId: localStorage.getItem(\"user_id\"), \n                     orgId: orgId\n                 }\n             });\n            const files = response.data;\n            const formattedFiles = files.map(file => ({\n                uid: file.id, \n                orgFormId: file.org_file, \n                name: file.filled_form.split('/').slice(-1).pop(), \n                status: file.status,\n                url: file.filled_form,\n                comment: file.comment\n            }));\n            setUserFileList(formattedFiles);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        getUserFiles(orgId)\n    }, [orgId]);\n\n    const props = {\n        listType: 'text',\n        fileList: [],\n        onChange(info) {\n            let fl = [...info.fileList];\n            fl = fl.map(file => {\n                if (file.response) {\n                    // Component will show file.url as link\n                    file.url = file.response.data.filled_form;\n                }\n                return file;\n            });\n                \n            setUserFileList(fl);\n        },\n    };\n    \n    const columns = [\n        {\n            title: 'Incomplete File',\n            dataIndex: 'file',\n            key: 'file',\n            render: text => <a href={window.location.origin + \"/\" + text}>{text}</a>,\n        },\n        {\n            title: 'Your Uploaded File',\n            dataIndex: 'uploaded_file',\n            key: 'uploaded_file',\n            render: text => <a href={window.location.origin +  \"/\" + text}>{text}</a>,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: (_text, record) => <StatusTag status={record.status} />\n        },\n        {\n            title: 'Comment',\n            dataIndex: 'comment',\n            key: 'comment',\n            render: (text, _record) => <p>{text}</p> \n        },\n        {\n            title: 'Upload New File',\n            key: 'upload',\n            render: (record) => (\n                <Upload {...props} \n                    customRequest={async (options) => {\n                            const formData = new FormData();\n                            formData.append('org_file_id', record.key);\n                            formData.append('user_id', localStorage.getItem(\"user_id\"))\n                            formData.append('filled_form', options.file, options.file.name);\n                            formData.append('status', 'Pending');\n                            formData.append('comment', 'N/A');\n                            try {\n                                let data = await axiosAPI.post('clearances/upload-user-file', formData, {\n                                    headers: {\n                                    'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW'\n                                    }\n                                });\n                                options.onSuccess(data, options.file);\n                                getUserFiles(orgId);\n                                message.success('File uploaded');\n                            } catch (error) {\n                                message.success('File failed to upload');\n                                console.log(error)\n                            }\n                        }\n                    }\n                >\n                    <Button icon={<UploadOutlined/>}> Upload </Button>  \n                </Upload>\n            ),\n        },\n    ];\n\n    function getUserFileForOrgFile(infoType, oFormId) {\n        if ((userFileList.filter(ufile => ufile.orgFormId == oFormId)).length > 0) {\n            const userFile = userFileList.filter(ufile => ufile.orgFormId == oFormId)[0]\n            if (infoType == \"name\") {\n                return userFile.name;\n            } else if (infoType == \"status\") {\n                return userFile.status\n            } else if (infoType == \"comment\"){\n                return userFile.comment\n            }\n        }\n\n        if (infoType == \"status\") {\n            return \"None\";\n        }\n        return (null)\n    }\n    \n    const data = fileList.map((file,i) => ({\n        \"key\": file.uid, \n        \"file\": file.name,\n        \"uploaded_file\": getUserFileForOrgFile(\"name\", file.uid),\n        \"status\": getUserFileForOrgFile(\"status\", file.uid),\n        \"comment\": getUserFileForOrgFile(\"comment\", file.uid),\n    }))\n    \n    console.log(data)\n\n    return (\n        <div>\n           <Table columns={columns} dataSource={data}/>\n        </div>\n    );\n};\nexport default UserFilesTable;","import React, {useState, useCallback, useEffect} from 'react';\nimport { Upload, Button, message, Typography, Table } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport UserFilesTable from '../pages/UserFilesTable';\nimport { UploadOutlined } from '@ant-design/icons';\nconst { Title } = Typography;\n\nfunction ClearanceUpload({isAdmin, orgId, eId}) {\n    const [fileList, setFileList] = useState([]);\n\n    const getOrgFiles = useCallback(async (orgId) => {\n        try {\n            const response = await axiosAPI.get(\"clearances/get-org-files-for-event/\", {\n                params: {\n                    orgId: orgId, \n                    eventId: eId\n                }\n            });\n            const files = response.data;\n            console.log('files', files);\n            \n            const formattedFiles = files.map(file => ({\n                key: file.id, \n                uid: file.id, \n                name: file.url.split('/').slice(-1)[0].split('?')[0], \n                status: \"done\", \n                url: file.url,\n                event: file.event,\n                eventName: file.event__name\n            }));\n            console.log(formattedFiles)\n            setFileList(formattedFiles);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        getOrgFiles(orgId)\n    }, [orgId]);\n\n    const orgProps = {\n        listType: 'picture',\n        fileList: fileList,\n        onChange(info) {\n            let fl = [...info.fileList];\n            fl = fl.map(file => {\n                if (file.response) {\n                    // Component will show file.url as link\n                    file.url = file.response.data.empty_form;\n                }\n                return file;\n            });\n                \n            setFileList(fl);\n        },\n        customRequest: async function(options) {\n            const formData = new FormData();\n            formData.append('empty_form', options.file, options.file.name);\n            formData.append('orgId', orgId);\n            formData.append('eventId', eId);\n            try {\n                let data = await axiosAPI.post('clearances/upload-org-file', formData, {\n                    headers: {\n                    'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW'\n                    }\n                });\n                options.onSuccess(data, options.file);\n                message.success('File uploaded');\n            } catch (error) {\n                message.success('File failed to upload');\n                console.log(error)\n            }\n        },\n    };\n\n    return (\n        <div>\n            {isAdmin ? \n                <>\n                    <Upload {...orgProps}>\n                        <Button icon={<UploadOutlined/>}>Upload New Form</Button>  \n                    </Upload>\n                </> :\n                <UserFilesTable orgId={orgId} fileList={fileList} />\n            }\n           \n        </div>\n    );\n};\nexport default ClearanceUpload;\n\n    ","import React, {useState, useCallback, useEffect} from 'react';\nimport { Upload, Button, message, Typography, Table } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nimport ClearanceUpload from '../components/ClearanceUpload';\nimport { usePageView } from '../utils/googleAnalytics'\nconst { Title } = Typography;\n\nfunction Clearances({isAdmin, orgId}) {\n    const [loading, setLoading] = useState(true);\n    const [events, setEvents] = useState([]); \n    usePageView('/clearances')\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    const getEventsByOrg = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get-by-org/\", {\n                params: {\n                    orgId: orgId,\n                }\n            });\n\n            const data = response.data;\n            data.map(e => {\n                e.bdate = (new Date(e.begindate)).toLocaleString('en-US', options);\n                e.edate = (new Date(e.enddate)).toLocaleString('en-US', options);\n            });\n\n            setEvents(data);\n            setLoading(false);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setEvents, orgId]);\n\n    useEffect(() => {\n        getEventsByOrg();\n    }, [orgId, getEventsByOrg]);\n\n    const columns = [\n        {\n            title: 'Event',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Start Date',\n            dataIndex: 'bdate',\n            key: 'bdate',\n        },\n        {\n            title: 'End Date',\n            dataIndex: 'edate',\n            key: 'edate',\n        }\n    ];\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Manage clearances for upcoming events</Title>\n            <Table \n                columns={columns}\n                dataSource={events} \n                loading={loading}\n                expandedRowRender= {record => \n                    <ClearanceUpload isAdmin={isAdmin} orgId={orgId} eId={record.id} />\n            }/>\n        </React.Fragment>\n    );\n};\n\nexport default Clearances;","import React, {useState, useCallback, useEffect} from 'react';\nimport { Table, Radio, Typography } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nconst { Paragraph } = Typography;\n\nfunction OrgClearanceTable({orgId, eId}) {\n    const [rows, setRows] = useState([]);\n\n    function acceptOrReject(value, record) {\n        console.log(value.target.value)\n        console.log(record)\n\n        const status = value.target.value\n\n        try {\n            const response = axiosAPI.post(\"clearances/set-status-user-file/\", \n                {\n                    id: record.key, \n                    status: status,\n                }\n        );\n        } catch(error){\n            console.error(error)\n        }\n    };\n\n    function addComment(value, record) {\n        const comment = value\n\n        try {\n            const response = axiosAPI.post(\"clearances/set-status-user-file/\", \n                {\n                    id: record.key, \n                    comment: comment,\n                }\n            );\n            getUserFiles(orgId)\n        } catch(error) {\n            console.error(error)\n        }\n    };\n\n    const getUserFiles = useCallback(async (orgId) => {\n        try {\n            const response = await axiosAPI.get(\"clearances/get-user-files-for-org/\", {\n                params: {\n                    orgId: orgId, \n                    eventId: eId\n                }\n            });\n            const files = response.data;\n            const result = files.map((file,i) => ({\n                key: file.id, \n                user: file.user__email, \n                file: file.filled_form.split('/').slice(-1).pop(), \n                status: file.status,\n                comment: file.comment\n            }))\n\n            console.log(result)\n            setRows(result)\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        getUserFiles(orgId)\n    }, [orgId]);\n   \n    const columns = [\n        {\n            title: 'User',\n            dataIndex: 'user',\n            key: 'user',\n            render: text => <p>{text}</p>,\n        },\n        {\n            title: 'File',\n            dataIndex: 'file',\n            key: 'file',\n            render: (text, record) => <a href={\"http://localhost:8080/\" +text}>{text}</a>,\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record, index) => (\n                <Radio.Group defaultValue={record.status} onChange={(value) => acceptOrReject(value, record)} buttonStyle=\"solid\">\n                <Radio.Button value=\"Complete\">Accept</Radio.Button>\n                <Radio.Button value=\"Rejected\">Reject</Radio.Button>\n                </Radio.Group>\n            ),\n        },\n        {\n            title: 'Comment',\n            dataIndex: 'comment',\n            key: 'comment',\n            render: (text,record, index) => ( \n            (<div style={{ marginLeft: 4, flexGrow: 100 }}>\n                <Paragraph style={{ width: \"100%\" }} editable={{ onChange: (value) => addComment(value, record) }}>{record.comment}</Paragraph>\n            </div>))\n           \n        },\n    ];\n    \n    return (\n        <div>\n           <Table columns={columns} dataSource={rows} />\n        </div>\n    );\n};\nexport default OrgClearanceTable;","import React, {useState, useCallback, useEffect} from 'react';\nimport { Upload, Button, message, Typography, Table } from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\nimport OrgClearanceTable from './OrgClearanceTable';\nimport { usePageView } from '../utils/googleAnalytics'\nconst { Title } = Typography;\n\nfunction ManageVolunteerClearances({orgId}) {\n    const [loading, setLoading] = useState(true);\n    const [events, setEvents] = useState([]); \n    usePageView('/clearance-management');\n\n    const getEventsByOrg = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"events/get-by-org/\", {\n                params: {\n                    orgId: orgId,\n                }\n            });\n\n            const data = response.data;\n            data.map(e => {\n                e.bdate = (new Date(e.begindate)).toLocaleString('en-US', options);\n                e.edate = (new Date(e.enddate)).toLocaleString('en-US', options);\n            });\n\n            setEvents(data);\n            setLoading(false);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setEvents, orgId]);\n\n    useEffect(() => {\n        getEventsByOrg();\n    }, [orgId, getEventsByOrg]);\n\n    const columns = [\n        {\n            title: 'Event',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Start Date',\n            dataIndex: 'bdate',\n            key: 'bdate',\n        },\n        {\n            title: 'End Date',\n            dataIndex: 'edate',\n            key: 'edate',\n        }\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Manage uploaded clearances</Title>\n            <Table \n                columns={columns}\n                dataSource={events} \n                loading={loading}\n                expandedRowRender= {record => \n                    <OrgClearanceTable orgId={orgId} eId={record.id} />\n            }/>\n        </React.Fragment>\n    );\n};\nexport default ManageVolunteerClearances;","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Form, Input, Button} from 'antd';\nimport axiosAPI from '../api/axiosApi';\nimport { addAlert } from '../actionCreators.js';\nimport { useDispatch } from 'react-redux';\nimport './NewEmail.css';\n\nconst { TextArea } = Input;\n\nconst { Title } = Typography;\n\nfunction NewEmail({orgId}) {\n    const [members, setMembers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [checkedList, setCheckedList] = useState([]); \n    const dispatch = useDispatch();\n    \n    const getMembers = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"organization/get-members/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            response.data.forEach(member => member.key = member.id);\n            setMembers(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        if (orgId) {\n            getMembers(orgId);\n        }\n    }, [getMembers, orgId]);\n\n    const onChange = useCallback((_selectedRowKeys, selectedRows) => {\n        setCheckedList(selectedRows);\n    }, []);\n\n    \n    const columns = [\n        {\n            title: 'First',\n            dataIndex: ['user', 'first_name'],\n            key: 'first',\n            width: '25%',\n        },\n        {\n            title: 'Last',\n            dataIndex: ['user', 'last_name'],\n            key: 'last',\n            width: '25%',\n        },\n        {\n            title: 'Email',\n            dataIndex: ['user', 'email'],\n            key: 'email',\n            width: '25%',\n        },\n        {\n            title: 'Role',\n            dataIndex: 'role',\n            key: 'role',\n            render: (_, record) => (\n                record.member_type === 1 ? \"Admin\" : \"Member\"\n            ),\n            width: '25%',\n        },\n    ];\n\n    const onFinish = useCallback(async (values) => {\n        console.log(checkedList)\n        try {\n            await axiosAPI.post(\"member/email/\", {\n                subject: values.subject,\n                body: values.body,\n                membersList: checkedList,\n            });\n            dispatch(addAlert('Email sent', 'success'));\n        }\n        catch {\n            dispatch(addAlert('Email not sent', 'error'));\n        }\n    }, [dispatch, checkedList]);\n\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Email members</Title>\n\n            <Table \n                className = \"member-table\"\n                rowSelection={{ onChange }}\n                columns={columns} \n                dataSource={members} \n                loading={loading}/>  \n\n            <Form\n                name=\"org\"\n                className=\"org-form\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}> \n\n                <Form.Item\n                    name=\"subject\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Email subject is required.' }]}\n                >\n                    <Input placeholder=\"Email subject\" />\n                </Form.Item>\n            \n                <Form.Item\n                    name=\"body\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Email body is required.' }]}>\n                        <TextArea row={6} style={{ width: '100%' }} placeholder=\"Email body here...\" />\n                </Form.Item>\n\n                <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"org-form-button\">\n                    Send email\n                </Button>\n                </Form.Item>\n\n            </Form>\n        </React.Fragment>\n    );\n};\n\n\nexport default NewEmail;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Table, Typography, Button, Popconfirm, Tooltip, message, Select } from 'antd';\nimport { usePageView } from '../utils/googleAnalytics'\nimport axiosAPI from '../api/axiosApi';\nimport './NewOrg.css';\n\nconst { Title } = Typography;\n\nfunction Attendees({orgId}) {\n    const [attendees, setAttendees] = useState([]);\n    const [loading, setLoading] = useState(true);\n    usePageView('/attendees');\n    \n    const getAttendees = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"event/get-attendees/\", {\n                params: {\n                    org_id: orgId,\n                }\n            });\n            setAttendees(response.data);\n            setLoading(false);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [orgId]);\n\n    useEffect(() => {\n        getAttendees();\n    }, []);\n\n    const columns = [\n        {\n            title: 'Upcoming Event',\n            dataIndex: 'events__name',\n            key: 'events__name',\n        },\n        {\n            title: 'Attendees',\n            dataIndex: 'count',\n            key: 'count',\n        },\n        {\n            title: 'Cap',\n            dataIndex: 'events__attendee_cap',\n            key: 'events__attendee_cap',\n        },\n    ];\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Title level={4}>Attendees</Title>\n            <Table \n                columns={columns}\n                dataSource={attendees} \n                loading={loading}\n                expandedRowRender= {record => \n                    <p>\n                        <b>Event Details</b><br/>\n                        Name: {record.events__name}<br/>\n                        Location: {record.events__location}<br/>\n                        Date: {(new Date(record.events__begindate)).toLocaleString('en-US', options)} - {(new Date(record.events__enddate)).toLocaleString('en-US', options)}<br/><br/>\n                        \n                        <b>Attendees: </b>\n                        {record.attendees}\n                    </p>\n            }/>\n        </React.Fragment>\n    );\n};\n\n\nexport default Attendees;","import React, {useState, useEffect} from 'react';\nimport { Typography, Tabs } from 'antd';\nimport QAndAPage from './QAndAPage';\nimport OrgEvents from './OrgEvents';\nimport AboutUs from './AboutUs';\nimport MemberPage from './MemberPage';\nimport OrgFeedback from './OrgFeedback'; \nimport Analytics from './Analytics'; \nimport InvitePage from './InvitePage'; \nimport Clearances from './Clearances';\nimport ManageVolunteerClearances from './ManageVolunteerClearances'\nimport NewEmail from './NewEmail'\nimport Attendees from './Attendees';\nimport \"./OrgPage.css\";\n// import EventLandingPage from './EventLandingPage';\n\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nfunction OrgPage({member, orgId}) {\n    const [org, setOrg] = useState(null);\n    const [activeKey, setActiveKey] = useState(\"home\");\n    const isAdmin = member?.member_type === 1;\n\n    useEffect(() => {\n        if (orgId) {\n            if (member) {\n                setOrg(member.organization);\n            }\n            setActiveKey(\"home\")\n        }\n    }, [setActiveKey, orgId, member]);\n\n    return (\n        <React.Fragment>\n            {org && <Title style={{ textAlign: \"center\" }} level={2}>{org.name}</Title>}\n            <Tabs activeKey={activeKey} onChange={setActiveKey} style={{ height: \"100%\" }}>\n                <TabPane tab=\"Home\" key=\"home\" style={{ height: \"100%\" }}>\n                    <AboutUs org={org} />\n                </TabPane>\n                {isAdmin &&\n                     <TabPane tab=\"Invites\" key=\"invites\">\n                        <InvitePage orgId={orgId} />\n                    </TabPane>\n                }\n                <TabPane tab=\"Events\" key=\"events\">\n                    <OrgEvents orgId={orgId} viewmore={false} eventId={-1}/>\n                </TabPane>\n                <TabPane tab=\"Event Clearances\" key=\"clearance\">\n                    <Clearances isAdmin={isAdmin} orgId={orgId} />\n                </TabPane>\n                {isAdmin &&\n                <TabPane tab=\"Attendees\" key=\"attendees\">\n                    <Attendees orgId={orgId} />\n                </TabPane>\n                }\n                {isAdmin &&\n                    <TabPane tab=\"Attendee Clearances\" key=\"clearance_table\">\n                        <ManageVolunteerClearances orgId={orgId} />\n                    </TabPane> \n                }\n                <TabPane tab=\"Feedback\" key=\"feedback\">\n                    <OrgFeedback isAdmin={member?.member_type} orgId={orgId} />\n                </TabPane>\n                {isAdmin &&\n                <TabPane tab=\"Analytics\" key=\"analytics\">\n                    <Analytics orgId={orgId} />\n                </TabPane>\n                }\n                <TabPane tab=\"FAQ\" key=\"faq\">\n                    <QAndAPage isAdmin={isAdmin} orgId={orgId} />\n                </TabPane>\n                {isAdmin &&\n                     <TabPane tab=\"Members\" key=\"members\">\n                        <MemberPage orgId={orgId} />\n                    </TabPane>\n                }\n                {isAdmin &&\n                    <TabPane tab=\"Communication\" key=\"member_emails\">\n                        <NewEmail orgId={orgId} />\n                    </TabPane> \n                }\n            </Tabs>\n        </React.Fragment>\n    );\n    \n};\n\n\nexport default OrgPage;","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerEventLeaderboard({ data}) {\n\n    const columns = [\n        {\n            title: 'Event',\n            dataIndex: 'event__name',\n            key: 'event__name',\n        },\n        {\n            title: 'Nonprofit',\n            dataIndex: 'event__organizations__name',\n            key: 'event__organizations__name',\n        },\n        {\n            title: 'Rating',\n            dataIndex: 'overall',\n            key: 'overall',\n            sorter: (a, b) => a.overall - b.overall,\n            defaultSortOrder: 'descend',\n        },\n        {\n            title: 'Satisfaction',\n            dataIndex: 'satisfaction',\n            key: 'satisfaction',\n            sorter: (a, b) => a.satisfaction - b.satisfaction,\n            defaultSortOrder: 'descend',\n        },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Event Leaderboard</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default VolunteerEventLeaderboard;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction NonprofitBreakdown({ data}) {\n\n    const columns = [\n        {\n            title: 'Nonprofit',\n            dataIndex: 'events__organizations__name',\n            key: 'events__organizations__name',\n        },\n        {\n            title: 'Events',\n            dataIndex: 'count',\n            key: 'count',\n            sorter: (a, b) => a.count - b.count,\n            defaultSortOrder: 'descend',\n        },\n        {\n            title: 'Hours',\n            dataIndex: 'hours',\n            key: 'hours',\n            sorter: (a, b) => a.hours - b.hours,\n            defaultSortOrder: 'descend',\n        },\n    ];\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Nonprofit Breakdown</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                expandedRowRender = {record => <p style={{ margin: 0 }}><b>Events Attended: </b>{record.events}</p>}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default NonprofitBreakdown;\n\n","import React from 'react';\nimport { Typography, Table} from 'antd';\n\nfunction VolunteerSummary({ data}) {\n\n    const columns = [\n        {\n            title: '',\n            dataIndex: 'label',\n            key: 'label',\n            ellipsis: true,\n            render: (text: string) => <b>{text}</b>,\n        },\n        {\n          title: 'Nonprofits',\n          dataIndex: 'nonprofits',\n          key: 'nonprofits',\n          ellipsis: true,\n        },\n        {\n          title: 'Events',\n          dataIndex: 'events',\n          key: 'events',\n          ellipsis: true,\n        },\n        {\n            title: 'Hours',\n            dataIndex: 'hours',\n            key: 'hours',\n            ellipsis: true,\n          },\n      ];\n\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Summary</Typography.Title>\n            <Table \n                dataSource={data} \n                columns={columns}\n                expandedRowRender = {record => \n                    <p style={{ margin: 0 }}>\n                        <b>Nonprofits: </b>{record.nonprofits_list}<br/>\n                        <b>Events: </b>{record.events_list}<br/>\n                    </p>\n                }\n                pagination={false}\n            />\n            <br/>\n            <br/>\n        </React.Fragment>\n    )\n\n\n} export default VolunteerSummary;","import React from 'react';\nimport { Typography, Table, Progress} from 'antd';\n\nfunction VolunteerGoals({ data}) {\n\n    const columns = [\n        {\n            title: 'Start Date',\n            dataIndex: 'begindate',\n            key: 'begindate',\n            defaultSortOrder: 'descend'\n        },\n        {\n            title: 'End Date',\n            dataIndex: 'enddate',\n            key: 'enddate',\n            defaultSortOrder: 'ascend'\n        },\n        {\n            title: 'Hours Completed',\n            dataIndex: 'completed',\n            key: 'completed',\n        },\n        {\n            title: 'Goal Hours',\n            dataIndex: 'hours',\n            key: 'hours',\n        },\n        {\n            title: 'Progress',\n            dataIndex: 'progress',\n            key: 'progress',\n            render: (_, record) => (\n                <Progress percent={record.progress}/>\n            ),\n        },\n    ];\n\n\n    return (\n        <React.Fragment>\n            <Typography.Title level={5}>Goals</Typography.Title>\n            <Table\n                columns={columns}\n                pagination={{ pageSize: 5 }}\n                dataSource={data} />\n        </React.Fragment>\n    )\n\n\n} export default VolunteerGoals;\n\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {Typography} from 'antd';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\nimport VolunteerEventLeaderboard from '../components/VolunteerEventLeaderboard';\nimport NonprofitBreakdown from '../components/NonprofitBreakdown';\nimport VolunteerSummary from '../components/VolunteerSummary';\nimport VolunteerGoals from '../components/VolunteerGoals';\n\nconst VolunteerAnalytics = () => {\n\n    const user = localStorage.getItem(\"user_id\");\n\n    const [summary, setSummary] = useState([]);\n    const [goals, setGoals] = useState([]);\n    const [nonprofits, setNonprofits] = useState([]);\n    const [events, setEvents] = useState([]);\n    \n    const getSummary = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-summary/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setSummary(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n            getSummary();\n    }, []);\n\n    const getGoals = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/get-volunteer-goals/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setGoals(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n            getGoals();\n    }, []);\n    \n    const getNonprofits = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/nonprofit-breakdown/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setNonprofits(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n            getNonprofits();\n    }, []);\n    \n    const getEvents = useCallback(async () => {\n        try {\n            const response =  await axiosAPI.get(\"analytics/volunteer-event-leaderboard/\", {\n                params: {\n                    user: user,\n                }\n            });\n            setEvents(response.data);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [user]);\n\n    useEffect(() => {\n            getEvents();\n    }, []);\n      \n\n    return (\n      <React.Fragment>\n            <Typography.Title level={2}>Analytics</Typography.Title>\n            <VolunteerSummary data={summary}/>\n            <VolunteerGoals data={goals} />\n            <NonprofitBreakdown data={nonprofits}/>\n            <VolunteerEventLeaderboard data={events}/> \n        </React.Fragment>\n    );\n};export default VolunteerAnalytics;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport { Calendar, Typography , Button, Popover, message} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\n\nconst { Paragraph } = Typography;\n\nfunction VolunteerCalendarCard ({item}){\n    const [vis, setVisible] = useState([false]); \n    const [isLoading, setIsLoading] = useState(false);\n\tconst [viewmore, setViewmore] = useState(false);\n\tconst [attendeeCount, setAttendeeCount] = useState(0);\n    \n    const toggleVisible = () => {\n        setVisible(!vis);\n    };\n\n    const onClick = useCallback(async (event_id) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tawait axiosAPI.post(\"attendees/delete/\", {\n\t\t\t\tuser_id: localStorage.getItem(\"user_id\"),\n\t\t\t\tevent: event_id,\n\t\t\t});\n\t\t\tmessage.success(\"Unjoined event\")\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = \"Unjoin failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, []);\n\n    const onClickViewmore = useCallback(async (viewmore) => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tconst response = await axiosAPI.get(\"events/get-event-attendee-count/\", {\n                params: {\n\t\t\t\t\tevent: item.events__id\n                }\n\t\t\t});\n\t\t\tsetAttendeeCount(response.data);\n\t\t\tsetViewmore(!viewmore);\n\t\t}\n\t\tcatch {\n\t\t\tconst errMsg = \"Viewmore failed\";\n\t\t\tmessage.error(errMsg);\n\t\t}\n\t\tsetIsLoading(false);\n    }, []);\n\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    const begindate = new Date(item.events__begindate)\n\tconst enddate = new Date(item.events__enddate)\n    const virtual = item.events__virtual ? \"Yes.\" : \"No.\";\n    \n    if (viewmore) {\n    \treturn (\n\t\t\t<Popover \n                content={\n                    <div>\n                        <Typography.Title level={4}>{item.events__name}</Typography.Title>\n                        <Paragraph><b>Location: </b>{item.events__location}</Paragraph>\n                        <Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n                        <Paragraph><b>Description: </b>{item.events__description}</Paragraph>\n                        <Paragraph><b>Virtual? </b>{virtual}</Paragraph>\n                        <Paragraph><b>Instructions: </b>{item.events__instructions}</Paragraph>\n                        <Paragraph><b>No. of Attendees: </b>{attendeeCount}/{item.events__attendee_cap}</Paragraph>\n                        <p style={{color: '#1890ff'}}>>><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(viewmore)}>\n                            View Less\n                        </Button></p>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.events__id)} loading={isLoading}>\n                            Unjoin\n                        </Button>\n                        <a onClick={toggleVisible}>\n                            Close\n                        </a>\n                    </div>}\n                trigger=\"click\"\n                visible={!vis}\n            >\n                <Button type=\"link\" className=\"event-viewmore-form-button\" onClick={toggleVisible}>\n                    > {item.events__name}\n                </Button>\n            </Popover>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Popover \n                content={\n                    <div>\n                        <Typography.Title level={4}>{item.events__name}</Typography.Title>\n                        <Paragraph><b>Location: </b>{item.events__location}</Paragraph>\n                        <Paragraph><b>Date: </b>{begindate.toLocaleString('en-US', options)} - {enddate.toLocaleString('en-US', options)}</Paragraph>\n                        <Paragraph><b>Description: </b>{item.events__description.substring(0, 50)}...</Paragraph>\n                        <p style={{color: '#1890ff'}}><Button type=\"link\" className=\"event-viewmore-form-button\" onClick={() => onClickViewmore(viewmore)}>\n                            View More\n                        </Button></p>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"event-form-button\" onClick= {() => onClick(item.events__id)} loading={isLoading}>\n                            Unjoin\n                        </Button>\n                        <a onClick={toggleVisible}>\n                            Close\n                        </a>\n                    </div>}\n                trigger=\"click\"\n                visible={!vis}\n            >\n                <Button type=\"link\" className=\"event-viewmore-form-button\" onClick={toggleVisible}>\n                    > {item.events__name}\n                </Button>\n            </Popover>\n\t\t);\n\t}\n\t\n\n\n} export default VolunteerCalendarCard; \n\n","import React, {useState, useEffect, useCallback} from 'react';\nimport { Calendar, Typography , Button, Popover} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport VolunteerCalendarCard from './VolunteerCalendarCard';\n\nconst VolunteerCalendar = () => {\n    const [events, setEvents] = useState([]); \n\n    const getVolunteerEvents = useCallback(async () => {\n        try {\n            const response = await axiosAPI.get(\"attendees/get-volunteer-events/\", {\n                params: {\n                    user_id: localStorage.getItem(\"user_id\"),\n                }\n            });\n            setEvents(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }, []);\n\n    useEffect(() => {\n        getVolunteerEvents();\n    }, []);\n\n    function getListData(value) {\n        let listData;\n        listData = events.filter(events => {\n            const bdate = new Date(events.events__begindate);\n            const edate = new Date(events.events__enddate);\n\n            console.log(\"date issue \" + value.year());\n            // console.log(\"edate \" + edate.getFullYear());\n\n            return ((value.month() <= edate.getMonth() && value.month() >= bdate.getMonth())\n                && (value.date() <= edate.getDate() && value.date() >= bdate.getDate())\n                && (value.year() <= edate.getFullYear() && value.year() >= bdate.getFullYear()));\n        })\n        return listData || [];\n    }\n\n    function getMonthData(value) {\n        let monthData;\n        monthData = events.filter(events => {\n            const bdate = new Date(events.events__begindate);\n            const edate = new Date(events.events__enddate);\n            // console.log(\"date issue \" + value.year());\n            // console.log(\"edate \" + edate.getFullYear());\n            return ((value.month() <= edate.getMonth() && value.month() >= bdate.getMonth())\n                && (value.year() <= edate.getFullYear() && value.year() >= bdate.getFullYear()));\n        })\n\n        return monthData || [];\n    }\n\n    function dateCellRender(value) {\n        const listData = getListData(value);\n        return (\n          <ul className=\"events\">\n            {listData.map((item, i) => (\n                <li key={i}>\n                    <VolunteerCalendarCard key={i} item={item}/>\n                </li>\n            ))}\n          </ul>\n        );\n      }\n\n    function monthCellRender(value) {\n        const monthData = getMonthData(value);\n        return (\n            <ul className=\"events\">\n            {monthData.map((item, i) => (\n                <li key={i}>\n                    <VolunteerCalendarCard key={i} item={item}/>\n                </li>\n            ))}\n          </ul>\n        );\n      }\n\n    return (\n        <div align=\"center\">\n            <Typography.Title level={2}>View My Events</Typography.Title>\n            <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\n        </div>\n    );\n};\n\nexport default VolunteerCalendar;  \n\n","import React, { useCallback } from 'react';\nimport { Form, Input, Button, DatePicker} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport { addAlert } from '../actionCreators.js';\nimport { useDispatch } from 'react-redux';\nimport \"antd/dist/antd.css\";\nimport \"./NewOrgForm.css\";\n\nconst { RangePicker } = DatePicker;\n\nconst NewGoalForm = () => {\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await axiosAPI.post(\"user/create-goal/\", {\n                user_id: localStorage.getItem(\"user_id\"),\n                hours: values.hours,\n                date: values.date,\n            });\n            dispatch(addAlert('Goal created', 'success'));\n        }\n        catch {\n            dispatch(addAlert('Goal creation failed', 'error'));\n        }\n    }, [dispatch]);\n\n    return (\n        <Form\n            name=\"goal\"\n            className=\"goal-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        > \n            <Form.Item\n                    name=\"hours\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Hours is required and must be a number.'}]}\n                >\n                    <Input style={{ width: '100%' }} placeholder=\"Volunteer Hours\" type=\"tel\"/>\n            </Form.Item>\n            <Form.Item\n                name=\"date\"\n                hasFeedback\n                rules={[{ required: true, message: 'Date is required.' }]}\n            >\n                <RangePicker style={{ width: '100%' }} />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"org-form-button\">\n                    Set volunteering goal\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default NewGoalForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport NewGoalForm from '../forms/NewGoalForm';\nimport './NewGoal.css';\n\nconst NewGoal = () => {\n    return (\n        <div className='goal-container'>\n            <Typography.Title level={2}>Set volunteering goal</Typography.Title>\n            <NewGoalForm />\n        </div>\n    );\n};\n\n\nexport default NewGoal;","import React from \"react\";\nimport NewOrg from \"../pages/NewOrg\";\nimport Settings from \"../pages/Settings\";\nimport NewEvent from \"../pages/NewEvent\";\nimport OrgPage from \"../pages/OrgPage\"\nimport VolunteerAnalytics from \"../pages/VolunteerAnalytics\"\nimport VolunteerCalendar from \"../pages/VolunteerCalendar\"\nimport NewGoal from \"../pages/NewGoal\"\n\n\nconst FeedContent = ({member, context}) => {\n    switch(context) {\n        case \"create-org\":\n            return (<NewOrg />);\n        case \"settings\":\n            return (<Settings />);\n        case \"create-event\":\n            return (<NewEvent />);\n        case \"set-goals\":\n            return (<NewGoal />);\n        case \"calendar\":\n            return (<VolunteerCalendar />); \n        case \"view-analytics\":\n            return (<VolunteerAnalytics />); \n        default:\n            const orgId = parseInt(context)\n            if (isNaN(orgId)) {\n                return (<NewOrg />);\n            } else {\n                const orgMember = member.filter(m => m.organization.id === orgId)[0]\n                return <OrgPage member={orgMember} orgId={orgId}/>\n            } \n    }\n  }\n  \n  export default FeedContent;","import React, { useState, useCallback, useEffect } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { Alert, Layout } from 'antd';\nimport { removeAlert } from '../actionCreators.js';\nimport Sidebar from \"../components/Sidebar\";\nimport FeedContent from \"../components/FeedContent\";\nimport axiosAPI from '../api/axiosApi';\n\nconst { Content, Sider } = Layout;\n\nconst Feed = () => {\n  const [context, setContext] = useState([]);\n  const [member, setMember] = useState([]);\n  const [selectedKeys, setSelectedKeys] = useState([]);\n  const setContextFromSidebar = (newContext) => {\n    setContext(newContext);\n  }\n  const alerts = useSelector(state => state.alerts, shallowEqual);\n  const dispatch = useDispatch();\n\n  const onClose = useCallback((id) => {\n    setTimeout(() => dispatch(removeAlert(id)), 500);\n  }, [dispatch]);\n\n  const alertList = alerts.map(alert => \n    <Alert\n      key={alert.id}\n      type={alert.alert_type}\n      message={alert.message}\n      banner\n      closable\n      onClose={() => onClose(alert.id)}\n    />\n  );\n\n  const getMember = useCallback(async () => {\n    try {\n         const response = await axiosAPI.get(\"user/get-member/\", {\n             params: {\n                 user_id: localStorage.getItem(\"user_id\"), \n             }\n         });\n        const member = response.data;\n        if (member.length > 0) {\n            setMember(member)\n            setSelectedKeys([member[0]?.organization?.id.toString()])\n        } else {\n            setSelectedKeys([\"create\"])\n        }\n    } catch(error) {\n        console.error(error);\n    }\n  }, [setSelectedKeys, setMember])\n\n  useEffect(() => {\n    getMember()\n  }, [getMember]);\n\n  return (\n    <Layout style={{ minHeight:\"100vh\" }}>\n      <Sider width={240} style={{ background: '#fff' }}>\n        <Sidebar selectedKeys={selectedKeys} setSelectedKeys={setSelectedKeys} member={member} setFeedContext={setContextFromSidebar}/>\n      </Sider>\n      <Layout>\n        {alertList}\n        <Layout style={{ padding: '24px', height: \"100%\"  }}>\n          <Content style={{ background: '#fff', padding: 24, margin: 0, display: \"flex\", flexDirection: \"column\" }}>\n            <FeedContent member={member} context={context}/>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Feed;","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport { LockOutlined } from '@ant-design/icons';\nimport { registerFromInvite } from '../api/authenticationApi';\nimport \"antd/dist/antd.css\";\nimport \"./AuthForm.css\"\n\n\nconst InviteAuthForm = ({invite}) => {\n    const history = useHistory();\n\n    const onFinish = useCallback(async (values) => {\n        try {\n            await registerFromInvite(invite.email, values.first_name, values.last_name, values.password, invite.id)\n            history.push('/login')\n        } catch (error) {\n            console.error(error)\n        }\n    }, [history, invite]);\n\n  return (\n    <React.Fragment>\n        <Form\n            name=\"auth\"\n            className=\"auth-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >  \n            <Form.Item>\n                <Input.Group compact>\n                    <Form.Item\n                        name=\"first_name\"\n                        noStyle\n                        rules={[{ required: true, message: 'First name is required' }]}\n                    >\n                        <Input style={{ width: '50%' }} placeholder=\"First name\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"last_name\"\n                        noStyle\n                        rules={[{ required: true, message: 'Last name is required' }]}\n                    >\n                        <Input style={{ width: '50%' }} placeholder=\"Last name\" />\n                    </Form.Item>\n                </Input.Group>\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Password is a required field.' },\n                    { min: 12, message: \"Password must be at least 12 characters long.\"},\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n            </Form.Item>\n            <Form.Item\n                name=\"confirm\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                    { required: true, message: 'Please confirm your password.' },\n                    ({ getFieldValue }) => ({\n                        validator(rule, value) {\n                            if (!value || getFieldValue('password') === value) {\n                            return Promise.resolve();\n                            }\n                            return Promise.reject('Passwords do not match.');\n                        },\n                    }),\n                ]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\">\n                    Create Account\n                </Button>\n            </Form.Item>\n        </Form>\n    </React.Fragment>\n  );\n};\n\nexport default InviteAuthForm;","import React, { useCallback } from 'react';\nimport { Layout, Typography, Button, Space, Skeleton } from 'antd';\nimport InviteAuthForm from '../forms/InviteAuthForm';\nimport { isAuthenticated } from '../api/authenticationApi';\nimport { useHistory } from 'react-router-dom';\nimport LoginLogo from '../assets/login.svg';\nimport RegisterLogo from '../assets/register.svg';\nimport axiosAPI from '../api/axiosApi';\nimport './Auth.css';\n\nconst InviteAuth = ({isRegister, invite, user}) => {\n    const title = `Join ${invite?.organization?.name ?? \"Organization\"}`;\n    const info = `${isRegister ? \"Welcome!\" : \"Hey there!\"} You've been invited to join ${invite?.organization?.name ?? \"a new organization\"} on VolunteerSense.\n    ${isRegister ? \"Get started my making an account.\" : \"Do you want to join this organization?\"}`;\n    const history = useHistory();\n    const logo = isRegister ? RegisterLogo: LoginLogo;\n\n    const acceptInvite = useCallback(async () => {\n        try {\n            const response = await axiosAPI.post(\"invite/accept/\", {\n                invite_id: invite.id,\n                user_id: user.id\n            });\n            history.push(\"/login\")\n        } catch (error) {\n            console.error(error);\n        }\n    }, [user, invite]);\n\n    const declineInvite = useCallback(async () => {\n        try {\n            const response = await axiosAPI.delete(\"invite/reject/\", {\n                params: {\n                    invite_id: invite.id,\n                }\n            });\n            history.push(\"/login\")\n        } catch (error) {\n            console.error(error);\n        }\n    }, [user, invite]);\n\n    return (\n        <Layout style={{ height: \"100vh\" }}>\n            <Layout.Content className=\"auth-content\">\n                <div className='auth-container'>\n                    <Skeleton active loading={!invite} paragraph={false}>\n                        <Typography.Title level={2}>{title}</Typography.Title>\n                    </Skeleton>\n                    <Skeleton active loading={!invite} title={false}>\n                        <Typography.Paragraph level={2}>{info}</Typography.Paragraph>\n                    </Skeleton>\n                    <img \n                        className=\"auth-logo\"\n                        src={logo} \n                        alt={title + \" logo\"}\n                    />\n                    {isRegister ? \n                        (\n                            <InviteAuthForm invite={invite}/>\n                        ) :\n                        (\n                            <Space style={{ width: '100%'}}>\n                                <Button style={{ width: 196 }} type=\"primary\" onClick={acceptInvite}>Join</Button>\n                                <Button style={{ width: 196 }} type=\"primary\" danger onClick={declineInvite}>Decline Invitation</Button>\n                            </Space>\n                        )\n                    }\n                </div>\n            </Layout.Content>\n        </Layout>\n    );\n};\n\n\nexport default InviteAuth;","import React, {useState, useEffect, useCallback} from 'react';\nimport { Result, Button, Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\nimport InviteAuth from '../pages/InviteAuth';\n\nconst AuthState = {\n    LOADING: 1,\n    NEW_USER: 2,\n    RETURNING_USER: 3,\n    FAILURE: 4\n };\n\nconst InviteNoAuth = () => {\n\n    const [loadingState, setLoadingState] = useState(AuthState.LOADING); \n    const [user, setUser] = useState(null);\n    const [invite, setInvite] = useState(null);\n\n    useEffect(() => {\n        validate();\n    }, []);\n\n    const validate = useCallback(async () => {\n        try {\n            const queryString = window.location.search;\n            const params = queryString.split(/[?&=]/);\n            var token = \"\";\n            for (var i = 0; i < params.length - 1; i++) {\n                if (params[i] === \"rt\") {\n                    token = params[i+1];\n                    break;\n                }\n            }\n            if (token !== \"\") {\n                const url = `invite/validate/${queryString}`;\n                const response = await axiosAPI.get(url);\n                if (response.status === 200) {\n                    console.log(response.data.user)\n                    if (response.data.user.email !== \"\") {\n                        setLoadingState(AuthState.RETURNING_USER);\n                        setUser(response.data.user)\n                    } else {\n                        setLoadingState(AuthState.NEW_USER);\n                    }\n                    setInvite(response.data.invite)\n                } else {\n                    setLoadingState(AuthState.FAILURE);\n                }\n            }\n            else {\n                setLoadingState(AuthState.FAILURE);\n            }\n        } catch (error) {\n            setLoadingState(AuthState.FAILURE);\n        }\n    }, [setLoadingState])\n\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n    switch(loadingState) {\n        case AuthState.FAILURE:\n            return (\n                <Result\n                    status=\"error\"\n                    title=\"Failed to join organization\"\n                    subTitle=\"Your invitation token may be expired, or otherwise invalid. Contact the group administrator to receive another invitation.\"\n                    extra={[\n                        <Button key=\"home\" href=\"/\">Return home</Button>,\n                    ]}\n                />\n            );\n        case AuthState.LOADING:\n            return (\n                <Spin indicator={antIcon} />\n            );\n        default:\n            return (\n                <InviteAuth isRegister={loadingState === AuthState.NEW_USER} invite={invite} user={user}/>\n            );\n    }\n\n}\n\nexport default InviteNoAuth;\n","import React, {useState, useEffect} from 'react';\nimport { Result, Button, Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport \"antd/dist/antd.css\";\nimport axiosAPI from \"../api/axiosApi\";\n\nconst AuthState = {\n    LOADING: 1,\n    SUCCESS: 2,\n    FAILURE: 3\n };\n\nconst Activate = () => {\n\n    const [loadingState, setLoadingState] = useState(AuthState.LOADING); \n\n    useEffect(() => {\n        activate();\n    }, []);\n\n    const activate = async () => {\n        try {\n            const queryString = window.location.search;\n            const url = `users/activate/${queryString}`;\n            await axiosAPI.get(url);\n            setLoadingState(AuthState.SUCCESS);\n        } catch (error) {\n            setLoadingState(AuthState.FAILURE);\n        }\n    }\n\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n    switch(loadingState) {\n        case AuthState.SUCCESS:\n            return (\n                <Result\n                    status=\"success\"\n                    title=\"Successfully activated account\"\n                    extra={[\n                        <Button type=\"primary\" key=\"login\" href=\"/login\">\n                            Login\n                        </Button>,\n                        <Button key=\"home\" href=\"/\" >Return home</Button>,\n                    ]}\n                />\n            );\n        case AuthState.FAILURE:\n            return (\n                <Result\n                    status=\"error\"\n                    title=\"Failed to activate account\"\n                    subTitle=\"Your activation token may be expired, or otherwise invalid.\"\n                    extra={[\n                        <Button type=\"primary\" key=\"resend\" href=\"/\">\n                            Resend confirmation email\n                        </Button>,\n                        <Button key=\"home\" href=\"/\">Return home</Button>,\n                    ]}\n                />\n            );\n        default:\n            return (\n                <Spin indicator={antIcon} />\n            );\n    }\n\n}\n\nexport default Activate;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button, Radio} from 'antd';\nimport axiosAPI from \"../api/axiosApi\";\nimport { useDispatch } from 'react-redux';\nimport { addAlert } from '../actionCreators.js';\nimport \"antd/dist/antd.css\";\nimport \"./EventFeedbackForm.css\"\n\nconst {TextArea} = Input;\n\nconst EventFeedbackForm = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch();\n\n    const onFinish = useCallback(async (values) => {\n        setIsLoading(true);\n        try {\n            await axiosAPI.post(\"eventFeedback/create/\", {\n                id: new URLSearchParams(window.location.search).get('attendee_id'),\n                overall: values.overall,\n                satisfaction: values.satisfaction,\n                likely: values.likely,\n                expectations: values.expectations,\n                future: values.future,\n                better:values.better,\n                experience:values.experience,\n            });\n            console.log('here feedback'); \n            dispatch(addAlert('Feedback submitted', 'success'));\n        }\n        catch {\n            dispatch(addAlert('Feedback submission failed', 'error'));\n        }\n        setIsLoading(false);\n    }, [dispatch]);\n\n    const [info, setInfo] = useState([]);\n\n    useEffect(() => {\n        getInfo();\n    }, []);\n\n    const getInfo = async () => {\n        try{\n            const response = await axiosAPI.get(\"event/get-event-by-id/\", {\n                 params: {\n                     attendee_id: new URLSearchParams(window.location.search).get('attendee_id'),  \n                 }\n             });\n            setInfo(response.data[0]); \n        } catch (error) {\n            console.error(error)\n        }\n    } \n\n    const options = [\n        { label: 'Poor', value: 1},\n        { label: 'Fair', value: 2 },\n        { label: 'Average', value: 3},\n        { label: 'Good', value: 4},\n        { label: 'Excellent', value: 5},\n    ];\n\n    const s_options = [\n        { label: 'Very Dissatisfied', value: 1},\n        { label: 'Dissatisfied', value: 2},\n        { label: 'Neutral', value: 3},\n        { label: 'Satisfied', value: 4},\n        { label: 'Very Satisfied', value: 5},\n    ];\n    const l_options = [\n        { label: 'Very Unlikely', value: 1},\n        { label: 'Somewhat Unlikely', value: 2},\n        { label: 'Neutral', value: 3},\n        { label: 'Somewhat Likely', value: 4},\n        { label: 'Very Likely', value: 5},\n    ];\n    const yn_options = [\n        { label: 'Yes', value: 'Yes'},\n        { label: 'No', value: 'No'},\n    ];\n\n    const date_options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n  return (\n\n     <Form\n        name=\"event-feedback\"\n        className=\"event-feedback-form\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n    >\n\n        <p>\n            <strong>Name: </strong>{info.username__first_name} {info.username__last_name}<br/>\n            <strong>Email: </strong>{info.username__email}<br/>\n            <strong>Organization: </strong> {info.events__organizations__name}<br/>\n            <strong>Event: </strong>{info.events__name} <br/>\n            <strong>Location: </strong>{info.events__location}<br/>\n            <strong>Date: </strong>{(new Date(info.events__begindate)).toLocaleString('en-US', date_options)} - {(new Date(info.events__enddate)).toLocaleString('en-US', date_options)}<br/>\n        </p>\n        \n\n        <p>How would you rate your overall experience?</p>\n        <Form.Item\n            name=\"overall\"\n            hasFeedback\n            rules={[{ required: true, message: 'Overall experience rating required.' }]}\n        >\n        <Radio.Group\n              options={options}\n              optionType=\"button\"\n              buttonStyle=\"solid\"\n        />\n        </Form.Item>\n        <p>How satisfied did you feel after volunteering?</p>\n        <Form.Item\n            name=\"satisfaction\"\n            hasFeedback\n            rules={[{ required: true, message: 'Satisfiaction rating required.' }]}\n        >\n        <Radio.Group\n              options={s_options}\n              optionType=\"button\"\n              buttonStyle=\"solid\"\n        />\n        </Form.Item>\n        <p>How likely are you to recommend future volunteer opportunities to your friends?</p>\n        <Form.Item\n            name=\"likely\"\n            hasFeedback\n            rules={[{ required: true, message: 'Recommend rating required.' }]}\n        >\n        <Radio.Group\n              options={l_options}\n              optionType=\"button\"\n              buttonStyle=\"solid\"\n        />\n        </Form.Item>\n        <p>Did the experience meet your expectations?</p>\n        <Form.Item\n            name=\"expectations\"\n            hasFeedback\n            rules = {[{ required: true, message: 'Expectations rating required.' }]}>\n        <Radio.Group options={yn_options}/>\n        </Form.Item>\n        <p>Do you plan to volunteer with us again in the future?</p>\n        <Form.Item\n            name=\"future\"\n            hasFeedback\n            rules = {[{ required: true, message: 'Future rating required.' }]}>\n        <Radio.Group options={yn_options}/>\n        </Form.Item>\n        <p>What could we have done better?</p>\n        <Form.Item\n            name=\"better\"\n            hasFeedback\n        >\n            <TextArea row={6} style={{ width: '100%' }} placeholder=\"Response here\" />\n        </Form.Item>\n        <p>Is there anything else we should know about your volunteer experience?</p>\n        <Form.Item\n            name=\"experience\"\n            hasFeedback        >\n            <TextArea row={6} style={{ width: '100%' }} placeholder=\"Response here\" />\n        </Form.Item>\n         <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"event-feedback-form-button\" loading={isLoading}>\n                Submit feedback\n            </Button>\n        </Form.Item>\n    </Form>\n  );\n};\n\n\nexport default EventFeedbackForm;","import React from 'react';\nimport { Typography } from 'antd';\nimport EventFeedbackForm from '../forms/EventFeedbackForm';\nimport { usePageView } from '../utils/googleAnalytics'\nimport './EventFeedback.css';\n\nconst EventFeedback = () => {\n    usePageView('/feedback');\n    return (\n      <div className='event-feedback-container'>\n            <Typography.Title level={2}>Event Feedback</Typography.Title>\n            <EventFeedbackForm /> \n        </div>\n    );\n};\n\n\nexport default EventFeedback;  \n\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { isAuthenticated } from './api/authenticationApi';\nimport Auth from './pages/Auth';\nimport Home from './pages/Home/Home';\nimport Feed from './pages/Feed';\nimport InviteNoAuth from './pages/InviteNoAuth';\nimport Activate from './pages/Activate';\n// import ForgotPassword from './pages/ForgotPassword';\nimport EventFeedback from './pages/EventFeedback'\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <main>\n      <Switch>\n          <Route exact path=\"/\" \n            render={() =>\n              isAuthenticated() ? (\n                <Feed/>\n              ) : (\n                <Home/>\n              )\n            }\n          />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/activate\" component={Activate} />\n          <Route path=\"/invite\" component={InviteNoAuth} />\n          <Route path=\"/feedback\" component={EventFeedback} />\n      </Switch> \n  </main>\n  );\n}\n\n\nconst Register = () => <Auth isRegister={true}/>;\nconst Login = () => <Auth isRegister={false}/>;\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport ReactGA from 'react-ga';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\nReactGA.initialize('UA-189701909-1');\n\nReactDOM.render(\n  <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter> \n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}